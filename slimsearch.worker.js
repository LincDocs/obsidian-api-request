[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":70,\"nextId\":70,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#🏳️-flags\",\"3\":\"1#url\",\"4\":\"1#method\",\"5\":\"1#body\",\"6\":\"1#headers\",\"7\":\"1#show\",\"8\":\"1#req-uuid\",\"9\":\"1#disabled\",\"10\":\"1#save-as\",\"11\":\"1#auto-update\",\"12\":\"1#format\",\"13\":\"1#properties\",\"14\":\"2\",\"15\":\"2#🔥-features\",\"16\":\"2#⚡-how-to-use\",\"17\":\"2#👨🏻‍💻-code-block\",\"18\":\"3\",\"19\":\"3#🏳️-banderas\",\"20\":\"3#url\",\"21\":\"3#method\",\"22\":\"3#body\",\"23\":\"3#headers\",\"24\":\"3#show\",\"25\":\"3#req-uuid\",\"26\":\"3#disabled\",\"27\":\"3#save-as\",\"28\":\"3#auto-update\",\"29\":\"4\",\"30\":\"4#🔥-caracteristicas\",\"31\":\"4#⚡-como-usar\",\"32\":\"4#👨🏻‍💻-bloque-de-codigo\",\"33\":\"5\",\"34\":\"5#🏳️-flag\",\"35\":\"5#url\",\"36\":\"5#method\",\"37\":\"5#body\",\"38\":\"5#headers\",\"39\":\"5#show\",\"40\":\"5#req-id\",\"41\":\"5#disabled\",\"42\":\"5#save-as\",\"43\":\"6\",\"44\":\"6#🔥-功能\",\"45\":\"6#⚡-如何使用\",\"46\":\"6#👨🏻‍💻-代码块\",\"47\":\"7\",\"48\":\"7#check-bitcoin-or-any-crypto-price\",\"49\":\"7#get-the-weather\",\"50\":\"7#search-movies\",\"51\":\"7#render-data\",\"52\":\"7#get-todos-from-todoist\",\"53\":\"7#your-use-case\",\"54\":\"8\",\"55\":\"8#ver-el-precio-de-bitcoin-o-cualquier-criptomoneda\",\"56\":\"8#obtener-el-clima\",\"57\":\"8#buscar-peliculas\",\"58\":\"8#obtener-mas-de-un-resultado\",\"59\":\"8#obtener-tareas-de-todoist\",\"60\":\"8#tu-caso-de-uso\",\"61\":\"9\",\"62\":\"9#检查比特币-或任何加密货币-价格\",\"63\":\"9#获取天气\",\"64\":\"9#搜索电影\",\"65\":\"9#获得多个结果\",\"66\":\"9#从-todoist-获取-todos\",\"67\":\"9#您的用例\",\"68\":\"10\",\"69\":\"11\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,11],\"1\":[2,27],\"2\":[2,29],\"3\":[1,31],\"4\":[1,25],\"5\":[1,48],\"6\":[1,42],\"7\":[1,109],\"8\":[2,77],\"9\":[1,24],\"10\":[2,29],\"11\":[2,42],\"12\":[1,57],\"13\":[1,44],\"14\":[2,24],\"15\":[2,49],\"16\":[4],\"17\":[3,48],\"18\":[4,24],\"19\":[2,34],\"20\":[1,36],\"21\":[1,28],\"22\":[1,57],\"23\":[1,53],\"24\":[1,104],\"25\":[2,80],\"26\":[1,23],\"27\":[2,29],\"28\":[2,46],\"29\":[2,21],\"30\":[2,49],\"31\":[3],\"32\":[4,49],\"33\":[2,6],\"34\":[2,16],\"35\":[1,19],\"36\":[1,17],\"37\":[1,29],\"38\":[1,26],\"39\":[1,80],\"40\":[2,48],\"41\":[1,22],\"42\":[2,16],\"43\":[2,9],\"44\":[2,18],\"45\":[2],\"46\":[2,33],\"47\":[1,19],\"48\":[6,16],\"49\":[3,19],\"50\":[2,38],\"51\":[2,24],\"52\":[1,33],\"53\":[3,17],\"54\":[3,34],\"55\":[9,16],\"56\":[3,19],\"57\":[2,38],\"58\":[5,19],\"59\":[1,31],\"60\":[4,17],\"61\":[1,4],\"62\":[3,16],\"63\":[1,19],\"64\":[1,24],\"65\":[1,19],\"66\":[2,28],\"67\":[1,6],\"68\":[1,3],\"69\":[1]},\"averageFieldLength\":[1.9857142857142858,32.908690457638556],\"storedFields\":{\"0\":{\"h\":\"🚀 APIRequest\",\"t\":[\"(https://img.shields.io/badge/Español-8A2BE2)](es/index.md)\"]},\"1\":{\"h\":\"👨🏻‍💻 Codeblocks\",\"t\":[\"The codeblock is a versatile block that can be used to write code in different languages. In this case, we will use it to make API requests.\"]},\"2\":{\"h\":\"🏳️ Flags\",\"t\":[\"Flags are the way to specify the parameters of our request.\",\"Flag\",\"Default\",\"url\",\"method\",\"GET\",\"body\",\"headers\",\"show\",\"ALL\",\"req-uuid\",\"req-general\",\"disabled\",\"save-as\",\"auto-update\",\"format\",\"properties\"]},\"3\":{\"h\":\"url\",\"t\":[\"Is the only required flag. It specifies the endpoint of the request.\",\"```req # this is just a comment url: https://jsonplaceholder.typicode.com/users/{{this.id}} ```\",\"!!! note \\\"Where {{this.id}} is a variable (id) defined in the frontmatter.\\\"\"]},\"4\":{\"h\":\"method\",\"t\":[\"Specifies the request method. The default value is GET and the available methods are:\",\"GET\",\"POST\",\"PUT\",\"DELETE\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post ```\"]},\"5\":{\"h\":\"body\",\"t\":[\"Specifies the body of the request. The default value is an empty object. The data should be in JSON format, separating key and value with a colon plus space (, ).\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post body: {\\\"title\\\": {{this.filename}}, \\\"body\\\": \\\"bar\\\", \\\"userId\\\": 1} ```\",\"!!! note \\\"Where {{this.filename}} is the name of the working file.\\\"\"]},\"6\":{\"h\":\"headers\",\"t\":[\"Specifies the headers of the request. The default value is an empty object. The data should be in JSON format, separating key and value with a colon plus space (, ).\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post headers: {\\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"} ```\"]},\"7\":{\"h\":\"show\",\"t\":[\"Specifies the response data to display. See JSONPath examples, or try the online tool by jsonpath-plus.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: $['chess_daily']['last']['rating'] ```\",\"Multiple outputs can be displayed by using [].\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: $.chess_daily[last,best].rating ```\",\"Or you can also use + to get multiple outputs.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: $.chess_daily[last,best].rating + $.chess960_daily[last,best].rating ```\",\"Looping over an array is also possible. The following example retrieves the city from all users.\",\"```req url: https://jsonplaceholder.typicode.com/users show: $..address.city ```\",\"Looping over a specified number of elements of the array is also possible.\",\"```req url: https://jsonplaceholder.typicode.com/users show: $..[:3].address.city ```\",\"It's also possible to loop over a specified range of indexes of the array.\",\"```req url: https://jsonplaceholder.typicode.com/users show: $..[3,2,6].address.city ```\",\"You can access the last element using (@.length-1) or just [-1:].\",\"```req url: https://api.modrinth.com/v2/project/distanthorizons show: $.game_versions[(@.length-1)] ```\",\"To access multiple elements at the same time.\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: $..recenttracks.track[0:][streamable,name,artist] ```\"]},\"8\":{\"h\":\"req-uuid\",\"t\":[\"Specifies the unique identifier of the request. This is useful when we want to store the response in localStorage and use it in other blocks or notes.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: $.name req-uuid: name ```\",\"Stored responses can be accessed using the req-uuid (which won't trigger a new request).\",\"```req url: https://jsonplaceholder.typicode.com/users/1 req-uuid: name ```\",\"Responses can also be accessed using dataview.\",\"```dataview dv.paragraph(localStorage.getItem(\\\"req-UUID\\\")) ```\",\"!!! info \\\"Is mandatory to use req- before whatever you defined in req-uuid flag.\\\"\",\"To remove responses from localStorage, run:\",\"```dataview localStorage.removeItem(\\\"req-name\\\") ```\",\"To remove responses, go to settings and click over the response you want to delete.\"]},\"9\":{\"h\":\"disabled\",\"t\":[\"Disables the request. The codeblock won't be executed.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: $.name req-uuid: name disabled ```\"]},\"10\":{\"h\":\"save-as\",\"t\":[\"Specifies the path to save the response. It'll save the entire response. A file extension is required. It won't create directories.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 save-as: posts/1.json ```\"]},\"11\":{\"h\":\"auto-update\",\"t\":[\"If present, the codeblock will automatically update the response every time is possible. This is only needed when using the flag req-uuid, because the default behavior of the codeblock is to run every time the note is loaded.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 req-uuid: firstPost auto-update save-as: posts/1.json ```\"]},\"12\":{\"h\":\"format\",\"t\":[\"Specifies the format in which the response should be displayed. It can be any string (including html). If more than one output is specified, more then one format should be specified, otherwise it'd just render the first output.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: $.[title,body] format: <h1>{}</h1> <p>{}</p> ```\",\"!!! note \\\"In this example, first {} will be replaced with the title, and second {} will be replaced with the body.\\\"\"]},\"13\":{\"h\":\"properties\",\"t\":[\"!!! warning \\\"To use this flag you need a JSON response and the show flag\\\"\",\"Specifies the frontmatter properties to update with the response. The data should be strings separated by commas. To set internal links use the this [[..]] syntax.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: $.[id,title] properties: id, title ```\"]},\"14\":{\"h\":\"🔎 Overview\",\"t\":[\"APIRequest (APIR) is a plugin for the note taking app Obsidian that allows you to make requests to apis display the response in your notes.\"]},\"15\":{\"h\":\"🔥 Features\",\"t\":[\"Perform requests using various methods such as GET, POST, PUT, and DELETE.\",\"Utilize variables from the front-matter, global variables or even reuse responses from another codeblocks.\",\"Save responses in the localStorage for convenient access and reuse.\",\"Disable code blocks as needed to optimize performance.\",\"Display specific values from responses, providing granular control over the presentation of data.\"]},\"16\":{\"h\":\"⚡ How to use\"},\"17\":{\"h\":\"👨🏻‍💻 Code-block\",\"t\":[\"To use it, create a code-block with the language set to req. Inside the code-block, you can specify url, method, body, headers, etc. See the available flags for more information.\",\"```req url: https://my-json-server.typicode.com/typicode/demo/comments method: post body: {\\\"id\\\":1} headers: {\\\"Accept\\\": \\\"application/json\\\"} show: $.id req-uuid: IDpersona disabled ```\"]},\"18\":{\"h\":\"👨🏻‍💻 Bloque de código\",\"t\":[\"El bloque de código es un bloque versátil que se puede usar para escribir código en diferentes lenguajes. En este caso, lo usaremos para realizar solicitudes.\"]},\"19\":{\"h\":\"🏳️ Banderas\",\"t\":[\"Las banderas son la forma de especificar los parámetros de nuestra solicitud y también el formato en el que queremos nuestra respuesta.\",\"Bandera\",\"Valor predeterminado\",\"url\",\"method\",\"GET\",\"body\",\"headers\",\"show\",\"ALL\",\"req-uuid\",\"disabled\",\"save-as\"]},\"20\":{\"h\":\"url\",\"t\":[\"Es la única bandera obligatoria. Especifica la URL de la solicitud. Se pueden utilizar variables definidas en el frontmatter.\",\"```req # un comentario url: https://jsonplaceholder.typicode.com/users/{{this.id}} ```\",\"!!! note \\\"Donde {{this.id}} es una variable (id) definida en el frontmatter.\\\"\"]},\"21\":{\"h\":\"method\",\"t\":[\"Especifica el método de solicitud. El valor predeterminado es GET y los valores disponibles son:\",\"GET\",\"POST\",\"PUT\",\"DELETE\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post ```\"]},\"22\":{\"h\":\"body\",\"t\":[\"Especifica el cuerpo de la solicitud. El valor predeterminado es un objeto vacío. Los datos deben estar en formato JSON separando las claves y valores con dos puntos y espacio. Se pueden utilizar variables definidas en el frontmatter.\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post body: {\\\"title\\\": {{this.title}}, \\\"body\\\": \\\"bar\\\", \\\"userId\\\": 1} ```\",\"!!! note \\\"Donde {{this.title}} es una variable (title) definida en el frontmatter.\\\"\"]},\"23\":{\"h\":\"headers\",\"t\":[\"Especifica los encabezados de la solicitud. El valor predeterminado es un objeto vacío. Los datos deben estar en formato JSON separando las claves y valores con dos puntos y espacio. Se pueden utilizar variables definidas en el frontmatter.\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post headers: {\\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"} ```\"]},\"24\":{\"h\":\"show\",\"t\":[\"Especifica los datos de respuesta que se van a mostrar. Ver ejemplos de JSONPath, o prueba la herramienta online de jsonpath-plus.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: $['chess_daily']['last']['rating'] ```\",\"Se pueden mostrar múltiples resultados usando [].\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: $.chess_daily[last,best].rating ```\",\"También es posible iterar sobre un arreglo. El siguiente ejemplo muestra la ciudad de todos los usuarios.\",\"```req url: https://jsonplaceholder.typicode.com/users show: $..address.city ```\",\"También es posible iterar sobre un número especificado de elementos del arreglo.\",\"```req url: https://jsonplaceholder.typicode.com/users show: $..[:3].address.city ```\",\"También es posible iterar sobre un rango especificado de índices del arreglo.\",\"```req url: https://jsonplaceholder.typicode.com/users show: $..[3,2,6].address.city ```\",\"Puedes acceder al último elemento usando (@.length-1) o simplemente [-1:].\",\"```req url: https://api.modrinth.com/v2/project/distanthorizons show: $.game_versions[(@.length-1)] ```\",\"Para acceder a multiples resultados podemos usar:\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: $..recenttracks.track[0:][streamable,name,artist] ```\"]},\"25\":{\"h\":\"req-uuid\",\"t\":[\"Especifica el ID con la que se almacenará la solicitud. Esto es útil cuando queremos almacenar la respuesta en localStorage y usarla en otros bloques o notas.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: $.name req-uuid: name ```\",\"Las respuestas almacenadas se pueden ver usando el req-uuid con la bandera disabled (que no activará una nueva solicitud).\",\"```req url: https://jsonplaceholder.typicode.com/users/1 req-uuid: name disabled ```\",\"Las respuestas también se pueden ver usando dataview.\",\"```dataview dv.paragraph(localStorage.getItem(\\\"req-name\\\")) ```\",\"!!! info \\\"Es obligatorio usar req- antes de lo que sea que hayas definido en la bandera req-uuid.\\\"\",\"Para eliminar respuestas de localStorage, ejecuta:\",\"```dataview localStorage.removeItem(\\\"req-name\\\") ```\",\"Para eliminar todas las respuestas, ve a configuraciones y haz clic sobre la respuesta que quieras eliminar.\"]},\"26\":{\"h\":\"disabled\",\"t\":[\"Deshabilita la solicitud. El codeblock no se ejecutará.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: $.name req-uuid: name disabled ```\"]},\"27\":{\"h\":\"save-as\",\"t\":[\"Especifica la ruta para guardar la respuesta. Guardará toda la respuesta. Se requiere una extensión de archivo. No creará directorios.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 save-as: posts/1.json ```\"]},\"28\":{\"h\":\"auto-update\",\"t\":[\"El codeblock se actualizará de manera automatica cada que sea posible. Esto solo es necesario cuando la bandera req-uuid está precente, porque el comportamiento predeterminado del codeblock es ejecutarse cada vez que se carga la nota.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 req-uuid: firstPost auto-update save-as: posts/1.json ```\"]},\"29\":{\"h\":\"🔎 APIRequest\",\"t\":[\"APIRequest (APIR) es un plugin para Obsidian que te permite realizar solicitudes HTTP y mostrar la respuesta en tus notas.\"]},\"30\":{\"h\":\"🔥 Características\",\"t\":[\"Realiza solicitudes HTTP utilizando varios métodos como GET, POST, PUT y DELETE.\",\"Utiliza variables del front-matter dentro de bloques de código.\",\"Guarda respuestas en localStorage para un acceso y reutilización convenientes.\",\"Desactiva bloques de código según sea necesario para optimizar el rendimiento.\",\"Muestra valores específicos de las respuestas, proporcionando un control detallado sobre la presentación de datos.\"]},\"31\":{\"h\":\"⚡ Cómo usar\"},\"32\":{\"h\":\"👨🏻‍💻 Bloque de código\",\"t\":[\"Para usarlo, crea un bloque de código con el lenguaje establecido en req. Dentro del bloque de código, puedes especificar url, method, body, headers, etc. Consulta las banderas disponibles para más información.\",\"```req url: https://my-json-server.typicode.com/typicode/demo/comments method: post body: {\\\"id\\\":1} headers: {\\\"Accept\\\": \\\"application/json\\\"} show: $.id req-uuid: id-persona disabled ```\"]},\"33\":{\"h\":\"👨🏻‍💻 代码块\",\"t\":[\"codeblock 是一个多功能块，可用于用不同语言编写代码。在本例中，我们将使用它来发出请求。\"]},\"34\":{\"h\":\"🏳️ Flag\",\"t\":[\"Flag是指定请求参数以及我们想要的响应格式的方式。\",\"标志\",\"默认\",\"url\",\"method\",\"GET\",\"body\",\"headers\",\"show\",\"ALL\",\"req-id\",\"req-general\",\"disabled\",\"save-as\"]},\"35\":{\"h\":\"url\",\"t\":[\"是唯一的必需标志。它指定请求的端点。可以使用 frontmatter 中定义的变量。\",\"```req url: https://jsonplaceholder.typicode.com/users/{{this.id}} ```\",\"!!! note \\\"其中{{this.id}}是frontmatter中定义的变量（id）。\\\"\"]},\"36\":{\"h\":\"method\",\"t\":[\"指定请求方法。默认值为 GET，可用值为：\",\"GET\",\"POST\",\"PUT\",\"DELETE\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post ```\"]},\"37\":{\"h\":\"body\",\"t\":[\"指定请求的正文。默认值为空对象。数据应为 JSON 格式，双引号用冒号和空格分隔键和值。可以使用 frontmatter 中定义的变量。\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post body: {\\\"title\\\": {{this.title}}, \\\"body\\\": \\\"bar\\\", \\\"userId\\\": 1} ```\",\"!!! note \\\"其中 {{this.title}} 是 frontmatter 中定义的变量（title）。\\\"\"]},\"38\":{\"h\":\"headers\",\"t\":[\"指定请求的标头。默认值为空对象。数据应为 JSON 格式，双引号将键和值用冒号和空格分隔。可以使用 frontmatter 中定义的变量。\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post headers: {\\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"} ```\"]},\"39\":{\"h\":\"show\",\"t\":[\"指定要显示的响应数据。使用右箭头 -> 访问嵌套对象。默认值为 ALL。\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating ```\",\"可以通过用逗号分隔来显示多个输出。\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating, chess_daily -> best -> rating format: <p>Last game: {}</p> <strong>Best game: {}</strong> render ```\",\"也可以使用 {..} 循环遍历数组。以下示例从所有用户中检索城市 (city)。\",\"```req url: https://jsonplaceholder.typicode.com/users show: {..} -> address -> city ```\",\"也可以使用 {n..n} 循环遍历数组中指定数量的元素。\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0..2} -> address -> city ```\",\"也可以使用 {n-n-n} 循环遍历数组的指定范围的索引。\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0-2-1} -> address -> city ```\",\"您可以使用 {-1} 访问最后一个元素...\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {-1} ```\",\"...或者使用 {len} 获取数组的长度。\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {len} ```\",\"使用 {..} 时，若要同时访问多个元素，请使用 & 分隔键，并使用 . 访问值。\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\"]},\"40\":{\"h\":\"req-id\",\"t\":[\"指定请求的 ID。默认值为 req-general。当我们想要将响应存储在 localStorage 中并在其他块或注释中使用它时，这很有用。\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name ```\",\"可以使用带有 disabled 标志的 req-id 访问存储的响应（不会触发新请求）。\",\"```req url: https://jsonplaceholder.typicode.com/users/1 req-id: name disabled ```\",\"也可以使用 dataview 访问响应。\",\"```dataview dv.paragraph(localStorage.getItem(\\\"req-name\\\")) ```\",\"!!! info \\\"在req-id标志中定义的任何内容之前，必须使用req-\\\"\",\"要从 localStorage 中删除响应，请运行：\",\"```dataview localStorage.removeItem(\\\"req-name\\\") ```\",\"要删除所有响应，请转到设置并单击 Clear ID's (清除ID) 按钮。\"]},\"41\":{\"h\":\"disabled\",\"t\":[\"禁用请求。如果指定了 req-id，APIR 将在localStorage中检查响应。如果未找到，它将发出新请求并存储它。之后，APIR 将使用存储的响应。\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name disabled ```\"]},\"42\":{\"h\":\"save-as\",\"t\":[\"指定保存响应的路径。它将保存整个响应。需要文件扩展名。它不会创建目录。\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 save-as: posts/1.json ```\"]},\"43\":{\"h\":\"🔎 概述\",\"t\":[\"APIRequest (APIR) 是笔记应用 Obsidian 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。\"]},\"44\":{\"h\":\"🔥 功能\",\"t\":[\"使用各种方法执行 HTTP 请求，例如 GET、POST、PUT 和 DELETE。\",\"在代码块内利用前言中的变量。\",\"将响应保存在 localStorage 中，以方便访问和重用。\",\"根据需要禁用代码块以优化性能。\",\"以指定的间隔多次重复请求，促进自动化任务或连续数据检索而无需人工干预。\"]},\"45\":{\"h\":\"⚡ 如何使用\"},\"46\":{\"h\":\"👨🏻‍💻 代码块\",\"t\":[\"要使用它，请创建一个代码块，并将语言设置为 req。在代码块内，您可以指定url、method、body、headers 等。有关更多信息，请参阅可用标志。\",\"```req url: https://my-json-server.typicode.com/typicode/demo/comments method: post body: {\\\"id\\\":1} headers: {\\\"Accept\\\": \\\"application/json\\\"} show: $.id req-uuid: id-persona disabled ```\"]},\"47\":{\"h\":\"Usecase\",\"t\":[\"A collection of use cases for this plugin. If you have a one, please share it with us.\"]},\"48\":{\"h\":\"Check BITCOIN (or any crypto) price\",\"t\":[\"```req url: https://api.coincap.io/v2/rates/bitcoin show: $.data.rateUsd ```\",\"64992.8972508856324769\"]},\"49\":{\"h\":\"Get the weather\",\"t\":[\"```req url: https://api.openweathermap.org/data/2.5/weather?q=<CITY>&appid=YOUR_API_KEY show: $.main.temp ```\"]},\"50\":{\"h\":\"Search movies\",\"t\":[\"```req url: https://api.themoviedb.org/3/search/movie?query={{this.title}}&api_key=YOUR_API_KEY show: $.results[0:].title ```\",\"!!! info \\\"Note the use of {{this.title}}. This is a feature that allows you to pass front-matter properties.\\\"\"]},\"51\":{\"h\":\"Render data\",\"t\":[\"```req url: https://mapi.mobilelegends.com/hero/detail?id=1 show: $.data[cover_picture,name,type] format: ![img]({}) <br> <strong>Name:</strong> {} <br> <strong>Type:</strong> {} ```\"]},\"52\":{\"h\":\"\",\"t\":[\"```req url: https://api.todoist.com/rest/v2/tasks headers: {\\\"Authorization\\\": \\\"Bearer YOUR_TOKEN\\\"} show: $..content format: - [ ] {} req-id: todos ```\",\"!!! warning \\\"This will save the response in localStorage under the key req-todos\\\"\"]},\"53\":{\"h\":\"Your use case\",\"t\":[\"If you want to share your use case, please feel free to open a PR or a Issue.\"]},\"54\":{\"h\":\"Ejemplos de uso\",\"t\":[\"A collection of use cases for this plugin. If you have a one, please share it with us. Una colección ejemplos de uso para este plugin. Si tienes uno, por favor compártelo con nosotros.\"]},\"55\":{\"h\":\"Ver el precio de BITCOIN (o cualquier criptomoneda)\",\"t\":[\"```req url: https://api.coincap.io/v2/rates/bitcoin show: $.data.rateUsd ```\",\"64992.8972508856324769\"]},\"56\":{\"h\":\"Obtener el clima\",\"t\":[\"```req url: https://api.openweathermap.org/data/2.5/weather?q=<CITY>&appid=YOUR_API_KEY show: $.main.temp ```\"]},\"57\":{\"h\":\"Buscar peliculas\",\"t\":[\"```req url: https://api.themoviedb.org/3/search/movie?query={{this.title}}&api_key=YOUR_API_KEY show: $.results[0:].title ```\",\"!!! info \\\"Nota el uso de {{this.title}}. Esta es una característica que te permite pasar propiedades del front-matter.\\\"\"]},\"58\":{\"h\":\"Obtener más de un resultado\",\"t\":[\"```req url: https://mapi.mobilelegends.com/hero/detail?id={{this.file.name}} show: $.data[cover_picture,name,type] ```\"]},\"59\":{\"h\":\"\",\"t\":[\"```req url: https://api.todoist.com/rest/v2/tasks headers: {\\\"Authorization\\\": \\\"Bearer YOUR_TOKEN\\\"} show: $..content req-uuid: todos ```\",\"!!! warning \\\"Esto guardará la respuesta en localStorage bajo la clave req-todos\\\"\"]},\"60\":{\"h\":\"Tu caso de uso\",\"t\":[\"Si deseas compartir tu caso de uso, por favor siéntete libre de abrir una PR o un Issue\"]},\"61\":{\"h\":\"用例\",\"t\":[\"此插件的用例集合。 如果您有，请与我们分享。\"]},\"62\":{\"h\":\"检查比特币（或任何加密货币）价格\",\"t\":[\"```req url: https://api.coincap.io/v2/rates/bitcoin show: $.data.rateUsd ```\",\"64992.8972508856324769\"]},\"63\":{\"h\":\"获取天气\",\"t\":[\"```req url: https://api.openweathermap.org/data/2.5/weather?q=<CITY>&appid=YOUR_API_KEY show: $.main.temp ```\"]},\"64\":{\"h\":\"搜索电影\",\"t\":[\"```req url: https://api.themoviedb.org/3/search/movie?query={{this.title}}&api_key=YOUR_API_KEY show: $.results[0:].title ```\",\"!!! info \\\"请注意使用 {{this.title}}。此功能允许您传递前置属性。\\\"\"]},\"65\":{\"h\":\"获得多个结果\",\"t\":[\"```req url: https://mapi.mobilelegends.com/hero/detail?id={{this.file.name}} show: $.data[cover_picture,name,type] ```\"]},\"66\":{\"h\":\"获取 TODOS\",\"t\":[\"```req url: https://api.todoist.com/rest/v2/tasks headers: {\\\"Authorization\\\": \\\"Bearer YOUR_TOKEN\\\"} show: $..content format: - [ ] {} req-id: todos ```\",\"!!! warning \\\"这将把响应保存在 localStorage 中的键 req-todos 下\\\"\"]},\"67\":{\"h\":\"您的用例\",\"t\":[\"如果您想分享您的用例，请随时打开 PR 或 Issue。\"]},\"68\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"69\":{\"h\":\"\"}},\"dirtCount\":0,\"index\":[[\"404\",{\"1\":{\"68\":1}}],[\"您的用例\",{\"0\":{\"67\":1}}],[\"您可以指定url\",{\"1\":{\"46\":1}}],[\"您可以使用\",{\"1\":{\"39\":1}}],[\"下\",{\"1\":{\"66\":1}}],[\"这将把响应保存在\",{\"1\":{\"66\":1}}],[\"这很有用\",{\"1\":{\"40\":1}}],[\"获得多个结果\",{\"0\":{\"65\":1}}],[\"获取\",{\"0\":{\"66\":1}}],[\"获取天气\",{\"0\":{\"63\":1}}],[\"获取数组的长度\",{\"1\":{\"39\":1}}],[\"此功能允许您传递前置属性\",{\"1\":{\"64\":1}}],[\"此插件的用例集合\",{\"1\":{\"61\":1}}],[\"搜索电影\",{\"0\":{\"64\":1}}],[\"价格\",{\"0\":{\"62\":1}}],[\"检查比特币\",{\"0\":{\"62\":1}}],[\"用例\",{\"0\":{\"61\":1}}],[\"q=<city>\",{\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"quieras\",{\"1\":{\"25\":1}}],[\"query=\",{\"1\":{\"50\":1,\"57\":1,\"64\":1}}],[\"queremos\",{\"1\":{\"19\":1,\"25\":1}}],[\"que\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"25\":5,\"28\":2,\"29\":1,\"57\":1}}],[\"5\",{\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"有关更多信息\",{\"1\":{\"46\":1}}],[\"等\",{\"1\":{\"46\":1}}],[\"并将语言设置为\",{\"1\":{\"46\":1}}],[\"并使用\",{\"1\":{\"39\":1}}],[\"如何使用\",{\"0\":{\"45\":1}}],[\"如果您想分享您的用例\",{\"1\":{\"67\":1}}],[\"如果您有\",{\"1\":{\"61\":1}}],[\"如果未找到\",{\"1\":{\"41\":1}}],[\"如果指定了\",{\"1\":{\"41\":1}}],[\"促进自动化任务或连续数据检索而无需人工干预\",{\"1\":{\"44\":1}}],[\"根据需要禁用代码块以优化性能\",{\"1\":{\"44\":1}}],[\"以指定的间隔多次重复请求\",{\"1\":{\"44\":1}}],[\"以方便访问和重用\",{\"1\":{\"44\":1}}],[\"以下示例从所有用户中检索城市\",{\"1\":{\"39\":1}}],[\"和\",{\"1\":{\"44\":1}}],[\"例如\",{\"1\":{\"44\":1}}],[\"功能\",{\"0\":{\"44\":1}}],[\"或\",{\"1\":{\"67\":1}}],[\"或任何加密货币\",{\"0\":{\"62\":1}}],[\"或其他来源发出请求并在笔记中显示响应\",{\"1\":{\"43\":1}}],[\"或者使用\",{\"1\":{\"39\":1}}],[\"的一个插件\",{\"1\":{\"43\":1}}],[\"概述\",{\"0\":{\"43\":1}}],[\"需要文件扩展名\",{\"1\":{\"42\":1}}],[\"将响应保存在\",{\"1\":{\"44\":1}}],[\"将使用存储的响应\",{\"1\":{\"41\":1}}],[\"将在localstorage中检查响应\",{\"1\":{\"41\":1}}],[\"之后\",{\"1\":{\"41\":1}}],[\"它允许您向\",{\"1\":{\"43\":1}}],[\"它不会创建目录\",{\"1\":{\"42\":1}}],[\"它将保存整个响应\",{\"1\":{\"42\":1}}],[\"它将发出新请求并存储它\",{\"1\":{\"41\":1}}],[\"它指定请求的端点\",{\"1\":{\"35\":1}}],[\"禁用请求\",{\"1\":{\"41\":1}}],[\"按钮\",{\"1\":{\"40\":1}}],[\"清除id\",{\"1\":{\"40\":1}}],[\"要使用它\",{\"1\":{\"46\":1}}],[\"要删除所有响应\",{\"1\":{\"40\":1}}],[\"要从\",{\"1\":{\"40\":1}}],[\"请随时打开\",{\"1\":{\"67\":1}}],[\"请注意使用\",{\"1\":{\"64\":1}}],[\"请与我们分享\",{\"1\":{\"61\":1}}],[\"请参阅可用标志\",{\"1\":{\"46\":1}}],[\"请创建一个代码块\",{\"1\":{\"46\":1}}],[\"请求\",{\"1\":{\"44\":1}}],[\"请转到设置并单击\",{\"1\":{\"40\":1}}],[\"请运行\",{\"1\":{\"40\":1}}],[\"请使用\",{\"1\":{\"39\":1}}],[\"必须使用req\",{\"1\":{\"40\":1}}],[\"在代码块内\",{\"1\":{\"46\":1}}],[\"在代码块内利用前言中的变量\",{\"1\":{\"44\":1}}],[\"在req\",{\"1\":{\"40\":1}}],[\"在本例中\",{\"1\":{\"33\":1}}],[\"不会触发新请求\",{\"1\":{\"40\":1}}],[\"中的键\",{\"1\":{\"66\":1}}],[\"中\",{\"1\":{\"44\":1}}],[\"中删除响应\",{\"1\":{\"40\":1}}],[\"中并在其他块或注释中使用它时\",{\"1\":{\"40\":1}}],[\"中定义的变量\",{\"1\":{\"35\":1,\"37\":2,\"38\":1}}],[\"当我们想要将响应存储在\",{\"1\":{\"40\":1}}],[\"分隔键\",{\"1\":{\"39\":1}}],[\"若要同时访问多个元素\",{\"1\":{\"39\":1}}],[\"时\",{\"1\":{\"39\":1}}],[\"使用各种方法执行\",{\"1\":{\"44\":1}}],[\"使用\",{\"1\":{\"39\":1}}],[\"使用右箭头\",{\"1\":{\"39\":1}}],[\"访问响应\",{\"1\":{\"40\":1}}],[\"访问存储的响应\",{\"1\":{\"40\":1}}],[\"访问值\",{\"1\":{\"39\":1}}],[\"访问最后一个元素\",{\"1\":{\"39\":1}}],[\"访问嵌套对象\",{\"1\":{\"39\":1}}],[\"循环遍历数组的指定范围的索引\",{\"1\":{\"39\":1}}],[\"循环遍历数组中指定数量的元素\",{\"1\":{\"39\":1}}],[\"循环遍历数组\",{\"1\":{\"39\":1}}],[\"也可以使用\",{\"1\":{\"39\":3,\"40\":1}}],[\">\",{\"1\":{\"39\":18}}],[\"指定保存响应的路径\",{\"1\":{\"42\":1}}],[\"指定要显示的响应数据\",{\"1\":{\"39\":1}}],[\"指定请求的\",{\"1\":{\"40\":1}}],[\"指定请求的标头\",{\"1\":{\"38\":1}}],[\"指定请求的正文\",{\"1\":{\"37\":1}}],[\"指定请求方法\",{\"1\":{\"36\":1}}],[\"双引号将键和值用冒号和空格分隔\",{\"1\":{\"38\":1}}],[\"双引号用冒号和空格分隔键和值\",{\"1\":{\"37\":1}}],[\"格式\",{\"1\":{\"37\":1,\"38\":1}}],[\"数据应为\",{\"1\":{\"37\":1,\"38\":1}}],[\"其中\",{\"1\":{\"35\":1,\"37\":1}}],[\"可以通过用逗号分隔来显示多个输出\",{\"1\":{\"39\":1}}],[\"可以使用带有\",{\"1\":{\"40\":1}}],[\"可以使用\",{\"1\":{\"35\":1,\"37\":1,\"38\":1}}],[\"可用值为\",{\"1\":{\"36\":1}}],[\"可用于用不同语言编写代码\",{\"1\":{\"33\":1}}],[\"是笔记应用\",{\"1\":{\"43\":1}}],[\"是\",{\"1\":{\"37\":1}}],[\"是frontmatter中定义的变量\",{\"1\":{\"35\":1}}],[\"是唯一的必需标志\",{\"1\":{\"35\":1}}],[\"是一个多功能块\",{\"1\":{\"33\":1}}],[\"默认值为空对象\",{\"1\":{\"37\":1,\"38\":1}}],[\"默认值为\",{\"1\":{\"36\":1,\"39\":1,\"40\":1}}],[\"默认\",{\"1\":{\"34\":1}}],[\"标志的\",{\"1\":{\"40\":1}}],[\"标志\",{\"1\":{\"34\":1}}],[\"我们将使用它来发出请求\",{\"1\":{\"33\":1}}],[\"代码块\",{\"0\":{\"33\":1,\"46\":1}}],[\"útil\",{\"1\":{\"25\":1}}],[\"último\",{\"1\":{\"24\":1}}],[\"única\",{\"1\":{\"20\":1}}],[\"índices\",{\"1\":{\"24\":1}}],[\"y\",{\"1\":{\"19\":1,\"21\":1,\"22\":2,\"23\":2,\"25\":2,\"29\":1,\"30\":2}}],[\"your\",{\"0\":{\"53\":1},\"1\":{\"14\":1,\"52\":1,\"53\":1,\"59\":1,\"66\":1}}],[\"you\",{\"1\":{\"7\":2,\"8\":2,\"13\":1,\"14\":1,\"17\":1,\"47\":1,\"50\":1,\"53\":1,\"54\":1}}],[\"⚡\",{\"0\":{\"16\":1,\"31\":1,\"45\":1}}],[\"<strong>type\",{\"1\":{\"51\":1}}],[\"<strong>name\",{\"1\":{\"51\":1}}],[\"<strong>best\",{\"1\":{\"39\":1}}],[\"<br>\",{\"1\":{\"51\":2}}],[\"<p>last\",{\"1\":{\"39\":1}}],[\"<p>\",{\"1\":{\"12\":1}}],[\"<\",{\"1\":{\"12\":2,\"39\":2,\"51\":2}}],[\"<h1>\",{\"1\":{\"12\":1}}],[\"0\",{\"1\":{\"7\":2,\"24\":2,\"39\":3,\"50\":1,\"57\":1,\"64\":1}}],[\"guarda\",{\"1\":{\"30\":1}}],[\"guardará\",{\"1\":{\"27\":1,\"59\":1}}],[\"guardar\",{\"1\":{\"27\":1}}],[\"granular\",{\"1\":{\"15\":1}}],[\"global\",{\"1\":{\"15\":1}}],[\"go\",{\"1\":{\"8\":1}}],[\"game\",{\"1\":{\"7\":1,\"24\":1,\"39\":4}}],[\"general\",{\"1\":{\"2\":1,\"34\":1,\"40\":1}}],[\"getitem\",{\"1\":{\"8\":1,\"25\":1,\"40\":1}}],[\"getrecenttracks\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"get\",{\"0\":{\"49\":1},\"1\":{\"2\":1,\"4\":2,\"7\":1,\"15\":1,\"19\":1,\"21\":2,\"30\":1,\"34\":1,\"36\":2,\"44\":1}}],[\"64992\",{\"1\":{\"48\":1,\"55\":1,\"62\":1}}],[\"6\",{\"1\":{\"7\":1,\"24\":1}}],[\"2\",{\"1\":{\"7\":2,\"24\":2,\"39\":3,\"49\":1,\"56\":1,\"63\":1}}],[\"3\",{\"1\":{\"7\":2,\"24\":2,\"50\":1,\"57\":1,\"64\":1}}],[\"len\",{\"1\":{\"39\":2}}],[\"lenguaje\",{\"1\":{\"32\":1}}],[\"lenguajes\",{\"1\":{\"18\":1}}],[\"length\",{\"1\":{\"7\":2,\"24\":2}}],[\"libre\",{\"1\":{\"60\":1}}],[\"links\",{\"1\":{\"13\":1}}],[\"limit=4\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"ll\",{\"1\":{\"10\":1}}],[\"los\",{\"1\":{\"19\":1,\"21\":1,\"22\":1,\"23\":2,\"24\":2}}],[\"lo\",{\"1\":{\"18\":1,\"25\":1}}],[\"loaded\",{\"1\":{\"11\":1}}],[\"localstorage\",{\"1\":{\"8\":4,\"15\":1,\"25\":4,\"30\":1,\"40\":4,\"44\":1,\"52\":1,\"59\":1,\"66\":1}}],[\"loop\",{\"1\":{\"7\":1}}],[\"looping\",{\"1\":{\"7\":2}}],[\"la\",{\"1\":{\"19\":1,\"20\":3,\"22\":1,\"23\":1,\"24\":2,\"25\":6,\"26\":1,\"27\":3,\"28\":2,\"29\":1,\"30\":1,\"59\":2}}],[\"las\",{\"1\":{\"19\":1,\"22\":1,\"23\":1,\"25\":3,\"30\":1,\"32\":1}}],[\"last\",{\"1\":{\"7\":5,\"24\":2,\"39\":2}}],[\"language\",{\"1\":{\"17\":1}}],[\"languages\",{\"1\":{\"1\":1}}],[\"+\",{\"1\":{\"7\":2}}],[\"ruta\",{\"1\":{\"27\":1}}],[\"run\",{\"1\":{\"8\":1,\"11\":1}}],[\"rateusd\",{\"1\":{\"48\":1,\"55\":1,\"62\":1}}],[\"rates\",{\"1\":{\"48\":1,\"55\":1,\"62\":1}}],[\"rating\",{\"1\":{\"7\":4,\"24\":2,\"39\":3}}],[\"rango\",{\"1\":{\"24\":1}}],[\"range\",{\"1\":{\"7\":1}}],[\"rendimiento\",{\"1\":{\"30\":1}}],[\"render\",{\"0\":{\"51\":1},\"1\":{\"12\":1,\"39\":1}}],[\"reutilización\",{\"1\":{\"30\":1}}],[\"reuse\",{\"1\":{\"15\":2}}],[\"realiza\",{\"1\":{\"30\":1}}],[\"realizar\",{\"1\":{\"18\":1,\"29\":1}}],[\"rest\",{\"1\":{\"52\":1,\"59\":1,\"66\":1}}],[\"resultado\",{\"0\":{\"58\":1}}],[\"resultados\",{\"1\":{\"24\":2}}],[\"results\",{\"1\":{\"50\":1,\"57\":1,\"64\":1}}],[\"respuestas\",{\"1\":{\"25\":4,\"30\":2}}],[\"respuesta\",{\"1\":{\"19\":1,\"24\":1,\"25\":2,\"27\":2,\"29\":1,\"59\":1}}],[\"responses\",{\"1\":{\"8\":4,\"15\":3}}],[\"response\",{\"1\":{\"7\":1,\"8\":2,\"10\":2,\"11\":1,\"12\":1,\"13\":2,\"14\":1,\"52\":1}}],[\"replaced\",{\"1\":{\"12\":2}}],[\"removeitem\",{\"1\":{\"8\":1,\"25\":1,\"40\":1}}],[\"remove\",{\"1\":{\"8\":2}}],[\"recenttracks\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"retrieves\",{\"1\":{\"7\":1}}],[\"requiere\",{\"1\":{\"27\":1}}],[\"required\",{\"1\":{\"3\":1,\"10\":1}}],[\"request\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"8\":2,\"9\":1}}],[\"requests\",{\"1\":{\"1\":1,\"14\":1,\"15\":1}}],[\"req\",{\"0\":{\"8\":1,\"25\":1,\"40\":1},\"1\":{\"2\":2,\"8\":7,\"9\":1,\"11\":2,\"17\":2,\"19\":1,\"25\":7,\"26\":1,\"28\":2,\"32\":2,\"34\":2,\"40\":6,\"41\":2,\"46\":2,\"52\":2,\"59\":2,\"66\":2}}],[\"$\",{\"1\":{\"7\":9,\"8\":1,\"9\":1,\"12\":1,\"13\":1,\"17\":1,\"24\":7,\"25\":1,\"26\":1,\"32\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1}}],[\"8972508856324769\",{\"1\":{\"48\":1,\"55\":1,\"62\":1}}],[\"8\",{\"1\":{\"6\":1,\"23\":1,\"38\":1}}],[\"8a2be2\",{\"1\":{\"0\":1}}],[\"n\",{\"1\":{\"39\":5}}],[\"nosotros\",{\"1\":{\"54\":1}}],[\"no\",{\"1\":{\"25\":1,\"26\":1,\"27\":1}}],[\"not\",{\"1\":{\"68\":1}}],[\"nota\",{\"1\":{\"28\":1,\"57\":1}}],[\"notas\",{\"1\":{\"25\":1,\"29\":1}}],[\"notes\",{\"1\":{\"8\":1,\"14\":1}}],[\"note\",{\"1\":{\"3\":1,\"5\":1,\"11\":1,\"12\":1,\"14\":1,\"20\":1,\"22\":1,\"35\":1,\"37\":1,\"50\":1}}],[\"número\",{\"1\":{\"24\":1}}],[\"nueva\",{\"1\":{\"25\":1}}],[\"nuestra\",{\"1\":{\"19\":2}}],[\"number\",{\"1\":{\"7\":1}}],[\"necesario\",{\"1\":{\"28\":1,\"30\":1}}],[\"need\",{\"1\":{\"13\":1}}],[\"needed\",{\"1\":{\"11\":1,\"15\":1}}],[\"new\",{\"1\":{\"8\":1}}],[\"name\",{\"1\":{\"5\":1,\"7\":1,\"8\":4,\"9\":2,\"24\":1,\"25\":5,\"26\":2,\"39\":2,\"40\":5,\"41\":2,\"51\":1,\"58\":2,\"65\":2}}],[\"1\",{\"1\":{\"5\":1,\"7\":3,\"8\":2,\"9\":1,\"10\":2,\"11\":2,\"12\":1,\"13\":1,\"17\":1,\"22\":1,\"24\":3,\"25\":2,\"26\":1,\"27\":2,\"28\":2,\"32\":1,\"37\":1,\"39\":3,\"40\":2,\"41\":1,\"42\":2,\"46\":1}}],[\"key=your\",{\"1\":{\"50\":1,\"57\":1,\"64\":1}}],[\"key=api\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"key\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"24\":1,\"39\":1,\"49\":1,\"50\":1,\"52\":1,\"56\":1,\"57\":1,\"63\":1,\"64\":1}}],[\"vez\",{\"1\":{\"28\":1}}],[\"ve\",{\"1\":{\"25\":1}}],[\"ver\",{\"0\":{\"55\":1},\"1\":{\"24\":1,\"25\":2}}],[\"versátil\",{\"1\":{\"18\":1}}],[\"versions\",{\"1\":{\"7\":1,\"24\":1,\"39\":2}}],[\"versatile\",{\"1\":{\"1\":1}}],[\"v2\",{\"1\":{\"7\":1,\"24\":1,\"39\":2,\"48\":1,\"52\":1,\"55\":1,\"59\":1,\"62\":1,\"66\":1}}],[\"van\",{\"1\":{\"24\":1}}],[\"vacío\",{\"1\":{\"22\":1,\"23\":1}}],[\"valores\",{\"1\":{\"21\":1,\"22\":1,\"23\":1,\"30\":1}}],[\"valor\",{\"1\":{\"19\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"values\",{\"1\":{\"15\":1}}],[\"value\",{\"1\":{\"4\":1,\"5\":2,\"6\":2}}],[\"varios\",{\"1\":{\"30\":1}}],[\"various\",{\"1\":{\"15\":1}}],[\"variables\",{\"1\":{\"15\":2,\"20\":1,\"22\":1,\"23\":1,\"30\":1}}],[\"variable\",{\"1\":{\"3\":1,\"20\":1,\"22\":1}}],[\"```dataview\",{\"1\":{\"8\":2,\"25\":2,\"40\":2}}],[\"```\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":4,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"17\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":7,\"25\":4,\"26\":1,\"27\":1,\"28\":1,\"32\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":8,\"40\":4,\"41\":1,\"42\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1}}],[\"```req\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"17\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":7,\"25\":2,\"26\":1,\"27\":1,\"28\":1,\"32\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":8,\"40\":2,\"41\":1,\"42\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1}}],[\"jsonpath\",{\"1\":{\"7\":2,\"24\":2}}],[\"jsonplaceholder\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":3,\"8\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":3,\"25\":2,\"26\":1,\"27\":1,\"28\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":3,\"40\":2,\"41\":1,\"42\":1}}],[\"json\",{\"1\":{\"5\":1,\"6\":2,\"10\":1,\"11\":1,\"13\":1,\"17\":2,\"22\":1,\"23\":2,\"27\":1,\"28\":1,\"32\":2,\"37\":1,\"38\":2,\"42\":1,\"46\":2}}],[\"just\",{\"1\":{\"3\":1,\"7\":1,\"12\":1}}],[\"ejecutarse\",{\"1\":{\"28\":1}}],[\"ejecutará\",{\"1\":{\"26\":1}}],[\"ejecuta\",{\"1\":{\"25\":1}}],[\"ejemplo\",{\"1\":{\"24\":1}}],[\"ejemplos\",{\"0\":{\"54\":1},\"1\":{\"24\":1,\"54\":1}}],[\"eliminar\",{\"1\":{\"25\":3}}],[\"el\",{\"0\":{\"55\":1,\"56\":1},\"1\":{\"18\":1,\"19\":2,\"20\":2,\"21\":2,\"22\":4,\"23\":2,\"24\":1,\"25\":2,\"26\":1,\"28\":2,\"30\":1,\"32\":1,\"57\":1}}],[\"elemento\",{\"1\":{\"24\":1}}],[\"elementos\",{\"1\":{\"24\":1}}],[\"element\",{\"1\":{\"7\":1}}],[\"elements\",{\"1\":{\"7\":2}}],[\"etc\",{\"1\":{\"17\":1,\"32\":1}}],[\"even\",{\"1\":{\"15\":1}}],[\"every\",{\"1\":{\"11\":2}}],[\"encabezados\",{\"1\":{\"23\":1}}],[\"en\",{\"1\":{\"18\":2,\"19\":1,\"20\":2,\"22\":3,\"23\":2,\"25\":3,\"29\":1,\"30\":1,\"32\":1,\"59\":1}}],[\"entire\",{\"1\":{\"10\":1}}],[\"endpoint\",{\"1\":{\"3\":1}}],[\"extensión\",{\"1\":{\"27\":1}}],[\"extension\",{\"1\":{\"10\":1}}],[\"executed\",{\"1\":{\"9\":1}}],[\"example\",{\"1\":{\"7\":1,\"12\":1}}],[\"examples\",{\"1\":{\"7\":1}}],[\"empty\",{\"1\":{\"5\":1,\"6\":1}}],[\"esta\",{\"1\":{\"57\":1}}],[\"establecido\",{\"1\":{\"32\":1}}],[\"estar\",{\"1\":{\"22\":1,\"23\":1}}],[\"está\",{\"1\":{\"28\":1}}],[\"esto\",{\"1\":{\"25\":1,\"28\":1,\"59\":1}}],[\"este\",{\"1\":{\"18\":1,\"54\":1}}],[\"específicos\",{\"1\":{\"30\":1}}],[\"especificado\",{\"1\":{\"24\":2}}],[\"especifica\",{\"1\":{\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1}}],[\"especificar\",{\"1\":{\"19\":1,\"32\":1}}],[\"espacio\",{\"1\":{\"22\":1,\"23\":1}}],[\"español\",{\"1\":{\"0\":1}}],[\"escribir\",{\"1\":{\"18\":1}}],[\"es\",{\"1\":{\"0\":1,\"18\":1,\"20\":2,\"21\":1,\"22\":2,\"23\":1,\"24\":3,\"25\":2,\"28\":2,\"29\":1,\"57\":1}}],[\"peliculas\",{\"0\":{\"57\":1}}],[\"persona\",{\"1\":{\"32\":1,\"46\":1}}],[\"permite\",{\"1\":{\"29\":1,\"57\":1}}],[\"performance\",{\"1\":{\"15\":1}}],[\"perform\",{\"1\":{\"15\":1}}],[\"picture\",{\"1\":{\"51\":1,\"58\":1,\"65\":1}}],[\"por\",{\"1\":{\"54\":1,\"60\":1}}],[\"porque\",{\"1\":{\"28\":1}}],[\"podemos\",{\"1\":{\"24\":1}}],[\"posible\",{\"1\":{\"24\":3,\"28\":1}}],[\"possible\",{\"1\":{\"7\":3,\"11\":1}}],[\"posts\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"10\":2,\"11\":2,\"12\":1,\"13\":1,\"21\":1,\"22\":1,\"23\":1,\"27\":2,\"28\":2,\"36\":1,\"37\":1,\"38\":1,\"42\":2}}],[\"post\",{\"1\":{\"4\":2,\"5\":1,\"6\":1,\"15\":1,\"17\":1,\"21\":2,\"22\":1,\"23\":1,\"30\":1,\"32\":1,\"36\":2,\"37\":1,\"38\":1,\"44\":1,\"46\":1}}],[\"p>\",{\"1\":{\"12\":1,\"39\":1}}],[\"pr\",{\"1\":{\"53\":1,\"60\":1,\"67\":1}}],[\"price\",{\"0\":{\"48\":1}}],[\"prueba\",{\"1\":{\"24\":1}}],[\"precio\",{\"0\":{\"55\":1}}],[\"precente\",{\"1\":{\"28\":1}}],[\"predeterminado\",{\"1\":{\"19\":1,\"21\":1,\"22\":1,\"23\":1,\"28\":1}}],[\"presentación\",{\"1\":{\"30\":1}}],[\"presentation\",{\"1\":{\"15\":1}}],[\"present\",{\"1\":{\"11\":1}}],[\"propiedades\",{\"1\":{\"57\":1}}],[\"proporcionando\",{\"1\":{\"30\":1}}],[\"properties\",{\"0\":{\"13\":1},\"1\":{\"2\":1,\"13\":2,\"50\":1}}],[\"providing\",{\"1\":{\"15\":1}}],[\"project\",{\"1\":{\"7\":1,\"24\":1,\"39\":2}}],[\"pasar\",{\"1\":{\"57\":1}}],[\"pass\",{\"1\":{\"50\":1}}],[\"parámetros\",{\"1\":{\"19\":1}}],[\"para\",{\"1\":{\"18\":2,\"24\":1,\"25\":2,\"27\":1,\"29\":1,\"30\":2,\"32\":2,\"54\":1}}],[\"paragraph\",{\"1\":{\"8\":1,\"25\":1,\"40\":1}}],[\"parameters\",{\"1\":{\"2\":1}}],[\"path\",{\"1\":{\"10\":1}}],[\"please\",{\"1\":{\"47\":1,\"53\":1,\"54\":1}}],[\"plugin\",{\"1\":{\"14\":1,\"29\":1,\"47\":1,\"54\":2}}],[\"plus\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"24\":1}}],[\"player\",{\"1\":{\"7\":3,\"24\":2,\"39\":2}}],[\"puntos\",{\"1\":{\"22\":1,\"23\":1}}],[\"puedes\",{\"1\":{\"24\":1,\"32\":1}}],[\"pueden\",{\"1\":{\"20\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":2}}],[\"puede\",{\"1\":{\"18\":1}}],[\"pub\",{\"1\":{\"7\":3,\"24\":2,\"39\":2}}],[\"put\",{\"1\":{\"4\":1,\"15\":1,\"21\":1,\"30\":1,\"36\":1,\"44\":1}}],[\"favor\",{\"1\":{\"54\":1,\"60\":1}}],[\"free\",{\"1\":{\"53\":1}}],[\"front\",{\"1\":{\"15\":1,\"30\":1,\"50\":1,\"57\":1}}],[\"frontmatter\",{\"1\":{\"3\":1,\"13\":1,\"20\":2,\"22\":2,\"23\":1,\"35\":1,\"37\":2,\"38\":1}}],[\"from\",{\"1\":{\"7\":1,\"8\":1,\"15\":3}}],[\"feel\",{\"1\":{\"53\":1}}],[\"feature\",{\"1\":{\"50\":1}}],[\"features\",{\"0\":{\"15\":1}}],[\"first\",{\"1\":{\"12\":2}}],[\"firstpost\",{\"1\":{\"11\":1,\"28\":1}}],[\"file\",{\"1\":{\"5\":1,\"10\":1,\"58\":1,\"65\":1}}],[\"filename\",{\"1\":{\"5\":2}}],[\"found\",{\"1\":{\"68\":1}}],[\"forma\",{\"1\":{\"19\":1}}],[\"formato\",{\"1\":{\"19\":1,\"22\":1,\"23\":1}}],[\"format=json\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"format\",{\"0\":{\"12\":1},\"1\":{\"2\":1,\"5\":1,\"6\":1,\"12\":3,\"39\":1,\"51\":1,\"52\":1,\"66\":1}}],[\"for\",{\"1\":{\"14\":1,\"15\":1,\"17\":1,\"47\":1,\"54\":1}}],[\"following\",{\"1\":{\"7\":1}}],[\"flag是指定请求参数以及我们想要的响应格式的方式\",{\"1\":{\"34\":1}}],[\"flag\",{\"0\":{\"34\":1},\"1\":{\"2\":1,\"3\":1,\"8\":1,\"11\":1,\"13\":2}}],[\"flags\",{\"0\":{\"2\":1},\"1\":{\"2\":1,\"17\":1}}],[\"have\",{\"1\":{\"47\":1,\"54\":1}}],[\"haz\",{\"1\":{\"25\":1}}],[\"hayas\",{\"1\":{\"25\":1}}],[\"hero\",{\"1\":{\"51\":1,\"58\":1,\"65\":1}}],[\"herramienta\",{\"1\":{\"24\":1}}],[\"headers\",{\"0\":{\"6\":1,\"23\":1,\"38\":1},\"1\":{\"2\":1,\"6\":2,\"17\":2,\"19\":1,\"23\":1,\"32\":2,\"34\":1,\"38\":1,\"46\":2,\"52\":1,\"59\":1,\"66\":1}}],[\"how\",{\"0\":{\"16\":1}}],[\"h1>\",{\"1\":{\"12\":1}}],[\"html\",{\"1\":{\"12\":1}}],[\"http\",{\"1\":{\"7\":1,\"24\":1,\"29\":1,\"30\":1,\"39\":1,\"44\":1}}],[\"https\",{\"1\":{\"0\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":7,\"8\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"17\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":6,\"25\":2,\"26\":1,\"27\":1,\"28\":1,\"32\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":7,\"40\":2,\"41\":1,\"42\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1}}],[\"hikaru\",{\"1\":{\"7\":3,\"24\":2,\"39\":2}}],[\"utiliza\",{\"1\":{\"30\":1}}],[\"utilizando\",{\"1\":{\"30\":1}}],[\"utilizar\",{\"1\":{\"20\":1,\"22\":1,\"23\":1}}],[\"utilize\",{\"1\":{\"15\":1}}],[\"uno\",{\"1\":{\"54\":1}}],[\"under\",{\"1\":{\"52\":1}}],[\"una\",{\"1\":{\"20\":1,\"22\":1,\"25\":1,\"27\":1,\"54\":1,\"57\":1,\"60\":1}}],[\"un\",{\"0\":{\"58\":1},\"1\":{\"18\":1,\"20\":1,\"22\":1,\"23\":1,\"24\":3,\"29\":1,\"30\":2,\"32\":1,\"60\":1}}],[\"unique\",{\"1\":{\"8\":1}}],[\"uso\",{\"0\":{\"54\":1,\"60\":1},\"1\":{\"54\":1,\"57\":1,\"60\":1}}],[\"us\",{\"1\":{\"47\":1,\"54\":1}}],[\"usuarios\",{\"1\":{\"24\":1}}],[\"usando\",{\"1\":{\"24\":2,\"25\":2}}],[\"usarlo\",{\"1\":{\"32\":1}}],[\"usarla\",{\"1\":{\"25\":1}}],[\"usaremos\",{\"1\":{\"18\":1}}],[\"usar\",{\"0\":{\"31\":1},\"1\":{\"18\":1,\"24\":1,\"25\":1}}],[\"using\",{\"1\":{\"7\":2,\"8\":2,\"11\":1,\"15\":1}}],[\"usecase\",{\"0\":{\"47\":1}}],[\"useful\",{\"1\":{\"8\":1}}],[\"user=rooyca\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"userid\",{\"1\":{\"5\":1,\"22\":1,\"37\":1}}],[\"users\",{\"1\":{\"3\":1,\"7\":4,\"8\":2,\"9\":1,\"20\":1,\"24\":3,\"25\":2,\"26\":1,\"35\":1,\"39\":3,\"40\":2,\"41\":1}}],[\"use\",{\"0\":{\"16\":1,\"53\":1},\"1\":{\"1\":1,\"7\":1,\"8\":2,\"13\":2,\"17\":1,\"47\":1,\"50\":1,\"53\":1,\"54\":1}}],[\"used\",{\"1\":{\"1\":1}}],[\"update\",{\"0\":{\"11\":1,\"28\":1},\"1\":{\"2\":1,\"11\":2,\"13\":1,\"28\":1}}],[\"uuid\",{\"0\":{\"8\":1,\"25\":1},\"1\":{\"2\":1,\"8\":5,\"9\":1,\"11\":2,\"17\":1,\"19\":1,\"25\":4,\"26\":1,\"28\":2,\"32\":1,\"46\":1,\"59\":1}}],[\"url\",{\"0\":{\"3\":1,\"20\":1,\"35\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"17\":2,\"19\":1,\"20\":2,\"21\":1,\"22\":1,\"23\":1,\"24\":7,\"25\":2,\"26\":1,\"27\":1,\"28\":1,\"32\":2,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":8,\"40\":2,\"41\":1,\"42\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1}}],[\"dos\",{\"1\":{\"22\":1,\"23\":1}}],[\"donde\",{\"1\":{\"20\":1,\"22\":1}}],[\"d\",{\"1\":{\"12\":1}}],[\"dv\",{\"1\":{\"8\":1,\"25\":1,\"40\":1}}],[\"datos\",{\"1\":{\"22\":1,\"23\":1,\"24\":1,\"30\":1}}],[\"dataview\",{\"1\":{\"8\":1,\"25\":1,\"40\":1}}],[\"data\",{\"0\":{\"51\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"13\":1,\"15\":1,\"48\":1,\"49\":1,\"51\":1,\"55\":1,\"56\":1,\"58\":1,\"62\":1,\"63\":1,\"65\":1}}],[\"daily\",{\"1\":{\"7\":4,\"24\":2,\"39\":3}}],[\"detail\",{\"1\":{\"51\":1,\"58\":1,\"65\":1}}],[\"detallado\",{\"1\":{\"30\":1}}],[\"deseas\",{\"1\":{\"60\":1}}],[\"desactiva\",{\"1\":{\"30\":1}}],[\"deshabilita\",{\"1\":{\"26\":1}}],[\"dentro\",{\"1\":{\"30\":1,\"32\":1}}],[\"del\",{\"1\":{\"24\":2,\"28\":1,\"30\":1,\"32\":1,\"57\":1}}],[\"delete\",{\"1\":{\"4\":1,\"8\":1,\"15\":1,\"21\":1,\"30\":1,\"36\":1,\"44\":1}}],[\"deben\",{\"1\":{\"22\":1,\"23\":1}}],[\"de\",{\"0\":{\"18\":1,\"32\":1,\"54\":1,\"55\":1,\"58\":1,\"60\":1},\"1\":{\"18\":1,\"19\":2,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":6,\"25\":2,\"27\":1,\"28\":1,\"30\":5,\"32\":2,\"54\":1,\"57\":1,\"60\":2}}],[\"demo\",{\"1\":{\"17\":1,\"32\":1,\"46\":1}}],[\"definido\",{\"1\":{\"25\":1}}],[\"definida\",{\"1\":{\"20\":1,\"22\":1}}],[\"definidas\",{\"1\":{\"20\":1,\"22\":1,\"23\":1}}],[\"defined\",{\"1\":{\"3\":1,\"8\":1}}],[\"default\",{\"1\":{\"2\":1,\"4\":1,\"5\":1,\"6\":1,\"11\":1}}],[\"directorios\",{\"1\":{\"27\":1}}],[\"directories\",{\"1\":{\"10\":1}}],[\"diferentes\",{\"1\":{\"18\":1}}],[\"different\",{\"1\":{\"1\":1}}],[\"disponibles\",{\"1\":{\"21\":1,\"32\":1}}],[\"displayed\",{\"1\":{\"7\":1,\"12\":1}}],[\"display\",{\"1\":{\"7\":1,\"14\":1,\"15\":1}}],[\"disable\",{\"1\":{\"15\":1}}],[\"disables\",{\"1\":{\"9\":1}}],[\"disabled\",{\"0\":{\"9\":1,\"26\":1,\"41\":1},\"1\":{\"2\":1,\"9\":1,\"17\":1,\"19\":1,\"25\":2,\"26\":1,\"32\":1,\"34\":1,\"40\":2,\"41\":1,\"46\":1}}],[\"distanthorizons\",{\"1\":{\"7\":1,\"24\":1,\"39\":2}}],[\"open\",{\"1\":{\"53\":1}}],[\"openweathermap\",{\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"optimizar\",{\"1\":{\"30\":1}}],[\"optimize\",{\"1\":{\"15\":1}}],[\"otros\",{\"1\":{\"25\":1}}],[\"otherwise\",{\"1\":{\"12\":1}}],[\"other\",{\"1\":{\"8\":1}}],[\"o\",{\"0\":{\"55\":1},\"1\":{\"24\":2,\"25\":1,\"60\":1}}],[\"obtener\",{\"0\":{\"56\":1,\"58\":1}}],[\"obligatorio\",{\"1\":{\"25\":1}}],[\"obligatoria\",{\"1\":{\"20\":1}}],[\"objeto\",{\"1\":{\"22\":1,\"23\":1}}],[\"object\",{\"1\":{\"5\":1,\"6\":1}}],[\"obsidian\",{\"1\":{\"14\":1,\"29\":1,\"43\":1}}],[\"one\",{\"1\":{\"12\":2,\"47\":1,\"54\":1}}],[\"online\",{\"1\":{\"7\":1,\"24\":1}}],[\"only\",{\"1\":{\"3\":1,\"11\":1}}],[\"overview\",{\"0\":{\"14\":1}}],[\"over\",{\"1\":{\"7\":3,\"8\":1,\"15\":1}}],[\"output\",{\"1\":{\"12\":2}}],[\"outputs\",{\"1\":{\"7\":2}}],[\"our\",{\"1\":{\"2\":1}}],[\"org\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1,\"63\":1,\"64\":1}}],[\"or\",{\"0\":{\"48\":1},\"1\":{\"7\":3,\"8\":1,\"15\":1,\"53\":1}}],[\"of\",{\"1\":{\"2\":1,\"3\":1,\"5\":2,\"6\":1,\"7\":4,\"8\":1,\"11\":1,\"15\":1,\"47\":1,\"50\":1,\"54\":1}}],[\"siéntete\",{\"1\":{\"60\":1}}],[\"si\",{\"1\":{\"54\":1,\"60\":1}}],[\"simplemente\",{\"1\":{\"24\":1}}],[\"siguiente\",{\"1\":{\"24\":1}}],[\"solo\",{\"1\":{\"28\":1}}],[\"solicitud\",{\"1\":{\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"25\":2,\"26\":1}}],[\"solicitudes\",{\"1\":{\"18\":1,\"29\":1,\"30\":1}}],[\"sobre\",{\"1\":{\"24\":3,\"25\":1,\"30\":1}}],[\"son\",{\"1\":{\"19\":1,\"21\":1}}],[\"such\",{\"1\":{\"15\":1}}],[\"syntax\",{\"1\":{\"13\":1}}],[\"stream\",{\"1\":{\"39\":1}}],[\"streamable\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"strong>\",{\"1\":{\"39\":1,\"51\":2}}],[\"strings\",{\"1\":{\"13\":1}}],[\"string\",{\"1\":{\"12\":1}}],[\"stored\",{\"1\":{\"8\":1}}],[\"store\",{\"1\":{\"8\":1}}],[\"stats\",{\"1\":{\"7\":3,\"24\":2,\"39\":2}}],[\"same\",{\"1\":{\"7\":1}}],[\"save\",{\"0\":{\"10\":1,\"27\":1,\"42\":1},\"1\":{\"2\":1,\"10\":3,\"11\":1,\"15\":1,\"19\":1,\"27\":1,\"28\":1,\"34\":1,\"42\":1,\"52\":1}}],[\"s\",{\"1\":{\"7\":1,\"40\":1}}],[\"según\",{\"1\":{\"30\":1}}],[\"search\",{\"0\":{\"50\":1},\"1\":{\"50\":1,\"57\":1,\"64\":1}}],[\"sea\",{\"1\":{\"25\":1,\"28\":1,\"30\":1}}],[\"separando\",{\"1\":{\"22\":1,\"23\":1}}],[\"separated\",{\"1\":{\"13\":1}}],[\"separating\",{\"1\":{\"5\":1,\"6\":1}}],[\"se\",{\"1\":{\"18\":1,\"20\":1,\"22\":1,\"23\":1,\"24\":2,\"25\":3,\"26\":1,\"27\":1,\"28\":2}}],[\"server\",{\"1\":{\"17\":1,\"32\":1,\"46\":1}}],[\"set\",{\"1\":{\"13\":1,\"17\":1}}],[\"settings\",{\"1\":{\"8\":1}}],[\"second\",{\"1\":{\"12\":1}}],[\"see\",{\"1\":{\"7\":1,\"17\":1}}],[\"space\",{\"1\":{\"5\":1,\"6\":1}}],[\"specific\",{\"1\":{\"15\":1}}],[\"specified\",{\"1\":{\"7\":2,\"12\":2}}],[\"specifies\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"10\":1,\"12\":1,\"13\":1}}],[\"specify\",{\"1\":{\"2\":1,\"17\":1}}],[\"share\",{\"1\":{\"47\":1,\"53\":1,\"54\":1}}],[\"should\",{\"1\":{\"5\":1,\"6\":1,\"12\":2,\"13\":1}}],[\"show\",{\"0\":{\"7\":1,\"24\":1,\"39\":1},\"1\":{\"2\":1,\"7\":8,\"8\":1,\"9\":1,\"12\":1,\"13\":2,\"17\":1,\"19\":1,\"24\":7,\"25\":1,\"26\":1,\"32\":1,\"34\":1,\"39\":8,\"40\":1,\"41\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1}}],[\"shields\",{\"1\":{\"0\":1}}],[\"🏳️\",{\"0\":{\"2\":1,\"19\":1,\"34\":1}}],[\"más\",{\"0\":{\"58\":1},\"1\":{\"32\":1}}],[\"muestra\",{\"1\":{\"24\":1,\"30\":1}}],[\"multiples\",{\"1\":{\"24\":1}}],[\"multiple\",{\"1\":{\"7\":3}}],[\"múltiples\",{\"1\":{\"24\":1}}],[\"métodos\",{\"1\":{\"30\":1}}],[\"método\",{\"1\":{\"21\":1}}],[\"my\",{\"1\":{\"17\":1,\"32\":1,\"46\":1}}],[\"mobilelegends\",{\"1\":{\"51\":1,\"58\":1,\"65\":1}}],[\"movie\",{\"1\":{\"50\":1,\"57\":1,\"64\":1}}],[\"movies\",{\"0\":{\"50\":1}}],[\"mostrar\",{\"1\":{\"24\":2,\"29\":1}}],[\"more\",{\"1\":{\"12\":2,\"17\":1}}],[\"modrinth\",{\"1\":{\"7\":1,\"24\":1,\"39\":2}}],[\"mapi\",{\"1\":{\"51\":1,\"58\":1,\"65\":1}}],[\"main\",{\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"manera\",{\"1\":{\"28\":1}}],[\"mandatory\",{\"1\":{\"8\":1}}],[\"matter\",{\"1\":{\"15\":1,\"30\":1,\"50\":1,\"57\":1}}],[\"maketable\",{\"1\":{\"39\":1}}],[\"make\",{\"1\":{\"1\":1,\"14\":1}}],[\"method=user\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"methods\",{\"1\":{\"4\":1,\"15\":1}}],[\"method\",{\"0\":{\"4\":1,\"21\":1,\"36\":1},\"1\":{\"2\":1,\"4\":2,\"5\":1,\"6\":1,\"17\":2,\"19\":1,\"21\":1,\"22\":1,\"23\":1,\"32\":2,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"46\":2}}],[\"md\",{\"1\":{\"0\":1}}],[\"won\",{\"1\":{\"8\":1,\"9\":1,\"10\":1}}],[\"working\",{\"1\":{\"5\":1}}],[\"whatever\",{\"1\":{\"8\":1}}],[\"which\",{\"1\":{\"8\":1,\"12\":1}}],[\"when\",{\"1\":{\"8\":1,\"11\":1}}],[\"where\",{\"1\":{\"3\":1,\"5\":1}}],[\"warning\",{\"1\":{\"13\":1,\"52\":1,\"59\":1,\"66\":1}}],[\"want\",{\"1\":{\"8\":2,\"53\":1}}],[\"way\",{\"1\":{\"2\":1}}],[\"ws\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"with\",{\"1\":{\"5\":1,\"6\":1,\"12\":2,\"13\":1,\"17\":1,\"47\":1,\"54\":1}}],[\"will\",{\"1\":{\"1\":1,\"11\":1,\"12\":2,\"52\":1}}],[\"weather\",{\"0\":{\"49\":1},\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"we\",{\"1\":{\"1\":1,\"8\":1}}],[\"write\",{\"1\":{\"1\":1}}],[\"tu\",{\"0\":{\"60\":1},\"1\":{\"60\":1}}],[\"tus\",{\"1\":{\"29\":1}}],[\"temp\",{\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"text\",{\"1\":{\"39\":1}}],[\"te\",{\"1\":{\"29\":1,\"57\":1}}],[\"tasks\",{\"1\":{\"52\":1,\"59\":1,\"66\":1}}],[\"también\",{\"1\":{\"19\":1,\"24\":3,\"25\":1}}],[\"taking\",{\"1\":{\"14\":1}}],[\"t\",{\"1\":{\"8\":1,\"9\":1,\"10\":1}}],[\"trigger\",{\"1\":{\"8\":1}}],[\"track\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"try\",{\"1\":{\"7\":1}}],[\"tienes\",{\"1\":{\"54\":1}}],[\"time\",{\"1\":{\"7\":1,\"11\":2}}],[\"title\",{\"1\":{\"5\":1,\"12\":2,\"13\":2,\"22\":4,\"37\":4,\"50\":3,\"57\":3,\"64\":3}}],[\"type\",{\"1\":{\"6\":1,\"23\":1,\"38\":1,\"51\":1,\"58\":1,\"65\":1}}],[\"typicode\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":3,\"8\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"17\":2,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":3,\"25\":2,\"26\":1,\"27\":1,\"28\":1,\"32\":2,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":3,\"40\":2,\"41\":1,\"42\":1,\"46\":2}}],[\"token\",{\"1\":{\"52\":1,\"59\":1,\"66\":1}}],[\"todoist\",{\"1\":{\"52\":1,\"59\":1,\"66\":1}}],[\"todos\",{\"0\":{\"66\":1},\"1\":{\"24\":1,\"52\":2,\"59\":2,\"66\":2}}],[\"toda\",{\"1\":{\"27\":1}}],[\"todas\",{\"1\":{\"25\":1}}],[\"tool\",{\"1\":{\"7\":1}}],[\"to\",{\"0\":{\"16\":1},\"1\":{\"1\":2,\"2\":1,\"7\":4,\"8\":6,\"10\":1,\"11\":1,\"13\":3,\"14\":2,\"15\":1,\"17\":2,\"50\":1,\"53\":2}}],[\"than\",{\"1\":{\"12\":1}}],[\"that\",{\"1\":{\"1\":1,\"14\":1,\"50\":1}}],[\"this\",{\"1\":{\"1\":1,\"3\":3,\"5\":2,\"8\":1,\"11\":1,\"12\":1,\"13\":2,\"20\":2,\"22\":2,\"35\":2,\"37\":2,\"47\":1,\"50\":3,\"52\":1,\"54\":1,\"57\":2,\"58\":1,\"64\":2,\"65\":1}}],[\"themoviedb\",{\"1\":{\"50\":1,\"57\":1,\"64\":1}}],[\"then\",{\"1\":{\"12\":1}}],[\"the\",{\"0\":{\"49\":1},\"1\":{\"1\":1,\"2\":2,\"3\":4,\"4\":3,\"5\":6,\"6\":4,\"7\":8,\"8\":5,\"9\":2,\"10\":3,\"11\":6,\"12\":5,\"13\":5,\"14\":2,\"15\":3,\"17\":3,\"50\":1,\"52\":2}}],[\"criptomoneda\",{\"0\":{\"55\":1}}],[\"crypto\",{\"0\":{\"48\":1}}],[\"crea\",{\"1\":{\"32\":1}}],[\"creará\",{\"1\":{\"27\":1}}],[\"create\",{\"1\":{\"10\":1,\"17\":1}}],[\"cómo\",{\"0\":{\"31\":1}}],[\"código\",{\"0\":{\"18\":1,\"32\":1},\"1\":{\"18\":2,\"30\":2,\"32\":2}}],[\"cualquier\",{\"0\":{\"55\":1}}],[\"cuando\",{\"1\":{\"25\":1,\"28\":1}}],[\"cuerpo\",{\"1\":{\"22\":1}}],[\"ciudad\",{\"1\":{\"24\":1}}],[\"city\",{\"1\":{\"7\":4,\"24\":3,\"39\":4}}],[\"clave\",{\"1\":{\"59\":1}}],[\"claves\",{\"1\":{\"22\":1,\"23\":1}}],[\"clima\",{\"0\":{\"56\":1}}],[\"clic\",{\"1\":{\"25\":1}}],[\"click\",{\"1\":{\"8\":1}}],[\"clear\",{\"1\":{\"40\":1}}],[\"check\",{\"0\":{\"48\":1}}],[\"chess960\",{\"1\":{\"7\":1}}],[\"chess\",{\"1\":{\"7\":6,\"24\":4,\"39\":5}}],[\"charset=utf\",{\"1\":{\"6\":1,\"23\":1,\"38\":1}}],[\"cover\",{\"1\":{\"51\":1,\"58\":1,\"65\":1}}],[\"coincap\",{\"1\":{\"48\":1,\"55\":1,\"62\":1}}],[\"colección\",{\"1\":{\"54\":1}}],[\"collection\",{\"1\":{\"47\":1,\"54\":1}}],[\"colon\",{\"1\":{\"5\":1,\"6\":1}}],[\"consulta\",{\"1\":{\"32\":1}}],[\"configuraciones\",{\"1\":{\"25\":1}}],[\"con\",{\"1\":{\"22\":1,\"23\":1,\"25\":2,\"32\":1,\"54\":1}}],[\"control\",{\"1\":{\"15\":1,\"30\":1}}],[\"content\",{\"1\":{\"6\":1,\"23\":1,\"38\":1,\"52\":1,\"59\":1,\"66\":1}}],[\"convenientes\",{\"1\":{\"30\":1}}],[\"convenient\",{\"1\":{\"15\":1}}],[\"compartir\",{\"1\":{\"60\":1}}],[\"compártelo\",{\"1\":{\"54\":1}}],[\"comportamiento\",{\"1\":{\"28\":1}}],[\"como\",{\"1\":{\"30\":1}}],[\"comentario\",{\"1\":{\"20\":1}}],[\"commas\",{\"1\":{\"13\":1}}],[\"comments\",{\"1\":{\"17\":1,\"32\":1,\"46\":1}}],[\"comment\",{\"1\":{\"3\":1}}],[\"com\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"17\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":7,\"25\":2,\"26\":1,\"27\":1,\"28\":1,\"32\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":8,\"40\":2,\"41\":1,\"42\":1,\"46\":1,\"51\":1,\"52\":1,\"58\":1,\"59\":1,\"65\":1,\"66\":1}}],[\"code\",{\"0\":{\"17\":1},\"1\":{\"1\":1,\"15\":1,\"17\":2}}],[\"codeblock\",{\"1\":{\"1\":1,\"9\":1,\"11\":2,\"26\":1,\"28\":2,\"33\":1}}],[\"codeblocks\",{\"0\":{\"1\":1},\"1\":{\"15\":1}}],[\"característica\",{\"1\":{\"57\":1}}],[\"características\",{\"0\":{\"30\":1}}],[\"carga\",{\"1\":{\"28\":1}}],[\"cada\",{\"1\":{\"28\":2}}],[\"caso\",{\"0\":{\"60\":1},\"1\":{\"18\":1,\"60\":1}}],[\"cases\",{\"1\":{\"47\":1,\"54\":1}}],[\"case\",{\"0\":{\"53\":1},\"1\":{\"1\":1,\"53\":1}}],[\"can\",{\"1\":{\"1\":1,\"7\":3,\"8\":2,\"12\":1,\"17\":1}}],[\"buscar\",{\"0\":{\"57\":1}}],[\"bitcoin\",{\"0\":{\"48\":1,\"55\":1},\"1\":{\"48\":1,\"55\":1,\"62\":1}}],[\"bloques\",{\"1\":{\"25\":1,\"30\":2}}],[\"bloque\",{\"0\":{\"18\":1,\"32\":1},\"1\":{\"18\":2,\"32\":2}}],[\"blocks\",{\"1\":{\"8\":1,\"15\":1}}],[\"block\",{\"0\":{\"17\":1},\"1\":{\"1\":1,\"17\":2}}],[\"by\",{\"1\":{\"7\":2,\"13\":1}}],[\"bajo\",{\"1\":{\"59\":1}}],[\"bandera\",{\"1\":{\"19\":1,\"20\":1,\"25\":2,\"28\":1}}],[\"banderas\",{\"0\":{\"19\":1},\"1\":{\"19\":1,\"32\":1}}],[\"bar\",{\"1\":{\"5\":1,\"22\":1,\"37\":1}}],[\"badge\",{\"1\":{\"0\":1}}],[\"body\",{\"0\":{\"5\":1,\"22\":1,\"37\":1},\"1\":{\"2\":1,\"5\":3,\"12\":2,\"17\":2,\"19\":1,\"22\":2,\"32\":2,\"34\":1,\"37\":2,\"46\":2}}],[\"bearer\",{\"1\":{\"52\":1,\"59\":1,\"66\":1}}],[\"behavior\",{\"1\":{\"11\":1}}],[\"because\",{\"1\":{\"11\":1}}],[\"before\",{\"1\":{\"8\":1}}],[\"best\",{\"1\":{\"7\":3,\"24\":1,\"39\":1}}],[\"be\",{\"1\":{\"1\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":2,\"9\":1,\"12\":5,\"13\":1}}],[\"abrir\",{\"1\":{\"60\":1}}],[\"actualizará\",{\"1\":{\"28\":1}}],[\"activará\",{\"1\":{\"25\":1}}],[\"acceso\",{\"1\":{\"30\":1}}],[\"accessed\",{\"1\":{\"8\":2}}],[\"access\",{\"1\":{\"7\":2,\"15\":1}}],[\"acceder\",{\"1\":{\"24\":2}}],[\"accept\",{\"1\":{\"17\":1,\"32\":1,\"46\":1}}],[\"authorization\",{\"1\":{\"52\":1,\"59\":1,\"66\":1}}],[\"automatica\",{\"1\":{\"28\":1}}],[\"automatically\",{\"1\":{\"11\":1}}],[\"auto\",{\"0\":{\"11\":1,\"28\":1},\"1\":{\"2\":1,\"11\":1,\"28\":1}}],[\"audioscrobbler\",{\"1\":{\"7\":1,\"24\":1,\"39\":1}}],[\"at\",{\"1\":{\"7\":1}}],[\"address\",{\"1\":{\"7\":3,\"24\":3,\"39\":3}}],[\"archivo\",{\"1\":{\"27\":1}}],[\"arreglo\",{\"1\":{\"24\":3}}],[\"array\",{\"1\":{\"7\":3}}],[\"artist\",{\"1\":{\"7\":1,\"24\":1,\"39\":2}}],[\"are\",{\"1\":{\"2\":1,\"4\":1}}],[\"almacenadas\",{\"1\":{\"25\":1}}],[\"almacenar\",{\"1\":{\"25\":1}}],[\"almacenará\",{\"1\":{\"25\":1}}],[\"al\",{\"1\":{\"24\":1}}],[\"also\",{\"1\":{\"7\":4,\"8\":1}}],[\"allows\",{\"1\":{\"14\":1,\"50\":1}}],[\"all\",{\"1\":{\"2\":1,\"7\":1,\"19\":1,\"34\":1,\"39\":1}}],[\"appid=your\",{\"1\":{\"49\":1,\"56\":1,\"63\":1}}],[\"app\",{\"1\":{\"14\":1}}],[\"application\",{\"1\":{\"6\":1,\"17\":1,\"23\":1,\"32\":1,\"38\":1,\"46\":1}}],[\"apis\",{\"1\":{\"14\":1}}],[\"apir\",{\"1\":{\"14\":1,\"29\":1,\"41\":2,\"43\":1}}],[\"apirequest\",{\"0\":{\"0\":1,\"29\":1},\"1\":{\"14\":1,\"29\":1,\"43\":1}}],[\"api\",{\"1\":{\"1\":1,\"7\":5,\"24\":4,\"39\":5,\"43\":1,\"48\":1,\"49\":2,\"50\":3,\"52\":1,\"55\":1,\"56\":2,\"57\":3,\"59\":1,\"62\":1,\"63\":2,\"64\":3,\"66\":1}}],[\"antes\",{\"1\":{\"25\":1}}],[\"another\",{\"1\":{\"15\":1}}],[\"any\",{\"0\":{\"48\":1},\"1\":{\"12\":1}}],[\"an\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"and\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"8\":2,\"12\":1,\"13\":1,\"15\":2}}],[\"available\",{\"1\":{\"4\":1,\"17\":1}}],[\"as\",{\"0\":{\"10\":1,\"27\":1,\"42\":1},\"1\":{\"2\":1,\"10\":1,\"11\":1,\"15\":2,\"19\":1,\"27\":1,\"28\":1,\"34\":1,\"42\":1}}],[\"a\",{\"1\":{\"1\":1,\"3\":2,\"5\":1,\"6\":1,\"7\":2,\"8\":1,\"10\":1,\"13\":1,\"14\":1,\"17\":1,\"24\":2,\"25\":1,\"47\":2,\"50\":1,\"53\":2,\"54\":2}}],[\"🔥\",{\"0\":{\"15\":1,\"30\":1,\"44\":1}}],[\"🔎\",{\"0\":{\"14\":1,\"29\":1,\"43\":1}}],[\"👨🏻‍💻\",{\"0\":{\"1\":1,\"17\":1,\"18\":1,\"32\":1,\"33\":1,\"46\":1}}],[\"🚀\",{\"0\":{\"0\":1}}],[\"if\",{\"1\":{\"11\":1,\"12\":1,\"47\":1,\"53\":1,\"54\":1}}],[\"id=\",{\"1\":{\"58\":1,\"65\":1}}],[\"id=1\",{\"1\":{\"51\":1}}],[\"id标志中定义的任何内容之前\",{\"1\":{\"40\":1}}],[\"idpersona\",{\"1\":{\"17\":1}}],[\"identifier\",{\"1\":{\"8\":1}}],[\"id\",{\"0\":{\"40\":1},\"1\":{\"3\":3,\"13\":2,\"17\":2,\"20\":3,\"25\":1,\"32\":3,\"34\":1,\"35\":3,\"40\":5,\"41\":2,\"46\":3,\"52\":1,\"66\":1}}],[\"iterar\",{\"1\":{\"24\":3}}],[\"it\",{\"1\":{\"1\":1,\"3\":1,\"7\":1,\"8\":1,\"10\":2,\"12\":2,\"17\":1,\"47\":1,\"54\":1}}],[\"inside\",{\"1\":{\"17\":1}}],[\"internal\",{\"1\":{\"13\":1}}],[\"including\",{\"1\":{\"12\":1}}],[\"información\",{\"1\":{\"32\":1}}],[\"information\",{\"1\":{\"17\":1}}],[\"info\",{\"1\":{\"8\":1,\"25\":1,\"40\":1,\"50\":1,\"57\":1,\"64\":1}}],[\"in\",{\"1\":{\"1\":2,\"3\":1,\"5\":1,\"6\":1,\"8\":3,\"12\":2,\"14\":1,\"15\":1,\"52\":1}}],[\"indexes\",{\"1\":{\"7\":1}}],[\"index\",{\"1\":{\"0\":1}}],[\"issue\",{\"1\":{\"53\":1,\"60\":1,\"67\":1}}],[\"is\",{\"1\":{\"1\":1,\"3\":3,\"4\":1,\"5\":2,\"6\":1,\"7\":2,\"8\":2,\"10\":1,\"11\":4,\"12\":1,\"14\":1,\"50\":1}}],[\"io\",{\"1\":{\"0\":1,\"48\":1,\"55\":1,\"62\":1}}],[\"img\",{\"1\":{\"0\":1,\"51\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
