[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":126,\"nextId\":126,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#🏳️-flags\",\"3\":\"1#url\",\"4\":\"1#method\",\"5\":\"1#body\",\"6\":\"1#headers\",\"7\":\"1#show\",\"8\":\"1#format\",\"9\":\"1#req-id\",\"10\":\"1#disabled\",\"11\":\"1#req-repeat\",\"12\":\"1#notify-if\",\"13\":\"1#save-to\",\"14\":\"1#properties\",\"15\":\"1#render\",\"16\":\"1#res-type\",\"17\":\"1#maketable\",\"18\":\"2\",\"19\":\"2#🔥-features\",\"20\":\"2#⚡-how-to-use\",\"21\":\"2#👨🏻‍💻-code-block\",\"22\":\"2#🛠️-settings-don-t-have-all-functionalities-yet\",\"23\":\"3\",\"24\":\"3#❓-why-use-this-method\",\"25\":\"3#🏳️-flags\",\"26\":\"3#name\",\"27\":\"3#url-required\",\"28\":\"3#method\",\"29\":\"3#body\",\"30\":\"3#headers\",\"31\":\"3#what-to-display\",\"32\":\"3#add\",\"33\":\"3#clear\",\"34\":\"4\",\"35\":\"4#🏳️-banderas\",\"36\":\"4#url\",\"37\":\"4#method\",\"38\":\"4#body\",\"39\":\"4#headers\",\"40\":\"4#show\",\"41\":\"4#format\",\"42\":\"4#req-id\",\"43\":\"4#disabled\",\"44\":\"4#req-repeat\",\"45\":\"4#notify-if\",\"46\":\"4#save-to\",\"47\":\"4#properties\",\"48\":\"4#render\",\"49\":\"4#res-type\",\"50\":\"4#maketable\",\"51\":\"5\",\"52\":\"5#🔥-caracteristicas\",\"53\":\"5#⚡-como-usar\",\"54\":\"5#👨🏻‍💻-bloque-de-codigo\",\"55\":\"5#🛠️-configuraciones-no-todas-las-funcionalidades-estan-disponibles\",\"56\":\"6\",\"57\":\"6#❓-¿por-que-usar-este-metodo\",\"58\":\"6#🏳️-banderas\",\"59\":\"6#name\",\"60\":\"6#url-requerido\",\"61\":\"6#method\",\"62\":\"6#body\",\"63\":\"6#headers\",\"64\":\"6#what-to-display\",\"65\":\"6#add\",\"66\":\"6#clear\",\"67\":\"7\",\"68\":\"7#🏳️-flag\",\"69\":\"7#url\",\"70\":\"7#method\",\"71\":\"7#body\",\"72\":\"7#headers\",\"73\":\"7#show\",\"74\":\"7#format\",\"75\":\"7#req-id\",\"76\":\"7#disabled\",\"77\":\"7#req-repeat\",\"78\":\"7#notify-if\",\"79\":\"7#save-to\",\"80\":\"7#properties\",\"81\":\"7#render\",\"82\":\"7#res-type\",\"83\":\"7#maketable\",\"84\":\"8\",\"85\":\"8#🔥-功能\",\"86\":\"8#⚡-如何使用\",\"87\":\"8#👨🏻‍💻-代码块\",\"88\":\"8#🛠️-设置-尚未拥有所有功能\",\"89\":\"9\",\"90\":\"9#❓-why-use-this-method\",\"91\":\"9#🏳️-标志\",\"92\":\"9#name\",\"93\":\"9#url-必须\",\"94\":\"9#method\",\"95\":\"9#body\",\"96\":\"9#headers\",\"97\":\"9#what-to-display\",\"98\":\"9#add\",\"99\":\"9#clear\",\"100\":\"10\",\"101\":\"10#render-markdown\",\"102\":\"10#check-bitcoin-or-any-crypto-price\",\"103\":\"10#get-the-weather\",\"104\":\"10#search-movies\",\"105\":\"10#render-data\",\"106\":\"10#get-todos-from-todoist\",\"107\":\"10#your-use-case\",\"108\":\"11\",\"109\":\"11#renderizar-markdown\",\"110\":\"11#ver-el-precio-de-bitcoin-o-cualquier-criptomoneda\",\"111\":\"11#obtener-el-clima\",\"112\":\"11#buscar-peliculas\",\"113\":\"11#renderizar-datos\",\"114\":\"11#obtener-tareas-de-todoist\",\"115\":\"11#tu-caso-de-uso\",\"116\":\"12\",\"117\":\"12#渲染-markdown\",\"118\":\"12#检查比特币-或任何加密货币-价格\",\"119\":\"12#获取天气\",\"120\":\"12#搜索电影\",\"121\":\"12#渲染数据\",\"122\":\"12#从-todoist-获取-todos\",\"123\":\"12#您的用例\",\"124\":\"13\",\"125\":\"14\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,11],\"1\":[2,26],\"2\":[2,43],\"3\":[1,33],\"4\":[1,25],\"5\":[1,52],\"6\":[1,49],\"7\":[1,124],\"8\":[1,62],\"9\":[2,83],\"10\":[1,40],\"11\":[2,47],\"12\":[2,71],\"13\":[2,28],\"14\":[1,43],\"15\":[1,38],\"16\":[2,39],\"17\":[1,60],\"18\":[2,28],\"19\":[2,88],\"20\":[4],\"21\":[3,50],\"22\":[9,29],\"23\":[2,25],\"24\":[5,51],\"25\":[2],\"26\":[1,6],\"27\":[3,6],\"28\":[1,4],\"29\":[1,6],\"30\":[1,6],\"31\":[3,6],\"32\":[1,20],\"33\":[1,17],\"34\":[4,24],\"35\":[2,47],\"36\":[1,34],\"37\":[1,28],\"38\":[1,59],\"39\":[1,55],\"40\":[1,132],\"41\":[1,70],\"42\":[2,83],\"43\":[1,39],\"44\":[2,48],\"45\":[2,76],\"46\":[2,29],\"47\":[1,49],\"48\":[1,37],\"49\":[2,38],\"50\":[1,60],\"51\":[2,21],\"52\":[2,94],\"53\":[3],\"54\":[4,51],\"55\":[9,29],\"56\":[2,24],\"57\":[7,54],\"58\":[2],\"59\":[1,7],\"60\":[3,6],\"61\":[1,4],\"62\":[1,7],\"63\":[1,7],\"64\":[3,5],\"65\":[1,18],\"66\":[1,18],\"67\":[2,6],\"68\":[2,28],\"69\":[1,19],\"70\":[1,17],\"71\":[1,29],\"72\":[1,26],\"73\":[1,80],\"74\":[1,37],\"75\":[2,48],\"76\":[1,22],\"77\":[2,30],\"78\":[2,36],\"79\":[2,16],\"80\":[1,25],\"81\":[1,21],\"82\":[2,16],\"83\":[1,37],\"84\":[2,9],\"85\":[2,29],\"86\":[2],\"87\":[2,35],\"88\":[4,12],\"89\":[2,5],\"90\":[5,14],\"91\":[2],\"92\":[1,1],\"93\":[3,2],\"94\":[1,4],\"95\":[1,1],\"96\":[1,1],\"97\":[3,1],\"98\":[1,8],\"99\":[1,8],\"100\":[1,19],\"101\":[2,11],\"102\":[6,53],\"103\":[3,18],\"104\":[2,37],\"105\":[2,25],\"106\":[1,34],\"107\":[3,17],\"108\":[3,34],\"109\":[2,11],\"110\":[9,59],\"111\":[3,18],\"112\":[2,37],\"113\":[2,25],\"114\":[1,33],\"115\":[4,17],\"116\":[1,4],\"117\":[2,11],\"118\":[3,33],\"119\":[1,18],\"120\":[1,23],\"121\":[1,25],\"122\":[2,29],\"123\":[1,6],\"124\":[1,3],\"125\":[1]},\"averageFieldLength\":[2.007936507936509,31.602364697066843],\"storedFields\":{\"0\":{\"h\":\"🚀 APIRequest\",\"t\":[\"(https://img.shields.io/badge/Español-8A2BE2)](es/index.md)\"]},\"1\":{\"h\":\"👨🏻‍💻 Codeblocks\",\"t\":[\"The codeblock is a versatile block that can be used to write code in different languages. In this case, we will use it to make requests.\"]},\"2\":{\"h\":\"🏳️ Flags\",\"t\":[\"Flags are the way to specify the parameters of our request and also the format in which we want our response.\",\"Flag\",\"Default\",\"url\",\"method\",\"GET\",\"body\",\"headers\",\"show\",\"ALL\",\"format\",\"{}\",\"req-id\",\"req-general\",\"disabled\",\"req-repeat\",\"1t@1s\",\"notify-if\",\"save-to\",\"properties\",\"render\",\"false\",\"res-type\",\"maketable\"]},\"3\":{\"h\":\"url\",\"t\":[\"Is the only required flag. It specifies the endpoint of the request. Variables defined in the frontmatter can be used.\",\"```req url: https://jsonplaceholder.typicode.com/users/{{this.id}} ```\",\"!!! note \\\"Where {{this.id}} is a variable (id) defined in the frontmatter.\\\"\"]},\"4\":{\"h\":\"method\",\"t\":[\"Specifies the request method. The default value is GET and the available values are:\",\"GET\",\"POST\",\"PUT\",\"DELETE\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post ```\"]},\"5\":{\"h\":\"body\",\"t\":[\"Specifies the body of the request. The default value is an empty object. The data should be in JSON format with double quotes separating the keys and values with a colon and space. Variables defined in the frontmatter can be used.\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post body: {\\\"title\\\": {{this.title}}, \\\"body\\\": \\\"bar\\\", \\\"userId\\\": 1} ```\",\"!!! note \\\"Where {{this.title}} is a variable (title) defined in the frontmatter.\\\"\"]},\"6\":{\"h\":\"headers\",\"t\":[\"Specifies the headers of the request. The default value is an empty object. The data should be in JSON format with double quotes separating the keys and values with a colon and space. Variables defined in the frontmatter can be used.\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post headers: {\\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"} ```\"]},\"7\":{\"h\":\"show\",\"t\":[\"Specifies the response data to display. Accessing nested objects is done using a right arrow ->. The default value is ALL.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating ```\",\"Multiple outputs can be displayed by separating them with a comma.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating, chess_daily -> best -> rating format: <p>Last game: {}</p> <strong>Best game: {}</strong> render ```\",\"Looping over an array is also possible using {..}. The following example retrieves the city from all users.\",\"```req url: https://jsonplaceholder.typicode.com/users show: {..} -> address -> city ```\",\"Looping over a specified number of elements of the array is also possible using {n..n}.\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0..2} -> address -> city ```\",\"It's also possible to loop over a specified range of indexes of the array using {n-n-n}.\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0-2-1} -> address -> city ```\",\"You can access the last element using {-1}...\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {-1} ```\",\"... or get the length of the array using {len}.\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {len} ```\",\"To access multiple elements at the same time when using {..} use & to separate the keys and use . to access the values.\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\"]},\"8\":{\"h\":\"format\",\"t\":[\"Specifies the format in which the response should be displayed. The default value is {}. It can be any string (including markdown and html). If more than one output is specified, more then one format should be specified, otherwise, the same format will be applied to all outputs.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: title, body format: <h1>{}</h1> <p>{}</p> render ```\",\"!!! note \\\"In this example, first {} will be replaced by the title, and second {} will be replaced by the body.\\\"\"]},\"9\":{\"h\":\"req-id\",\"t\":[\"Specifies the id of the request. The default value is req-general. This is useful when we want to store the response in localStorage and use it in other blocks or notes.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name ```\",\"Stored responses can be accessed using the req-id with the disabled flag (which won't trigger a new request).\",\"```req url: https://jsonplaceholder.typicode.com/users/1 req-id: name disabled ```\",\"Responses can also be accessed using dataview.\",\"```dataview dv.paragraph(localStorage.getItem(\\\"req-name\\\")) ```\",\"!!! info \\\"Is mandatory to use req- before whatever you defined in req-id flag.\\\"\",\"To remove responses from localStorage, run:\",\"```dataview localStorage.removeItem(\\\"req-name\\\") ```\",\"To remove all responses, go to settings and click on the Clear ID's button.\"]},\"10\":{\"h\":\"disabled\",\"t\":[\"Disables the request. If a req-id is specified, APIR will check for the response in localStorage. If it's not found, it will make a new request and store it. After that, APIR will use the stored response.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name disabled ```\"]},\"11\":{\"h\":\"req-repeat\",\"t\":[\"!!! warning \\\"This only works with JSON responses\\\"\",\"Specifies the number of times the request should be repeated and the interval between each repetition. The default value is 1@1 (read as X time(s) every X second(s)).\",\"```req url: api.coincap.io/v2/rates/bitcoin req-repeat: 5@5 render ```\"]},\"12\":{\"h\":\"notify-if\",\"t\":[\"!!! warning \\\"This only works with JSON responses\\\"\",\"Specifies the condition to trigger a notification. Can be used to monitor a specific value. The path syntax used to access nested objects varies from the show flag, here dots are used instead of arrows and not spaces are allowed in the path.\",\"```req url: api.coincap.io/v2/rates/bitcoin req-repeat: 5@5 notify-if: data.rateUsd < 69889 render ```\",\"!!! note \\\"In the example above, a notification will be triggered everytime the value of data.rateUsd is less than 69889.\\\"\"]},\"13\":{\"h\":\"save-to\",\"t\":[\"Specifies the path to save the response. It'll save the entire response. A file extension is required. It won't create directories.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 save-to: posts/1.json ```\"]},\"14\":{\"h\":\"properties\",\"t\":[\"!!! warning \\\"To use this flag you need a JSON response and the show flag\\\"\",\"Specifies the frontmatter properties to update with the response. The data should be strings separated by commas. To set internal links use the [[..]] syntax.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: id, title properties: id, title ```\"]},\"15\":{\"h\":\"render\",\"t\":[\"If present the response will be rendered as HTML. It's useful when the response is an image or a table. The HTML is sanitized to prevent XSS attacks.\",\"```req url: https://jsonplaceholder.typicode.com/photos/1 show: url format: ![img]({}) render ```\"]},\"16\":{\"h\":\"res-type\",\"t\":[\"Specifies the type of the response. If this flag is not present the plugin will try to guess the type based on the response content-type. This could be used as an optional fallback feature.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 res-type: json ```\"]},\"17\":{\"h\":\"maketable\",\"t\":[\"Converts the response into a table. It's useful when the response is an array of objects. This flags expects a list of titles separated by commas.\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\",\"!!! note \\\"In the example above, the response will be converted into a table with the titles name, artist, and stream.\\\"\"]},\"18\":{\"h\":\"🔎 Overview\",\"t\":[\"APIRequest (APIR) is a plugin for the note taking app Obsidian that allows you to make requests to apis or other sources and display the response in your notes.\"]},\"19\":{\"h\":\"🔥 Features\",\"t\":[\"Perform HTTP requests using various methods such as GET, POST, PUT, and DELETE.\",\"Receive responses in different formats including JSON, HTML, and Markdown.\",\"Utilize variables from the front-matter within code blocks.\",\"Save responses in the localStorage for convenient access and reuse.\",\"Disable code blocks as needed to optimize performance.\",\"Repeat requests multiple times at specified intervals, facilitating automated tasks or continuous data retrieval without manual intervention.\",\"Receive notifications when specific values meet predefined conditions, enabling proactive monitoring and alerting.\",\"Define shortcuts for executing requests, enhancing efficiency and user experience by enabling quick access to frequently used requests.\",\"Display specific values from responses, providing granular control over the presentation of data.\"]},\"20\":{\"h\":\"⚡ How to use\"},\"21\":{\"h\":\"👨🏻‍💻 Code-block\",\"t\":[\"To use it, create a code-block with the language set to req. Inside the code-block, you can specify url, method, body, headers, format, etc. See the available flags for more information.\",\"```req url: https://my-json-server.typicode.com/typicode/demo/comments method: post body: {\\\"id\\\":1} headers: {\\\"Accept\\\": \\\"application/json\\\"} show: id format: <h1>{}</h1> req-id: id-persona disabled ```\"]},\"22\":{\"h\":\"🛠️ Settings (don't have all functionalities yet)\",\"t\":[\"!!! info \\\"All parameters can be defined in settings.\\\"\",\"Press Ctrl+P and search for APIR. There are two options:\",\"Show response in modal\",\"Paste response in current document (at current line)\",\"More information\"]},\"23\":{\"h\":\"🛠️ Settings\",\"t\":[\"Using this method is NOT recommended. It is better to use code blocks. This method is very limited and does not support all the features of the code block method.\"]},\"24\":{\"h\":\"❓ Why use this method\",\"t\":[\"This method is useful when you want to make a quick request or you need to reuse the same request multiple times. You just need to fill the fields, press Ctrl+P, search for APIR and select the way you want to display the response (Show a modal or paste it into the document).\",\"Another advantage is that you can save the request and assign a shortcut to it. This way you can make the request just by pressing the keys you assigned.\"]},\"25\":{\"h\":\"🏳️ Flags\"},\"26\":{\"h\":\"name\",\"t\":[\"Specifies the name of the request.\"]},\"27\":{\"h\":\"url (required)\",\"t\":[\"Specifies the URL of the request.\"]},\"28\":{\"h\":\"method\",\"t\":[\"GET\",\"POST\",\"PUT\",\"DELETE\"]},\"29\":{\"h\":\"body\",\"t\":[\"Specifies the body of the request.\"]},\"30\":{\"h\":\"headers\",\"t\":[\"Specifies the headers of the request.\"]},\"31\":{\"h\":\"what to display\",\"t\":[\"Specifies the output you want.\"]},\"32\":{\"h\":\"Add\",\"t\":[\"Save the above fields into a new APIR (you can access all APIRs by pressing Ctrl+P and searching for APIR).\"]},\"33\":{\"h\":\"Clear\",\"t\":[\"Remove all IDs stored in localStorage. You could also click the APIR name to delete it.\"]},\"34\":{\"h\":\"👨🏻‍💻 Bloque de código\",\"t\":[\"El bloque de código es un bloque versátil que se puede usar para escribir código en diferentes lenguajes. En este caso, lo usaremos para realizar solicitudes.\"]},\"35\":{\"h\":\"🏳️ Banderas\",\"t\":[\"Las banderas son la forma de especificar los parámetros de nuestra solicitud y también el formato en el que queremos nuestra respuesta.\",\"Bandera\",\"Valor predeterminado\",\"url\",\"method\",\"GET\",\"body\",\"headers\",\"show\",\"ALL\",\"format\",\"{}\",\"req-id\",\"req-general\",\"disabled\",\"req-repeat\",\"1t@1s\",\"notify-if\",\"save-to\",\"properties\",\"render\",\"false\",\"res-type\",\"maketable\"]},\"36\":{\"h\":\"url\",\"t\":[\"Es la única bandera obligatoria. Especifica la URL de la solicitud. Se pueden utilizar variables definidas en el frontmatter.\",\"```req url: https://jsonplaceholder.typicode.com/users/{{this.id}} ```\",\"!!! note \\\"Donde {{this.id}} es una variable (id) definida en el frontmatter.\\\"\"]},\"37\":{\"h\":\"method\",\"t\":[\"Especifica el método de solicitud. El valor predeterminado es GET y los valores disponibles son:\",\"GET\",\"POST\",\"PUT\",\"DELETE\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post ```\"]},\"38\":{\"h\":\"body\",\"t\":[\"Especifica el cuerpo de la solicitud. El valor predeterminado es un objeto vacío. Los datos deben estar en formato JSON con comillas dobles separando las claves y valores con dos puntos y espacio. Se pueden utilizar variables definidas en el frontmatter.\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post body: {\\\"title\\\": {{this.title}}, \\\"body\\\": \\\"bar\\\", \\\"userId\\\": 1} ```\",\"!!! note \\\"Donde {{this.title}} es una variable (title) definida en el frontmatter.\\\"\"]},\"39\":{\"h\":\"headers\",\"t\":[\"Especifica los encabezados de la solicitud. El valor predeterminado es un objeto vacío. Los datos deben estar en formato JSON con comillas dobles separando las claves y valores con dos puntos y espacio. Se pueden utilizar variables definidas en el frontmatter.\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post headers: {\\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"} ```\"]},\"40\":{\"h\":\"show\",\"t\":[\"Especifica los datos de respuesta que se van a mostrar. Para acceder a objetos anidados, se utiliza una flecha derecha ->. El valor predeterminado es ALL.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating ```\",\"Se pueden mostrar múltiples salidas separándolas con coma.\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating, chess_daily -> best -> rating format: <p>Último juego: {}</p> <strong>Mejor juego: {}</strong> render ```\",\"También es posible iterar sobre un arreglo usando {..}. El siguiente ejemplo muestra la ciudad de todos los usuarios.\",\"```req url: https://jsonplaceholder.typicode.com/users show: {..} -> address -> city ```\",\"También es posible iterar sobre un número especificado de elementos del arreglo usando {n..n}.\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0..2} -> address -> city ```\",\"También es posible iterar sobre un rango especificado de índices del arreglo usando {n-n-n}.\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0-2-1} -> address -> city ```\",\"Puedes acceder al último elemento usando {-1}...\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {-1} ```\",\"... o obtener la cantidad de elementos usando {len}.\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {len} ```\",\"To access multiple elements at the same time when using {..} use & to separate the keys and use . to access the values.\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\"]},\"41\":{\"h\":\"format\",\"t\":[\"Especifica el formato en el que se debe mostrar la respuesta. El valor predeterminado es {}. Puede ser cualquier cadena (incluyendo markdown y html). Si se especifican más de una salida, se deben especificar más formatos, de lo contrario, se aplicará el mismo formato para todas las salidas.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: title, body format: <h1>{}</h1> <p>{}</p> render ```\",\"!!! note \\\"En este ejemplo, primero {} será reemplazado por el título, y segundo {} será reemplazado por el cuerpo.\\\"\"]},\"42\":{\"h\":\"req-id\",\"t\":[\"Especifica el ID con la que se almacenará la solicitud. El valor predeterminado es req-general. Esto es útil cuando queremos almacenar la respuesta en localStorage y usarla en otros bloques o notas.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name ```\",\"Las respuestas almacenadas se pueden ver usando el req-id con la bandera disabled (que no activará una nueva solicitud).\",\"```req url: https://jsonplaceholder.typicode.com/users/1 req-id: name disabled ```\",\"Las respuestas también se pueden ver usando dataview.\",\"```dataview dv.paragraph(localStorage.getItem(\\\"req-name\\\")) ```\",\"!!! info \\\"Es obligatorio usar req- antes de lo que sea que hayas definido en la bandera req-id.\\\"\",\"Para eliminar respuestas de localStorage, ejecuta:\",\"```dataview localStorage.removeItem(\\\"req-name\\\") ```\",\"Para eliminar todas las respuestas, ve a configuraciones y haz clic en el botón Clear.\"]},\"43\":{\"h\":\"disabled\",\"t\":[\"Deshabilita la solicitud. Si se especifica un req-id, APIR buscará la respuesta en localStorage. Si no se encuentra, realizará una nueva solicitud y la almacenará. Después de eso se usará la respuesta recién almacenada.\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name disabled ```\"]},\"44\":{\"h\":\"req-repeat\",\"t\":[\"!!! warning \\\"Esto solo funciona con respuestas de tipo JSON\\\"\",\"Especifica la cantidad de veces que se debe repetir la solicitud y el intervalo entre cada repetición. El valor predeterminado es 1@1 (leído como X veces cada X segundo(s)).\",\"```req url: api.coincap.io/v2/rates/bitcoin req-repeat: 5@5 render ```\"]},\"45\":{\"h\":\"notify-if\",\"t\":[\"!!! warning \\\"Esto solo funciona con respuestas de tipo JSON\\\"\",\"Especifica la condición para activar una notificación. Puede usarse para monitorear un valor específico. La sintaxis de ruta utilizada para acceder a objetos anidados varía respecto a la bandera show, aquí se usan puntos en lugar de flechas y no se permiten espacios en la ruta.\",\"```req url: api.coincap.io/v2/rates/bitcoin req-repeat: 5@5 notify-if: data.rateUsd < 69889 render ```\",\"!!! note \\\"En el ejemplo anterior, se activará una notificación cada vez que el valor de data.rateUsd sea menor que 69889.\\\"\"]},\"46\":{\"h\":\"save-to\",\"t\":[\"Especifica la ruta para guardar la respuesta. Guardará toda la respuesta. Se requiere una extensión de archivo. No creará directorios.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 save-to: posts/1.json ```\"]},\"47\":{\"h\":\"properties\",\"t\":[\"!!! warning \\\"Para usar esta bandera necesitas una respuesta de tipo JSON y la bandera show\\\"\",\"Especifica las propiedades del frontmatter que se actualizarán con la respuesta. Los datos deben ser cadenas separadas por comas. Para establecer enlaces internos, usa la sintaxis [[..]].\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: id, title properties: id, title ```\"]},\"48\":{\"h\":\"render\",\"t\":[\"Si se especifica, la respuesta se renderizará. El valor predeterminado es false. Se puede usar para mostrar imágenes, tablas, etc. La respuesta se saneará antes de renderizarla.\",\"```req url: https://jsonplaceholder.typicode.com/photos/1 show: url format: ![img]({}) render ```\"]},\"49\":{\"h\":\"res-type\",\"t\":[\"Espefica el tipo de respuesta. Si esta bandera no está presente, el plugin intentará adivinar el tipo basado en el tipo de contenido de la respuesta. Esto podría usarse como una característica opcional de respaldo.\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 res-type: json ```\"]},\"50\":{\"h\":\"maketable\",\"t\":[\"Convierte la respuesta en una tabla. Es útil cuando la respuesta es un array de objetos. Esta opción espera una lista de títulos separados por comas.\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\",\"!!! note \\\"En el ejemplo anterior, la respuesta se convertirá en una tabla con los títulos name, artist y stream.\\\"\"]},\"51\":{\"h\":\"🔎 APIRequest\",\"t\":[\"APIRequest (APIR) es un plugin para Obsidian que te permite realizar solicitudes HTTP y mostrar la respuesta en tus notas.\"]},\"52\":{\"h\":\"🔥 Características\",\"t\":[\"Realiza solicitudes HTTP utilizando varios métodos como GET, POST, PUT y DELETE.\",\"Recibe respuestas en diferentes formatos incluyendo JSON, HTML y Markdown.\",\"Utiliza variables del front-matter dentro de bloques de código.\",\"Guarda respuestas en localStorage para un acceso y reutilización convenientes.\",\"Desactiva bloques de código según sea necesario para optimizar el rendimiento.\",\"Repite solicitudes múltiples veces a intervalos especificados, facilitando tareas automatizadas o la recuperación continua de datos sin intervención manual.\",\"Recibe notificaciones cuando los valores específicos cumplen condiciones predefinidas, permitiendo monitoreo proactivo y alertas.\",\"Define combinaciones de teclas para ejecutar solicitudes, mejorando la eficiencia y la experiencia del usuario al permitir acceso rápido a solicitudes frecuentemente utilizadas.\",\"Muestra valores específicos de las respuestas, proporcionando un control detallado sobre la presentación de datos.\"]},\"53\":{\"h\":\"⚡ Cómo usar\"},\"54\":{\"h\":\"👨🏻‍💻 Bloque de código\",\"t\":[\"Para usarlo, crea un bloque de código con el lenguaje establecido en req. Dentro del bloque de código, puedes especificar url, method, body, headers, format, etc. Consulta las banderas disponibles para más información.\",\"```req url: https://my-json-server.typicode.com/typicode/demo/comments method: post body: {\\\"id\\\":1} headers: {\\\"Accept\\\": \\\"application/json\\\"} show: id format: <h1>{}</h1> req-id: id-persona disabled ```\"]},\"55\":{\"h\":\"🛠️ Configuraciones (no todas las funcionalidades están disponibles)\",\"t\":[\"!!! info \\\"Todos los parámetros se pueden definir en la configuración.\\\"\",\"Presiona Ctrl+P y busca APIR. Hay dos opciones:\",\"Mostrar respuesta en modal\",\"Pegar respuesta en el documento actual (en la línea actual)\",\"Más información\"]},\"56\":{\"h\":\"🛠️ Configuraciones\",\"t\":[\"No se recomienda utilizar este método. Es mejor usar bloques de código. Este método es muy limitado y no soporta todas las características del método de bloques de código.\"]},\"57\":{\"h\":\"❓ ¿Por qué usar este método?\",\"t\":[\"Este método es útil cuando deseas hacer una solicitud rápida o necesitas reutilizar la misma solicitud varias veces. Solo necesitas llenar los campos, presionar Ctrl+P, buscar APIR y seleccionar la forma en que deseas mostrar la respuesta (Mostrar en un modal o pegarla en el documento).\",\"Otra ventaja es que puedes guardar la solicitud y asignarle un atajo. De esta manera, puedes hacer la solicitud simplemente presionando las teclas que hayas asignado.\"]},\"58\":{\"h\":\"🏳️ Banderas\"},\"59\":{\"h\":\"name\",\"t\":[\"Especifica el nombre de la solicitud.\"]},\"60\":{\"h\":\"url (requerido)\",\"t\":[\"Especifica la URL de la solicitud.\"]},\"61\":{\"h\":\"method\",\"t\":[\"GET\",\"POST\",\"PUT\",\"DELETE\"]},\"62\":{\"h\":\"body\",\"t\":[\"Especifica el cuerpo de la solicitud.\"]},\"63\":{\"h\":\"headers\",\"t\":[\"Especifica los encabezados de la solicitud.\"]},\"64\":{\"h\":\"what to display\",\"t\":[\"Especifica la salida deseada.\"]},\"65\":{\"h\":\"Add\",\"t\":[\"Guarda los campos anteriores en un nuevo APIR (puedes acceder a todos los APIRs presionando Ctrl+P y buscando APIR).\"]},\"66\":{\"h\":\"Clear\",\"t\":[\"Elimina todos los IDs almacenados en localStorage. También puedes dar click en el nombre del APIR para eliminarlo.\"]},\"67\":{\"h\":\"👨🏻‍💻 代码块\",\"t\":[\"codeblock 是一个多功能块，可用于用不同语言编写代码。在本例中，我们将使用它来发出请求。\"]},\"68\":{\"h\":\"🏳️ Flag\",\"t\":[\"Flag是指定请求参数以及我们想要的响应格式的方式。\",\"标志\",\"默认\",\"url\",\"method\",\"GET\",\"body\",\"headers\",\"show\",\"ALL\",\"format\",\"{}\",\"req-id\",\"req-general\",\"disabled\",\"req-repeat\",\"1t@1s\",\"notify-if\",\"save-to\",\"properties\",\"render\",\"false\",\"res-type\",\"maketable\"]},\"69\":{\"h\":\"url\",\"t\":[\"是唯一的必需标志。它指定请求的端点。可以使用 frontmatter 中定义的变量。\",\"```req url: https://jsonplaceholder.typicode.com/users/{{this.id}} ```\",\"!!! note \\\"其中{{this.id}}是frontmatter中定义的变量（id）。\\\"\"]},\"70\":{\"h\":\"method\",\"t\":[\"指定请求方法。默认值为 GET，可用值为：\",\"GET\",\"POST\",\"PUT\",\"DELETE\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post ```\"]},\"71\":{\"h\":\"body\",\"t\":[\"指定请求的正文。默认值为空对象。数据应为 JSON 格式，双引号用冒号和空格分隔键和值。可以使用 frontmatter 中定义的变量。\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post body: {\\\"title\\\": {{this.title}}, \\\"body\\\": \\\"bar\\\", \\\"userId\\\": 1} ```\",\"!!! note \\\"其中 {{this.title}} 是 frontmatter 中定义的变量（title）。\\\"\"]},\"72\":{\"h\":\"headers\",\"t\":[\"指定请求的标头。默认值为空对象。数据应为 JSON 格式，双引号将键和值用冒号和空格分隔。可以使用 frontmatter 中定义的变量。\",\"```req url: https://jsonplaceholder.typicode.com/posts method: post headers: {\\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"} ```\"]},\"73\":{\"h\":\"show\",\"t\":[\"指定要显示的响应数据。使用右箭头 -> 访问嵌套对象。默认值为 ALL。\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating ```\",\"可以通过用逗号分隔来显示多个输出。\",\"```req url: https://api.chess.com/pub/player/hikaru/stats show: chess_daily -> last -> rating, chess_daily -> best -> rating format: <p>Last game: {}</p> <strong>Best game: {}</strong> render ```\",\"也可以使用 {..} 循环遍历数组。以下示例从所有用户中检索城市 (city)。\",\"```req url: https://jsonplaceholder.typicode.com/users show: {..} -> address -> city ```\",\"也可以使用 {n..n} 循环遍历数组中指定数量的元素。\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0..2} -> address -> city ```\",\"也可以使用 {n-n-n} 循环遍历数组的指定范围的索引。\",\"```req url: https://jsonplaceholder.typicode.com/users show: {0-2-1} -> address -> city ```\",\"您可以使用 {-1} 访问最后一个元素...\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {-1} ```\",\"...或者使用 {len} 获取数组的长度。\",\"```req url:https://api.modrinth.com/v2/project/distanthorizons show: game_versions -> {len} ```\",\"使用 {..} 时，若要同时访问多个元素，请使用 & 分隔键，并使用 . 访问值。\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\"]},\"74\":{\"h\":\"format\",\"t\":[\"指定响应应以何种格式显示。默认值为 {}。它可以是任何字符串（包括 markdown 和 html）。如果指定了多个输出，则应指定多种格式，否则，所有输出将应用相同的格式。\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: title, body format: <h1>{}</h1> <p>{}</p> render ```\",\"!!! warning \\\"在此示例中，第一个 {} 将被标题替换，第二个 {} 将被正文替换。\\\"\"]},\"75\":{\"h\":\"req-id\",\"t\":[\"指定请求的 ID。默认值为 req-general。当我们想要将响应存储在 localStorage 中并在其他块或注释中使用它时，这很有用。\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name ```\",\"可以使用带有 disabled 标志的 req-id 访问存储的响应（不会触发新请求）。\",\"```req url: https://jsonplaceholder.typicode.com/users/1 req-id: name disabled ```\",\"也可以使用 dataview 访问响应。\",\"```dataview dv.paragraph(localStorage.getItem(\\\"req-name\\\")) ```\",\"!!! info \\\"在req-id标志中定义的任何内容之前，必须使用req-\\\"\",\"要从 localStorage 中删除响应，请运行：\",\"```dataview localStorage.removeItem(\\\"req-name\\\") ```\",\"要删除所有响应，请转到设置并单击 Clear ID's (清除ID) 按钮。\"]},\"76\":{\"h\":\"disabled\",\"t\":[\"禁用请求。如果指定了 req-id，APIR 将在localStorage中检查响应。如果未找到，它将发出新请求并存储它。之后，APIR 将使用存储的响应。\",\"```req url: https://jsonplaceholder.typicode.com/users/1 show: name req-id: name disabled ```\"]},\"77\":{\"h\":\"req-repeat\",\"t\":[\"!!! warning \\\"这仅适用于 JSON 响应\\\"\",\"指定应重复请求的次数以及每次重复之间的间隔。默认值为 1@1（读作 X time(s) every X second(s) (每 X 秒 X 次)）。\",\"```req url: api.coincap.io/v2/rates/bitcoin req-repeat: 5@5 render ```\"]},\"78\":{\"h\":\"notify-if\",\"t\":[\"!!! warning \\\"这仅适用于 JSON 响应\\\"\",\"指定触发通知的条件。可用于监视特定值。用于访问嵌套对象的路径语法与 show 标志不同，这里使用点代替箭头，并且路径中不允许有空格。\",\"```req url: api.coincap.io/v2/rates/bitcoin req-repeat: 5@5 notify-if: data.rateUsd < 69889 render ```\",\"!!! note “在上面的例子中，每次 data.rateUsd 的值小于 69889 时都会触发通知。”\"]},\"79\":{\"h\":\"save-to\",\"t\":[\"指定保存响应的路径。它将保存整个响应。需要文件扩展名。它不会创建目录。\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 save-to: posts/1.json ```\"]},\"80\":{\"h\":\"properties\",\"t\":[\"!!! warning \\\"要使用此标志，您需要 JSON 响应和 show 标志\\\"\",\"指定要使用响应更新的前置内容属性。数据应该是用逗号分隔的字符串。要设置内部链接，请使用 [[..]] 语法。\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 show: id, title properties: id, title ```\"]},\"81\":{\"h\":\"render\",\"t\":[\"如果存在，响应将呈现为 HTML。当响应是图像或表格时，它很有用。HTML 经过清理以防止 XSS 攻击。\",\"```req url: https://jsonplaceholder.typicode.com/photos/1 show: url format: ![img]({}) render ```\"]},\"82\":{\"h\":\"res-type\",\"t\":[\"指定响应的类型。如果不存在此标志，插件将尝试根据响应内容类型猜测类型。这可以用作可选的后备功能。\",\"```req url: https://jsonplaceholder.typicode.com/posts/1 res-type: json ```\"]},\"83\":{\"h\":\"maketable\",\"t\":[\"将响应转换为表格。当响应是对象数组时，它很有用。此标志需要以逗号分隔的标题列表。\",\"```req url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=rooyca&api_key=API_KEY&format=json&limit=4 show: recenttracks -> track -> {..} -> name & artist.#text & streamable maketable: name, artist, stream ```\",\"!!! note \\\"在上面的示例中，响应将转换为带有标题 name, artist, 和 stream 的表格。\\\"\"]},\"84\":{\"h\":\"🔎 概述\",\"t\":[\"APIRequest (APIR) 是笔记应用 Obsidian 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。\"]},\"85\":{\"h\":\"🔥 功能\",\"t\":[\"使用各种方法执行 HTTP 请求，例如 GET、POST、PUT 和 DELETE。\",\"接收不同格式的响应，包括 JSON、HTML 和 Markdown。\",\"在代码块内利用前言中的变量。\",\"将响应保存在 localStorage 中，以方便访问和重用。\",\"根据需要禁用代码块以优化性能。\",\"以指定的间隔多次重复请求，促进自动化任务或连续数据检索而无需人工干预。\",\"当特定值满足预定义条件时接收通知，从而实现主动监控和警报。\",\"定义执行请求的快捷方式，通过快速访问常用请求来提高效率和用户体验。\",\"显示响应中的特定值，提供对数据呈现的精细控制。\"]},\"86\":{\"h\":\"⚡ 如何使用\"},\"87\":{\"h\":\"👨🏻‍💻 代码块\",\"t\":[\"要使用它，请创建一个代码块，并将语言设置为 req。在代码块内，您可以指定url、method、body、headers、format等。有关更多信息，请参阅可用标志。\",\"```req url: https://my-json-server.typicode.com/typicode/demo/comments method: post body: {\\\"id\\\":1} headers: {\\\"Accept\\\": \\\"application/json\\\"} show: id format: <h1>{}</h1> req-id: id-persona disabled ```\"]},\"88\":{\"h\":\"🛠️ 设置（尚未拥有所有功能）\",\"t\":[\"!!! info \\\"所有参数都可以在设置中定义\\\"\",\"按 Ctrl+P 并搜索 APIR。有两个选项：\",\"在模态中显示响应\",\"将响应粘贴到当前文档中（在当前行）\",\"更多信息\"]},\"89\":{\"h\":\"🛠️ 设置\",\"t\":[\"不推荐使用这种方法。最好使用代码块。这种方法非常有限，不支持代码块方法的所有功能。\"]},\"90\":{\"h\":\"❓ Why use this method\",\"t\":[\"当您想要快速发出请求或需要多次重复使用同一请求时，此方法非常有用。您只需填写字段，按 Ctrl+P，搜索 APIR，然后选择您想要显示响应的方式（显示模式或将其粘贴到文档中）。\",\"另一个优点是您可以保存请求并为其分配 快捷方式。这样，您只需按下您分配的键即可发出请求。\"]},\"91\":{\"h\":\"🏳️ 标志\"},\"92\":{\"h\":\"name\",\"t\":[\"指定请求的名称\"]},\"93\":{\"h\":\"url (必须)\",\"t\":[\"指定请求的 URL\"]},\"94\":{\"h\":\"method\",\"t\":[\"GET\",\"POST\",\"PUT\",\"DELETE\"]},\"95\":{\"h\":\"body\",\"t\":[\"指定请求的正文\"]},\"96\":{\"h\":\"headers\",\"t\":[\"指定请求的标头\"]},\"97\":{\"h\":\"what to display\",\"t\":[\"指定您想要的输出\"]},\"98\":{\"h\":\"Add\",\"t\":[\"将上述字段保存到新的 APIR 中（您可以通过按 Ctrl+P 并搜索 APIR 来访问所有 APIR）\"]},\"99\":{\"h\":\"Clear\",\"t\":[\"删除存储在 localStorage 中的所有 ID。您也可以单击 APIR 名称来删除它。\"]},\"100\":{\"h\":\"Usecase\",\"t\":[\"A collection of use cases for this plugin. If you have a one, please share it with us.\"]},\"101\":{\"h\":\"Render Markdown\",\"t\":[\"```req url: https://raw.githubusercontent.com/Rooyca/Rooyca/main/README.md ```\"]},\"102\":{\"h\":\"Check BITCOIN (or any crypto) price\",\"t\":[\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd ```\",\"64992.8972508856324769\",\"If we want to repeat this request 100 times every 5 seconds, we can do it like this:\",\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd req-repeat: 100@5 ```\",\"If we want to take this one step further and get notified when the price goes above 65000, we can do it like this:\",\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd req-repeat: 100@5 notify-if: data.rateUsd > 65000 ```\",\"!!! warning \\\"Noted the use of data.rateUsd instead of data -> rateUsd\\\"\"]},\"103\":{\"h\":\"Get the weather\",\"t\":[\"```req url: api.openweathermap.org/data/2.5/weather?q=<CITY>&appid=YOUR_API_KEY show: main -> temp ```\"]},\"104\":{\"h\":\"Search movies\",\"t\":[\"```req url: https://api.themoviedb.org/3/search/movie?query={{this.title}}&api_key=YOUR_API_KEY show: results -> {..} -> title ```\",\"!!! info \\\"Note the use of {{this.title}}. This is a feature that allows you to pass front-matter properties.\\\"\"]},\"105\":{\"h\":\"Render data\",\"t\":[\"```req url: https://mapi.mobilelegends.com/hero/detail?id={{this.file.name}} show: data -> cover_picture, data -> name, data -> type format: ![img]({}) <br> **Name:** {} <br> **Type:** {} render ```\"]},\"106\":{\"h\":\"\",\"t\":[\"```req url: https://api.todoist.com/rest/v2/tasks headers: {\\\"Authorization\\\": \\\"Bearer YOUR_TOKEN\\\"} show: {..} -> content format: - [ ] {} req-id: todos render ```\",\"!!! warning \\\"This will save the response in localStorage under the key req-todos\\\"\"]},\"107\":{\"h\":\"Your use case\",\"t\":[\"If you want to share your use case, please feel free to open a PR or a Issue.\"]},\"108\":{\"h\":\"Ejemplos de uso\",\"t\":[\"A collection of use cases for this plugin. If you have a one, please share it with us. Una colección ejemplos de uso para este plugin. Si tienes uno, por favor compártelo con nosotros.\"]},\"109\":{\"h\":\"Renderizar Markdown\",\"t\":[\"```req url: https://raw.githubusercontent.com/Rooyca/Rooyca/main/README.md ```\"]},\"110\":{\"h\":\"Ver el precio de BITCOIN (o cualquier criptomoneda)\",\"t\":[\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd ```\",\"64992.8972508856324769\",\"Si queremos repetir esta solicitud 100 veces cada 5 segundos, podemos hacerlo de la siguiente manera:\",\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd req-repeat: 100@5 ```\",\"Si deseamos llevar esto un paso más allá y recibir una notificación cuando el precio supere los 65000, podemos hacerlo de la siguiente manera:\",\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd req-repeat: 100@5 notify-if: data.rateUsd > 65000 ```\",\"!!! warning \\\"Ten presente el uso de data.rateUsd en lugar de data -> rateUsd\\\"\"]},\"111\":{\"h\":\"Obtener el clima\",\"t\":[\"```req url: api.openweathermap.org/data/2.5/weather?q=<CITY>&appid=YOUR_API_KEY show: main -> temp ```\"]},\"112\":{\"h\":\"Buscar peliculas\",\"t\":[\"```req url: https://api.themoviedb.org/3/search/movie?query={{this.title}}&api_key=YOUR_API_KEY show: results -> {..} -> title ```\",\"!!! info \\\"Nota el uso de {{this.title}}. Esta es una característica que te permite pasar propiedades del front-matter.\\\"\"]},\"113\":{\"h\":\"Renderizar datos\",\"t\":[\"```req url: https://mapi.mobilelegends.com/hero/detail?id={{this.file.name}} show: data -> cover_picture, data -> name, data -> type format: ![img]({}) <br> **Name:** {} <br> **Type:** {} render ```\"]},\"114\":{\"h\":\"\",\"t\":[\"```req url: https://api.todoist.com/rest/v2/tasks headers: {\\\"Authorization\\\": \\\"Bearer YOUR_TOKEN\\\"} show: {..} -> content format: - [ ] {} req-id: todos render ```\",\"!!! warning \\\"Esto guardará la respuesta en localStorage bajo la clave req-todos\\\"\"]},\"115\":{\"h\":\"Tu caso de uso\",\"t\":[\"Si deseas compartir tu caso de uso, por favor siéntete libre de abrir una PR o un Issue\"]},\"116\":{\"h\":\"用例\",\"t\":[\"此插件的用例集合。 如果您有，请与我们分享。\"]},\"117\":{\"h\":\"渲染 Markdown\",\"t\":[\"```req url: https://raw.githubusercontent.com/Rooyca/Rooyca/main/README.md ```\"]},\"118\":{\"h\":\"检查比特币（或任何加密货币）价格\",\"t\":[\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd ```\",\"64992.8972508856324769\",\"如果我们想每 5 秒重复此请求 100 次，我们可以这样做：\",\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd req-repeat: 100@5 ```\",\"如果我们想更进一步，在价格超过 65000 时收到通知，我们可以这样做：\",\"```req url: api.coincap.io/v2/rates/bitcoin show: data -> rateUsd req-repeat: 100@5 notify-if: data.rateUsd > 65000 ```\",\"!!! warning \\\"请注意使用 data.rateUsd 而不是 data -> rateUsd\\\"\"]},\"119\":{\"h\":\"获取天气\",\"t\":[\"```req url: api.openweathermap.org/data/2.5/weather?q=<CITY>&appid=YOUR_API_KEY show: main -> temp ```\"]},\"120\":{\"h\":\"搜索电影\",\"t\":[\"```req url: https://api.themoviedb.org/3/search/movie?query={{this.title}}&api_key=YOUR_API_KEY show: results -> {..} -> title ```\",\"!!! info \\\"请注意使用 {{this.title}}。此功能允许您传递前置属性。\\\"\"]},\"121\":{\"h\":\"渲染数据\",\"t\":[\"```req url: https://mapi.mobilelegends.com/hero/detail?id={{this.file.name}} show: data -> cover_picture, data -> name, data -> type format: ![img]({}) <br> **Name:** {} <br> **Type:** {} render ```\"]},\"122\":{\"h\":\"获取 TODOS\",\"t\":[\"```req url: https://api.todoist.com/rest/v2/tasks headers: {\\\"Authorization\\\": \\\"Bearer YOUR_TOKEN\\\"} show: {..} -> content format: - [ ] {} req-id: todos render ```\",\"!!! warning \\\"这将把响应保存在 localStorage 中的键 req-todos 下\\\"\"]},\"123\":{\"h\":\"您的用例\",\"t\":[\"如果您想分享您的用例，请随时打开 PR 或 Issue。\"]},\"124\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"125\":{\"h\":\"\"}},\"dirtCount\":0,\"index\":[[\"404\",{\"1\":{\"124\":1}}],[\"下\",{\"1\":{\"122\":1}}],[\"获取\",{\"0\":{\"122\":1}}],[\"获取天气\",{\"0\":{\"119\":1}}],[\"获取数组的长度\",{\"1\":{\"73\":1}}],[\"而不是\",{\"1\":{\"118\":1}}],[\"我们可以这样做\",{\"1\":{\"118\":2}}],[\"我们将使用它来发出请求\",{\"1\":{\"67\":1}}],[\"价格\",{\"0\":{\"118\":1}}],[\"检查比特币\",{\"0\":{\"118\":1}}],[\"渲染数据\",{\"0\":{\"121\":1}}],[\"渲染\",{\"0\":{\"117\":1}}],[\"用例\",{\"0\":{\"116\":1}}],[\"用于访问嵌套对象的路径语法与\",{\"1\":{\"78\":1}}],[\"3\",{\"1\":{\"104\":1,\"112\":1,\"120\":1}}],[\"q=<city>\",{\"1\":{\"103\":1,\"111\":1,\"119\":1}}],[\"qué\",{\"0\":{\"57\":1}}],[\"query=\",{\"1\":{\"104\":1,\"112\":1,\"120\":1}}],[\"queremos\",{\"1\":{\"35\":1,\"42\":1,\"110\":1}}],[\"que\",{\"1\":{\"34\":1,\"35\":1,\"40\":1,\"41\":1,\"42\":4,\"44\":1,\"45\":2,\"47\":1,\"51\":1,\"57\":3,\"112\":1}}],[\"quick\",{\"1\":{\"19\":1,\"24\":1}}],[\"quotes\",{\"1\":{\"5\":1,\"6\":1}}],[\"65000\",{\"1\":{\"102\":2,\"110\":2,\"118\":2}}],[\"64992\",{\"1\":{\"102\":1,\"110\":1,\"118\":1}}],[\"69889\",{\"1\":{\"12\":2,\"45\":2,\"78\":2}}],[\"名称来删除它\",{\"1\":{\"99\":1}}],[\"删除存储在\",{\"1\":{\"99\":1}}],[\"来访问所有\",{\"1\":{\"98\":1}}],[\"必须\",{\"0\":{\"93\":1}}],[\"必须使用req\",{\"1\":{\"75\":1}}],[\"快捷方式\",{\"1\":{\"90\":1}}],[\"另一个优点是您可以保存请求并为其分配\",{\"1\":{\"90\":1}}],[\"显示模式或将其粘贴到文档中\",{\"1\":{\"90\":1}}],[\"显示响应中的特定值\",{\"1\":{\"85\":1}}],[\"然后选择您想要显示响应的方式\",{\"1\":{\"90\":1}}],[\"搜索电影\",{\"0\":{\"120\":1}}],[\"搜索\",{\"1\":{\"90\":1}}],[\"此功能允许您传递前置属性\",{\"1\":{\"120\":1}}],[\"此插件的用例集合\",{\"1\":{\"116\":1}}],[\"此方法非常有用\",{\"1\":{\"90\":1}}],[\"此标志需要以逗号分隔的标题列表\",{\"1\":{\"83\":1}}],[\"最好使用代码块\",{\"1\":{\"89\":1}}],[\"不支持代码块方法的所有功能\",{\"1\":{\"89\":1}}],[\"不推荐使用这种方法\",{\"1\":{\"89\":1}}],[\"不会触发新请求\",{\"1\":{\"75\":1}}],[\"更多信息\",{\"1\":{\"88\":1}}],[\"有两个选项\",{\"1\":{\"88\":1}}],[\"有关更多信息\",{\"1\":{\"87\":1}}],[\"按\",{\"1\":{\"88\":1,\"90\":1}}],[\"按钮\",{\"1\":{\"75\":1}}],[\"所有参数都可以在设置中定义\",{\"1\":{\"88\":1}}],[\"所有输出将应用相同的格式\",{\"1\":{\"74\":1}}],[\"尚未拥有所有功能\",{\"0\":{\"88\":1}}],[\"设置\",{\"0\":{\"88\":1,\"89\":1}}],[\"如何使用\",{\"0\":{\"86\":1}}],[\"如果您想分享您的用例\",{\"1\":{\"123\":1}}],[\"如果您有\",{\"1\":{\"116\":1}}],[\"如果我们想更进一步\",{\"1\":{\"118\":1}}],[\"如果我们想每\",{\"1\":{\"118\":1}}],[\"如果不存在此标志\",{\"1\":{\"82\":1}}],[\"如果存在\",{\"1\":{\"81\":1}}],[\"如果未找到\",{\"1\":{\"76\":1}}],[\"如果指定了\",{\"1\":{\"76\":1}}],[\"如果指定了多个输出\",{\"1\":{\"74\":1}}],[\"提供对数据呈现的精细控制\",{\"1\":{\"85\":1}}],[\"通过快速访问常用请求来提高效率和用户体验\",{\"1\":{\"85\":1}}],[\"定义执行请求的快捷方式\",{\"1\":{\"85\":1}}],[\"从而实现主动监控和警报\",{\"1\":{\"85\":1}}],[\"促进自动化任务或连续数据检索而无需人工干预\",{\"1\":{\"85\":1}}],[\"根据需要禁用代码块以优化性能\",{\"1\":{\"85\":1}}],[\"以指定的间隔多次重复请求\",{\"1\":{\"85\":1}}],[\"以方便访问和重用\",{\"1\":{\"85\":1}}],[\"以下示例从所有用户中检索城市\",{\"1\":{\"73\":1}}],[\"接收不同格式的响应\",{\"1\":{\"85\":1}}],[\"例如\",{\"1\":{\"85\":1}}],[\"功能\",{\"0\":{\"85\":1}}],[\"或\",{\"1\":{\"123\":1}}],[\"或任何加密货币\",{\"0\":{\"118\":1}}],[\"或其他来源发出请求并在笔记中显示响应\",{\"1\":{\"84\":1}}],[\"或者使用\",{\"1\":{\"73\":1}}],[\"概述\",{\"0\":{\"84\":1}}],[\"的一个插件\",{\"1\":{\"84\":1}}],[\"的表格\",{\"1\":{\"83\":1}}],[\"的值小于\",{\"1\":{\"78\":1}}],[\"插件将尝试根据响应内容类型猜测类型\",{\"1\":{\"82\":1}}],[\"攻击\",{\"1\":{\"81\":1}}],[\"经过清理以防止\",{\"1\":{\"81\":1}}],[\"当您想要快速发出请求或需要多次重复使用同一请求时\",{\"1\":{\"90\":1}}],[\"当特定值满足预定义条件时接收通知\",{\"1\":{\"85\":1}}],[\"当响应是对象数组时\",{\"1\":{\"83\":1}}],[\"当响应是图像或表格时\",{\"1\":{\"81\":1}}],[\"当我们想要将响应存储在\",{\"1\":{\"75\":1}}],[\"语法\",{\"1\":{\"80\":1}}],[\"数据应该是用逗号分隔的字符串\",{\"1\":{\"80\":1}}],[\"数据应为\",{\"1\":{\"71\":1,\"72\":1}}],[\"您的用例\",{\"0\":{\"123\":1}}],[\"您也可以单击\",{\"1\":{\"99\":1}}],[\"您只需按下您分配的键即可发出请求\",{\"1\":{\"90\":1}}],[\"您只需填写字段\",{\"1\":{\"90\":1}}],[\"您可以通过按\",{\"1\":{\"98\":1}}],[\"您可以指定url\",{\"1\":{\"87\":1}}],[\"您可以使用\",{\"1\":{\"73\":1}}],[\"您需要\",{\"1\":{\"80\":1}}],[\"需要文件扩展名\",{\"1\":{\"79\":1}}],[\"并搜索\",{\"1\":{\"88\":1,\"98\":1}}],[\"并将语言设置为\",{\"1\":{\"87\":1}}],[\"并且路径中不允许有空格\",{\"1\":{\"78\":1}}],[\"并使用\",{\"1\":{\"73\":1}}],[\"次\",{\"1\":{\"77\":1,\"118\":1}}],[\"秒重复此请求\",{\"1\":{\"118\":1}}],[\"秒\",{\"1\":{\"77\":1}}],[\"每次\",{\"1\":{\"78\":1}}],[\"每\",{\"1\":{\"77\":1}}],[\"读作\",{\"1\":{\"77\":1}}],[\"响应将转换为带有标题\",{\"1\":{\"83\":1}}],[\"响应将呈现为\",{\"1\":{\"81\":1}}],[\"响应和\",{\"1\":{\"80\":1}}],[\"响应\",{\"1\":{\"77\":1,\"78\":1}}],[\"这将把响应保存在\",{\"1\":{\"122\":1}}],[\"这样\",{\"1\":{\"90\":1}}],[\"这种方法非常有限\",{\"1\":{\"89\":1}}],[\"这可以用作可选的后备功能\",{\"1\":{\"82\":1}}],[\"这里使用点代替箭头\",{\"1\":{\"78\":1}}],[\"这仅适用于\",{\"1\":{\"77\":1,\"78\":1}}],[\"这很有用\",{\"1\":{\"75\":1}}],[\"之后\",{\"1\":{\"76\":1}}],[\"将上述字段保存到新的\",{\"1\":{\"98\":1}}],[\"将响应粘贴到当前文档中\",{\"1\":{\"88\":1}}],[\"将响应保存在\",{\"1\":{\"85\":1}}],[\"将响应转换为表格\",{\"1\":{\"83\":1}}],[\"将使用存储的响应\",{\"1\":{\"76\":1}}],[\"将在localstorage中检查响应\",{\"1\":{\"76\":1}}],[\"将被正文替换\",{\"1\":{\"74\":1}}],[\"将被标题替换\",{\"1\":{\"74\":1}}],[\"禁用请求\",{\"1\":{\"76\":1}}],[\"清除id\",{\"1\":{\"75\":1}}],[\"要使用它\",{\"1\":{\"87\":1}}],[\"要使用此标志\",{\"1\":{\"80\":1}}],[\"要设置内部链接\",{\"1\":{\"80\":1}}],[\"要删除所有响应\",{\"1\":{\"75\":1}}],[\"要从\",{\"1\":{\"75\":1}}],[\"请随时打开\",{\"1\":{\"123\":1}}],[\"请注意使用\",{\"1\":{\"118\":1,\"120\":1}}],[\"请与我们分享\",{\"1\":{\"116\":1}}],[\"请参阅可用标志\",{\"1\":{\"87\":1}}],[\"请创建一个代码块\",{\"1\":{\"87\":1}}],[\"请求\",{\"1\":{\"85\":1}}],[\"请转到设置并单击\",{\"1\":{\"75\":1}}],[\"请运行\",{\"1\":{\"75\":1}}],[\"请使用\",{\"1\":{\"73\":1,\"80\":1}}],[\"中的键\",{\"1\":{\"122\":1}}],[\"中的所有\",{\"1\":{\"99\":1}}],[\"中\",{\"1\":{\"85\":1,\"98\":1}}],[\"中删除响应\",{\"1\":{\"75\":1}}],[\"中并在其他块或注释中使用它时\",{\"1\":{\"75\":1}}],[\"中定义的变量\",{\"1\":{\"69\":1,\"71\":2,\"72\":1}}],[\"第二个\",{\"1\":{\"74\":1}}],[\"第一个\",{\"1\":{\"74\":1}}],[\"在价格超过\",{\"1\":{\"118\":1}}],[\"在当前行\",{\"1\":{\"88\":1}}],[\"在模态中显示响应\",{\"1\":{\"88\":1}}],[\"在代码块内\",{\"1\":{\"87\":1}}],[\"在代码块内利用前言中的变量\",{\"1\":{\"85\":1}}],[\"在上面的示例中\",{\"1\":{\"83\":1}}],[\"在上面的例子中\",{\"1\":{\"78\":1}}],[\"在req\",{\"1\":{\"75\":1}}],[\"在此示例中\",{\"1\":{\"74\":1}}],[\"在本例中\",{\"1\":{\"67\":1}}],[\"否则\",{\"1\":{\"74\":1}}],[\"则应指定多种格式\",{\"1\":{\"74\":1}}],[\"和\",{\"1\":{\"74\":1,\"83\":1,\"85\":2}}],[\"包括\",{\"1\":{\"74\":1,\"85\":1}}],[\"它允许您向\",{\"1\":{\"84\":1}}],[\"它很有用\",{\"1\":{\"81\":1,\"83\":1}}],[\"它不会创建目录\",{\"1\":{\"79\":1}}],[\"它将保存整个响应\",{\"1\":{\"79\":1}}],[\"它将发出新请求并存储它\",{\"1\":{\"76\":1}}],[\"它可以是任何字符串\",{\"1\":{\"74\":1}}],[\"它指定请求的端点\",{\"1\":{\"69\":1}}],[\"分隔键\",{\"1\":{\"73\":1}}],[\"若要同时访问多个元素\",{\"1\":{\"73\":1}}],[\"时收到通知\",{\"1\":{\"118\":1}}],[\"时都会触发通知\",{\"1\":{\"78\":1}}],[\"时\",{\"1\":{\"73\":1}}],[\"使用各种方法执行\",{\"1\":{\"85\":1}}],[\"使用\",{\"1\":{\"73\":1}}],[\"使用右箭头\",{\"1\":{\"73\":1}}],[\"访问响应\",{\"1\":{\"75\":1}}],[\"访问存储的响应\",{\"1\":{\"75\":1}}],[\"访问值\",{\"1\":{\"73\":1}}],[\"访问最后一个元素\",{\"1\":{\"73\":1}}],[\"访问嵌套对象\",{\"1\":{\"73\":1}}],[\"循环遍历数组的指定范围的索引\",{\"1\":{\"73\":1}}],[\"循环遍历数组中指定数量的元素\",{\"1\":{\"73\":1}}],[\"循环遍历数组\",{\"1\":{\"73\":1}}],[\"也可以使用\",{\"1\":{\"73\":3,\"75\":1}}],[\"指定您想要的输出\",{\"1\":{\"97\":1}}],[\"指定响应的类型\",{\"1\":{\"82\":1}}],[\"指定响应应以何种格式显示\",{\"1\":{\"74\":1}}],[\"指定要使用响应更新的前置内容属性\",{\"1\":{\"80\":1}}],[\"指定要显示的响应数据\",{\"1\":{\"73\":1}}],[\"指定保存响应的路径\",{\"1\":{\"79\":1}}],[\"指定触发通知的条件\",{\"1\":{\"78\":1}}],[\"指定应重复请求的次数以及每次重复之间的间隔\",{\"1\":{\"77\":1}}],[\"指定请求的名称\",{\"1\":{\"92\":1}}],[\"指定请求的\",{\"1\":{\"75\":1,\"93\":1}}],[\"指定请求的标头\",{\"1\":{\"72\":1,\"96\":1}}],[\"指定请求的正文\",{\"1\":{\"71\":1,\"95\":1}}],[\"指定请求方法\",{\"1\":{\"70\":1}}],[\"双引号将键和值用冒号和空格分隔\",{\"1\":{\"72\":1}}],[\"双引号用冒号和空格分隔键和值\",{\"1\":{\"71\":1}}],[\"格式\",{\"1\":{\"71\":1,\"72\":1}}],[\"其中\",{\"1\":{\"69\":1,\"71\":1}}],[\"可以通过用逗号分隔来显示多个输出\",{\"1\":{\"73\":1}}],[\"可以使用带有\",{\"1\":{\"75\":1}}],[\"可以使用\",{\"1\":{\"69\":1,\"71\":1,\"72\":1}}],[\"可用于监视特定值\",{\"1\":{\"78\":1}}],[\"可用于用不同语言编写代码\",{\"1\":{\"67\":1}}],[\"可用值为\",{\"1\":{\"70\":1}}],[\"是笔记应用\",{\"1\":{\"84\":1}}],[\"是\",{\"1\":{\"71\":1}}],[\"是frontmatter中定义的变量\",{\"1\":{\"69\":1}}],[\"是唯一的必需标志\",{\"1\":{\"69\":1}}],[\"是一个多功能块\",{\"1\":{\"67\":1}}],[\"默认值为空对象\",{\"1\":{\"71\":1,\"72\":1}}],[\"默认值为\",{\"1\":{\"70\":1,\"73\":1,\"74\":1,\"75\":1,\"77\":1}}],[\"默认\",{\"1\":{\"68\":1}}],[\"标志不同\",{\"1\":{\"78\":1}}],[\"标志的\",{\"1\":{\"75\":1}}],[\"标志\",{\"0\":{\"91\":1},\"1\":{\"68\":1,\"80\":1}}],[\"代码块\",{\"0\":{\"67\":1,\"87\":1}}],[\"útil\",{\"1\":{\"42\":1,\"50\":1,\"57\":1}}],[\"último\",{\"1\":{\"40\":1}}],[\"única\",{\"1\":{\"36\":1}}],[\"índices\",{\"1\":{\"40\":1}}],[\"juego\",{\"1\":{\"40\":2}}],[\"just\",{\"1\":{\"24\":2}}],[\"json\",{\"1\":{\"5\":1,\"6\":2,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1,\"21\":2,\"38\":1,\"39\":2,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"49\":1,\"52\":1,\"54\":2,\"71\":1,\"72\":2,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"85\":1,\"87\":2}}],[\"jsonplaceholder\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":3,\"8\":1,\"9\":2,\"10\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":3,\"41\":1,\"42\":2,\"43\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":3,\"74\":1,\"75\":2,\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"❓\",{\"0\":{\"24\":1,\"57\":1,\"90\":1}}],[\"y\",{\"1\":{\"35\":1,\"37\":1,\"38\":2,\"39\":2,\"41\":2,\"42\":2,\"43\":1,\"44\":1,\"45\":1,\"47\":1,\"50\":1,\"51\":1,\"52\":5,\"55\":1,\"56\":1,\"57\":2,\"65\":1,\"110\":1}}],[\"yet\",{\"0\":{\"22\":1}}],[\"your\",{\"0\":{\"107\":1},\"1\":{\"18\":1,\"106\":1,\"107\":1,\"114\":1,\"122\":1}}],[\"you\",{\"1\":{\"7\":1,\"9\":1,\"14\":1,\"18\":1,\"21\":1,\"24\":7,\"31\":1,\"32\":1,\"33\":1,\"100\":1,\"104\":1,\"107\":1,\"108\":1}}],[\"⚡\",{\"0\":{\"20\":1,\"53\":1,\"86\":1}}],[\"5\",{\"1\":{\"11\":2,\"12\":2,\"44\":2,\"45\":2,\"77\":2,\"78\":2,\"102\":3,\"103\":1,\"110\":3,\"111\":1,\"118\":3,\"119\":1}}],[\"xss\",{\"1\":{\"15\":1,\"81\":1}}],[\"x\",{\"1\":{\"11\":2,\"44\":2,\"77\":4}}],[\"key=your\",{\"1\":{\"104\":1,\"112\":1,\"120\":1}}],[\"key=api\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"key\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1,\"103\":1,\"104\":1,\"106\":1,\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"keys\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"24\":1,\"40\":1}}],[\"2\",{\"1\":{\"7\":3,\"17\":1,\"40\":3,\"50\":1,\"73\":3,\"83\":1,\"103\":1,\"111\":1,\"119\":1}}],[\"0\",{\"1\":{\"7\":3,\"17\":1,\"40\":3,\"50\":1,\"73\":3,\"83\":1}}],[\"línea\",{\"1\":{\"55\":1}}],[\"lugar\",{\"1\":{\"45\":1,\"110\":1}}],[\"libre\",{\"1\":{\"115\":1}}],[\"like\",{\"1\":{\"102\":2}}],[\"limitado\",{\"1\":{\"56\":1}}],[\"limited\",{\"1\":{\"23\":1}}],[\"limit=4\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"line\",{\"1\":{\"22\":1}}],[\"links\",{\"1\":{\"14\":1}}],[\"lista\",{\"1\":{\"50\":1}}],[\"list\",{\"1\":{\"17\":1}}],[\"llevar\",{\"1\":{\"110\":1}}],[\"llenar\",{\"1\":{\"57\":1}}],[\"ll\",{\"1\":{\"13\":1}}],[\"leído\",{\"1\":{\"44\":1}}],[\"less\",{\"1\":{\"12\":1}}],[\"lenguaje\",{\"1\":{\"54\":1}}],[\"lenguajes\",{\"1\":{\"34\":1}}],[\"length\",{\"1\":{\"7\":1}}],[\"len\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"los\",{\"1\":{\"35\":1,\"37\":1,\"38\":1,\"39\":2,\"40\":2,\"47\":1,\"50\":1,\"52\":1,\"55\":1,\"57\":1,\"63\":1,\"65\":2,\"66\":1,\"110\":1}}],[\"lo\",{\"1\":{\"34\":1,\"41\":1,\"42\":1}}],[\"localstorage\",{\"1\":{\"9\":4,\"10\":1,\"19\":1,\"33\":1,\"42\":4,\"43\":1,\"52\":1,\"66\":1,\"75\":4,\"85\":1,\"99\":1,\"106\":1,\"114\":1,\"122\":1}}],[\"loop\",{\"1\":{\"7\":1}}],[\"looping\",{\"1\":{\"7\":2}}],[\"la\",{\"1\":{\"35\":1,\"36\":3,\"38\":1,\"39\":1,\"40\":2,\"41\":1,\"42\":5,\"43\":4,\"44\":2,\"45\":4,\"46\":3,\"47\":3,\"48\":2,\"49\":1,\"50\":3,\"51\":1,\"52\":4,\"55\":2,\"57\":5,\"59\":1,\"60\":2,\"62\":1,\"63\":1,\"64\":1,\"110\":2,\"114\":2}}],[\"las\",{\"0\":{\"55\":1},\"1\":{\"35\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":3,\"47\":1,\"52\":1,\"54\":1,\"56\":1,\"57\":1}}],[\"last\",{\"1\":{\"7\":3,\"40\":2,\"73\":2}}],[\"language\",{\"1\":{\"21\":1}}],[\"languages\",{\"1\":{\"1\":1}}],[\"<br>\",{\"1\":{\"105\":2,\"113\":2,\"121\":2}}],[\"<strong>mejor\",{\"1\":{\"40\":1}}],[\"<strong>best\",{\"1\":{\"7\":1,\"73\":1}}],[\"<p>último\",{\"1\":{\"40\":1}}],[\"<p>\",{\"1\":{\"8\":1,\"41\":1,\"74\":1}}],[\"<p>last\",{\"1\":{\"7\":1,\"73\":1}}],[\"<h1>\",{\"1\":{\"8\":1,\"21\":1,\"41\":1,\"54\":1,\"74\":1,\"87\":1}}],[\"<\",{\"1\":{\"7\":2,\"8\":2,\"12\":1,\"21\":1,\"40\":2,\"41\":2,\"45\":1,\"54\":1,\"73\":2,\"74\":2,\"78\":1,\"87\":1}}],[\"githubusercontent\",{\"1\":{\"101\":1,\"109\":1,\"117\":1}}],[\"guarda\",{\"1\":{\"52\":1,\"65\":1}}],[\"guardará\",{\"1\":{\"46\":1,\"114\":1}}],[\"guardar\",{\"1\":{\"46\":1,\"57\":1}}],[\"guess\",{\"1\":{\"16\":1}}],[\"granular\",{\"1\":{\"19\":1}}],[\"goes\",{\"1\":{\"102\":1}}],[\"go\",{\"1\":{\"9\":1}}],[\"game\",{\"1\":{\"7\":4,\"40\":2,\"73\":4}}],[\"general\",{\"1\":{\"2\":1,\"9\":1,\"35\":1,\"42\":1,\"68\":1,\"75\":1}}],[\"getitem\",{\"1\":{\"9\":1,\"42\":1,\"75\":1}}],[\"getrecenttracks\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"get\",{\"0\":{\"103\":1},\"1\":{\"2\":1,\"4\":2,\"7\":1,\"19\":1,\"28\":1,\"35\":1,\"37\":2,\"52\":1,\"61\":1,\"68\":1,\"70\":2,\"85\":1,\"94\":1,\"102\":1}}],[\">\",{\"1\":{\"7\":18,\"17\":3,\"40\":18,\"50\":3,\"73\":18,\"83\":3,\"102\":5,\"103\":1,\"104\":2,\"105\":3,\"106\":1,\"110\":5,\"111\":1,\"112\":2,\"113\":3,\"114\":1,\"118\":5,\"119\":1,\"120\":2,\"121\":3,\"122\":1}}],[\"rooyca\",{\"1\":{\"101\":2,\"109\":2,\"117\":2}}],[\"rápida\",{\"1\":{\"57\":1}}],[\"rápido\",{\"1\":{\"52\":1}}],[\"ruta\",{\"1\":{\"45\":2,\"46\":1}}],[\"run\",{\"1\":{\"9\":1}}],[\"raw\",{\"1\":{\"101\":1,\"109\":1,\"117\":1}}],[\"rango\",{\"1\":{\"40\":1}}],[\"range\",{\"1\":{\"7\":1}}],[\"rateusd\",{\"1\":{\"12\":2,\"45\":2,\"78\":2,\"102\":6,\"110\":6,\"118\":6}}],[\"rates\",{\"1\":{\"11\":1,\"12\":1,\"44\":1,\"45\":1,\"77\":1,\"78\":1,\"102\":3,\"110\":3,\"118\":3}}],[\"rating\",{\"1\":{\"7\":3,\"40\":3,\"73\":3}}],[\"right\",{\"1\":{\"7\":1}}],[\"rendimiento\",{\"1\":{\"52\":1}}],[\"renderizar\",{\"0\":{\"109\":1,\"113\":1}}],[\"renderizarla\",{\"1\":{\"48\":1}}],[\"renderizará\",{\"1\":{\"48\":1}}],[\"rendered\",{\"1\":{\"15\":1}}],[\"render\",{\"0\":{\"15\":1,\"48\":1,\"81\":1,\"101\":1,\"105\":1},\"1\":{\"2\":1,\"7\":1,\"8\":1,\"11\":1,\"12\":1,\"15\":1,\"35\":1,\"40\":1,\"41\":1,\"44\":1,\"45\":1,\"48\":1,\"68\":1,\"73\":1,\"74\":1,\"77\":1,\"78\":1,\"81\":1,\"105\":1,\"106\":1,\"113\":1,\"114\":1,\"121\":1,\"122\":1}}],[\"reutilizar\",{\"1\":{\"57\":1}}],[\"reutilización\",{\"1\":{\"52\":1}}],[\"reuse\",{\"1\":{\"19\":1,\"24\":1}}],[\"reemplazado\",{\"1\":{\"41\":2}}],[\"realiza\",{\"1\":{\"52\":1}}],[\"realizará\",{\"1\":{\"43\":1}}],[\"realizar\",{\"1\":{\"34\":1,\"51\":1}}],[\"readme\",{\"1\":{\"101\":1,\"109\":1,\"117\":1}}],[\"read\",{\"1\":{\"11\":1}}],[\"recomienda\",{\"1\":{\"56\":1}}],[\"recommended\",{\"1\":{\"23\":1}}],[\"recuperación\",{\"1\":{\"52\":1}}],[\"recibir\",{\"1\":{\"110\":1}}],[\"recibe\",{\"1\":{\"52\":2}}],[\"recién\",{\"1\":{\"43\":1}}],[\"receive\",{\"1\":{\"19\":2}}],[\"recenttracks\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"retrieval\",{\"1\":{\"19\":1}}],[\"retrieves\",{\"1\":{\"7\":1}}],[\"removeitem\",{\"1\":{\"9\":1,\"42\":1,\"75\":1}}],[\"remove\",{\"1\":{\"9\":2,\"33\":1}}],[\"repite\",{\"1\":{\"52\":1}}],[\"repetición\",{\"1\":{\"44\":1}}],[\"repetir\",{\"1\":{\"44\":1,\"110\":1}}],[\"repetition\",{\"1\":{\"11\":1}}],[\"repeated\",{\"1\":{\"11\":1}}],[\"repeat\",{\"0\":{\"11\":1,\"44\":1,\"77\":1},\"1\":{\"2\":1,\"11\":1,\"12\":1,\"19\":1,\"35\":1,\"44\":1,\"45\":1,\"68\":1,\"77\":1,\"78\":1,\"102\":3,\"110\":2,\"118\":2}}],[\"replaced\",{\"1\":{\"8\":2}}],[\"rest\",{\"1\":{\"106\":1,\"114\":1,\"122\":1}}],[\"results\",{\"1\":{\"104\":1,\"112\":1,\"120\":1}}],[\"respaldo\",{\"1\":{\"49\":1}}],[\"respecto\",{\"1\":{\"45\":1}}],[\"respuestas\",{\"1\":{\"42\":4,\"44\":1,\"45\":1,\"52\":3}}],[\"respuesta\",{\"1\":{\"35\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":2,\"46\":2,\"47\":2,\"48\":2,\"49\":2,\"50\":3,\"51\":1,\"55\":2,\"57\":1,\"114\":1}}],[\"responses\",{\"1\":{\"9\":4,\"11\":1,\"12\":1,\"19\":3}}],[\"response\",{\"1\":{\"2\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":3,\"18\":1,\"22\":2,\"24\":1,\"106\":1}}],[\"res\",{\"0\":{\"16\":1,\"49\":1,\"82\":1},\"1\":{\"2\":1,\"16\":1,\"35\":1,\"49\":1,\"68\":1,\"82\":1}}],[\"requerido\",{\"0\":{\"60\":1}}],[\"request\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"9\":2,\"10\":2,\"11\":1,\"24\":4,\"26\":1,\"27\":1,\"29\":1,\"30\":1,\"102\":1}}],[\"requests\",{\"1\":{\"1\":1,\"18\":1,\"19\":4}}],[\"requiere\",{\"1\":{\"46\":1}}],[\"required\",{\"0\":{\"27\":1},\"1\":{\"3\":1,\"13\":1}}],[\"req\",{\"0\":{\"9\":1,\"11\":1,\"42\":1,\"44\":1,\"75\":1,\"77\":1},\"1\":{\"2\":3,\"9\":8,\"10\":2,\"11\":1,\"12\":1,\"21\":2,\"35\":3,\"42\":8,\"43\":2,\"44\":1,\"45\":1,\"54\":2,\"68\":3,\"75\":6,\"76\":2,\"77\":1,\"78\":1,\"87\":2,\"102\":2,\"106\":2,\"110\":2,\"114\":2,\"118\":2,\"122\":2}}],[\"nosotros\",{\"1\":{\"108\":1}}],[\"nombre\",{\"1\":{\"59\":1,\"66\":1}}],[\"no\",{\"0\":{\"55\":1},\"1\":{\"42\":1,\"43\":1,\"45\":1,\"46\":1,\"49\":1,\"56\":2}}],[\"nota\",{\"1\":{\"112\":1}}],[\"notas\",{\"1\":{\"42\":1,\"51\":1}}],[\"notified\",{\"1\":{\"102\":1}}],[\"notificaciones\",{\"1\":{\"52\":1}}],[\"notificación\",{\"1\":{\"45\":2,\"110\":1}}],[\"notifications\",{\"1\":{\"19\":1}}],[\"notification\",{\"1\":{\"12\":2}}],[\"notify\",{\"0\":{\"12\":1,\"45\":1,\"78\":1},\"1\":{\"2\":1,\"12\":1,\"35\":1,\"45\":1,\"68\":1,\"78\":1,\"102\":1,\"110\":1,\"118\":1}}],[\"not\",{\"1\":{\"10\":1,\"12\":1,\"16\":1,\"23\":2,\"124\":1}}],[\"noted\",{\"1\":{\"102\":1}}],[\"notes\",{\"1\":{\"9\":1,\"18\":1}}],[\"note\",{\"1\":{\"3\":1,\"5\":1,\"8\":1,\"12\":1,\"17\":1,\"18\":1,\"36\":1,\"38\":1,\"41\":1,\"45\":1,\"50\":1,\"69\":1,\"71\":1,\"78\":1,\"83\":1,\"104\":1}}],[\"número\",{\"1\":{\"40\":1}}],[\"nuevo\",{\"1\":{\"65\":1}}],[\"nueva\",{\"1\":{\"42\":1,\"43\":1}}],[\"nuestra\",{\"1\":{\"35\":2}}],[\"number\",{\"1\":{\"7\":1,\"11\":1}}],[\"necesario\",{\"1\":{\"52\":1}}],[\"necesitas\",{\"1\":{\"47\":1,\"57\":2}}],[\"needed\",{\"1\":{\"19\":1}}],[\"need\",{\"1\":{\"14\":1,\"24\":2}}],[\"new\",{\"1\":{\"9\":1,\"10\":1,\"32\":1}}],[\"nested\",{\"1\":{\"7\":1,\"12\":1}}],[\"name\",{\"0\":{\"26\":1,\"59\":1,\"92\":1},\"1\":{\"7\":2,\"9\":5,\"10\":2,\"17\":3,\"26\":1,\"33\":1,\"40\":2,\"42\":5,\"43\":2,\"50\":3,\"73\":2,\"75\":5,\"76\":2,\"83\":3,\"105\":3,\"113\":3,\"121\":3}}],[\"n\",{\"1\":{\"7\":5,\"40\":5,\"73\":5}}],[\"8972508856324769\",{\"1\":{\"102\":1,\"110\":1,\"118\":1}}],[\"8\",{\"1\":{\"6\":1,\"39\":1,\"72\":1}}],[\"8a2be2\",{\"1\":{\"0\":1}}],[\"```dataview\",{\"1\":{\"9\":2,\"42\":2,\"75\":2}}],[\"```\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":1,\"9\":4,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":8,\"41\":1,\"42\":4,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"54\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":8,\"74\":1,\"75\":4,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"87\":1,\"101\":1,\"102\":3,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"109\":1,\"110\":3,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"117\":1,\"118\":3,\"119\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"```req\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":1,\"9\":2,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":8,\"41\":1,\"42\":2,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"54\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":8,\"74\":1,\"75\":2,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"87\":1,\"101\":1,\"102\":3,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"109\":1,\"110\":3,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"117\":1,\"118\":3,\"119\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"ventaja\",{\"1\":{\"57\":1}}],[\"vez\",{\"1\":{\"45\":1}}],[\"veces\",{\"1\":{\"44\":2,\"52\":1,\"57\":1,\"110\":1}}],[\"ve\",{\"1\":{\"42\":1}}],[\"ver\",{\"0\":{\"110\":1},\"1\":{\"42\":2}}],[\"very\",{\"1\":{\"23\":1}}],[\"versátil\",{\"1\":{\"34\":1}}],[\"versions\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"versatile\",{\"1\":{\"1\":1}}],[\"v2\",{\"1\":{\"7\":2,\"11\":1,\"12\":1,\"40\":2,\"44\":1,\"45\":1,\"73\":2,\"77\":1,\"78\":1,\"102\":3,\"106\":1,\"110\":3,\"114\":1,\"118\":3,\"122\":1}}],[\"varía\",{\"1\":{\"45\":1}}],[\"varias\",{\"1\":{\"57\":1}}],[\"variable\",{\"1\":{\"3\":1,\"5\":1,\"36\":1,\"38\":1}}],[\"variables\",{\"1\":{\"3\":1,\"5\":1,\"6\":1,\"19\":1,\"36\":1,\"38\":1,\"39\":1,\"52\":1}}],[\"varios\",{\"1\":{\"52\":1}}],[\"various\",{\"1\":{\"19\":1}}],[\"varies\",{\"1\":{\"12\":1}}],[\"van\",{\"1\":{\"40\":1}}],[\"vacío\",{\"1\":{\"38\":1,\"39\":1}}],[\"valores\",{\"1\":{\"37\":1,\"38\":1,\"39\":1,\"52\":2}}],[\"valor\",{\"1\":{\"35\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"44\":1,\"45\":2,\"48\":1}}],[\"values\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"19\":2,\"40\":1}}],[\"value\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"11\":1,\"12\":2}}],[\"eficiencia\",{\"1\":{\"52\":1}}],[\"efficiency\",{\"1\":{\"19\":1}}],[\"ejecutar\",{\"1\":{\"52\":1}}],[\"ejecuta\",{\"1\":{\"42\":1}}],[\"ejemplos\",{\"0\":{\"108\":1},\"1\":{\"108\":1}}],[\"ejemplo\",{\"1\":{\"40\":1,\"41\":1,\"45\":1,\"50\":1}}],[\"elimina\",{\"1\":{\"66\":1}}],[\"eliminarlo\",{\"1\":{\"66\":1}}],[\"eliminar\",{\"1\":{\"42\":2}}],[\"el\",{\"0\":{\"110\":1,\"111\":1},\"1\":{\"34\":1,\"35\":2,\"36\":2,\"37\":2,\"38\":4,\"39\":2,\"40\":2,\"41\":6,\"42\":4,\"44\":2,\"45\":2,\"48\":1,\"49\":4,\"50\":1,\"52\":1,\"54\":1,\"55\":1,\"57\":1,\"59\":1,\"62\":1,\"66\":1,\"110\":2,\"112\":1}}],[\"elemento\",{\"1\":{\"40\":1}}],[\"elementos\",{\"1\":{\"40\":2}}],[\"element\",{\"1\":{\"7\":1}}],[\"elements\",{\"1\":{\"7\":2,\"40\":1}}],[\"etc\",{\"1\":{\"21\":1,\"48\":1,\"54\":1}}],[\"extensión\",{\"1\":{\"46\":1}}],[\"extension\",{\"1\":{\"13\":1}}],[\"experiencia\",{\"1\":{\"52\":1}}],[\"experience\",{\"1\":{\"19\":1}}],[\"expects\",{\"1\":{\"17\":1}}],[\"executing\",{\"1\":{\"19\":1}}],[\"example\",{\"1\":{\"7\":1,\"8\":1,\"12\":1,\"17\":1}}],[\"enlaces\",{\"1\":{\"47\":1}}],[\"entre\",{\"1\":{\"44\":1}}],[\"entire\",{\"1\":{\"13\":1}}],[\"encuentra\",{\"1\":{\"43\":1}}],[\"encabezados\",{\"1\":{\"39\":1,\"63\":1}}],[\"en\",{\"1\":{\"34\":2,\"35\":1,\"36\":2,\"38\":3,\"39\":2,\"41\":2,\"42\":4,\"43\":1,\"45\":3,\"49\":1,\"50\":3,\"51\":1,\"52\":2,\"54\":1,\"55\":4,\"57\":3,\"65\":1,\"66\":2,\"110\":1,\"114\":1}}],[\"enhancing\",{\"1\":{\"19\":1}}],[\"enabling\",{\"1\":{\"19\":2}}],[\"endpoint\",{\"1\":{\"3\":1}}],[\"everytime\",{\"1\":{\"12\":1}}],[\"every\",{\"1\":{\"11\":1,\"77\":1,\"102\":1}}],[\"each\",{\"1\":{\"11\":1}}],[\"empty\",{\"1\":{\"5\":1,\"6\":1}}],[\"eso\",{\"1\":{\"43\":1}}],[\"están\",{\"0\":{\"55\":1}}],[\"está\",{\"1\":{\"49\":1}}],[\"establecido\",{\"1\":{\"54\":1}}],[\"establecer\",{\"1\":{\"47\":1}}],[\"esta\",{\"1\":{\"47\":1,\"49\":1,\"50\":1,\"57\":1,\"110\":1,\"112\":1}}],[\"estar\",{\"1\":{\"38\":1,\"39\":1}}],[\"esto\",{\"1\":{\"42\":1,\"44\":1,\"45\":1,\"49\":1,\"110\":1,\"114\":1}}],[\"este\",{\"0\":{\"57\":1},\"1\":{\"34\":1,\"41\":1,\"56\":2,\"57\":1,\"108\":1}}],[\"espera\",{\"1\":{\"50\":1}}],[\"espefica\",{\"1\":{\"49\":1}}],[\"específicos\",{\"1\":{\"52\":2}}],[\"específico\",{\"1\":{\"45\":1}}],[\"especifican\",{\"1\":{\"41\":1}}],[\"especificados\",{\"1\":{\"52\":1}}],[\"especificado\",{\"1\":{\"40\":2}}],[\"especifica\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"59\":1,\"60\":1,\"62\":1,\"63\":1,\"64\":1}}],[\"especificar\",{\"1\":{\"35\":1,\"41\":1,\"54\":1}}],[\"espacios\",{\"1\":{\"45\":1}}],[\"espacio\",{\"1\":{\"38\":1,\"39\":1}}],[\"español\",{\"1\":{\"0\":1}}],[\"escribir\",{\"1\":{\"34\":1}}],[\"es\",{\"1\":{\"0\":1,\"34\":1,\"36\":2,\"37\":1,\"38\":2,\"39\":1,\"40\":4,\"41\":1,\"42\":3,\"44\":1,\"48\":1,\"50\":2,\"51\":1,\"56\":2,\"57\":2,\"112\":1}}],[\"picture\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"peliculas\",{\"0\":{\"112\":1}}],[\"pegarla\",{\"1\":{\"57\":1}}],[\"pegar\",{\"1\":{\"55\":1}}],[\"permitir\",{\"1\":{\"52\":1}}],[\"permitiendo\",{\"1\":{\"52\":1}}],[\"permite\",{\"1\":{\"51\":1,\"112\":1}}],[\"permiten\",{\"1\":{\"45\":1}}],[\"persona\",{\"1\":{\"21\":1,\"54\":1,\"87\":1}}],[\"performance\",{\"1\":{\"19\":1}}],[\"perform\",{\"1\":{\"19\":1}}],[\"podemos\",{\"1\":{\"110\":2}}],[\"podría\",{\"1\":{\"49\":1}}],[\"por\",{\"0\":{\"57\":1},\"1\":{\"41\":2,\"47\":1,\"50\":1,\"108\":1,\"115\":1}}],[\"posible\",{\"1\":{\"40\":3}}],[\"possible\",{\"1\":{\"7\":3}}],[\"posts\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"8\":1,\"13\":2,\"14\":1,\"16\":1,\"37\":1,\"38\":1,\"39\":1,\"41\":1,\"46\":2,\"47\":1,\"49\":1,\"70\":1,\"71\":1,\"72\":1,\"74\":1,\"79\":2,\"80\":1,\"82\":1}}],[\"post\",{\"1\":{\"4\":2,\"5\":1,\"6\":1,\"19\":1,\"21\":1,\"28\":1,\"37\":2,\"38\":1,\"39\":1,\"52\":1,\"54\":1,\"61\":1,\"70\":2,\"71\":1,\"72\":1,\"85\":1,\"87\":1,\"94\":1}}],[\"please\",{\"1\":{\"100\":1,\"107\":1,\"108\":1}}],[\"plugin\",{\"1\":{\"16\":1,\"18\":1,\"49\":1,\"51\":1,\"100\":1,\"108\":2}}],[\"player\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"photos\",{\"1\":{\"15\":1,\"48\":1,\"81\":1}}],[\"pr\",{\"1\":{\"107\":1,\"115\":1,\"123\":1}}],[\"price\",{\"0\":{\"102\":1},\"1\":{\"102\":1}}],[\"primero\",{\"1\":{\"41\":1}}],[\"precio\",{\"0\":{\"110\":1},\"1\":{\"110\":1}}],[\"predefinidas\",{\"1\":{\"52\":1}}],[\"predefined\",{\"1\":{\"19\":1}}],[\"predeterminado\",{\"1\":{\"35\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"44\":1,\"48\":1}}],[\"presionando\",{\"1\":{\"57\":1,\"65\":1}}],[\"presionar\",{\"1\":{\"57\":1}}],[\"presiona\",{\"1\":{\"55\":1}}],[\"pressing\",{\"1\":{\"24\":1,\"32\":1}}],[\"press\",{\"1\":{\"22\":1,\"24\":1}}],[\"presentación\",{\"1\":{\"52\":1}}],[\"presentation\",{\"1\":{\"19\":1}}],[\"presente\",{\"1\":{\"49\":1,\"110\":1}}],[\"present\",{\"1\":{\"15\":1,\"16\":1}}],[\"prevent\",{\"1\":{\"15\":1}}],[\"proactivo\",{\"1\":{\"52\":1}}],[\"proactive\",{\"1\":{\"19\":1}}],[\"proporcionando\",{\"1\":{\"52\":1}}],[\"propiedades\",{\"1\":{\"47\":1,\"112\":1}}],[\"properties\",{\"0\":{\"14\":1,\"47\":1,\"80\":1},\"1\":{\"2\":1,\"14\":2,\"35\":1,\"47\":1,\"68\":1,\"80\":1,\"104\":1}}],[\"providing\",{\"1\":{\"19\":1}}],[\"project\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"pasar\",{\"1\":{\"112\":1}}],[\"paso\",{\"1\":{\"110\":1}}],[\"pass\",{\"1\":{\"104\":1}}],[\"paste\",{\"1\":{\"22\":1,\"24\":1}}],[\"parámetros\",{\"1\":{\"35\":1,\"55\":1}}],[\"para\",{\"1\":{\"34\":2,\"40\":1,\"41\":1,\"42\":2,\"45\":3,\"46\":1,\"47\":2,\"48\":1,\"51\":1,\"52\":3,\"54\":2,\"66\":1,\"108\":1}}],[\"paragraph\",{\"1\":{\"9\":1,\"42\":1,\"75\":1}}],[\"parameters\",{\"1\":{\"2\":1,\"22\":1}}],[\"path\",{\"1\":{\"12\":2,\"13\":1}}],[\"p>\",{\"1\":{\"7\":1,\"8\":1,\"40\":1,\"41\":1,\"73\":1,\"74\":1}}],[\"puntos\",{\"1\":{\"38\":1,\"39\":1,\"45\":1}}],[\"puedes\",{\"1\":{\"40\":1,\"54\":1,\"57\":2,\"65\":1,\"66\":1}}],[\"pueden\",{\"1\":{\"36\":1,\"38\":1,\"39\":1,\"40\":1,\"42\":2,\"55\":1}}],[\"puede\",{\"1\":{\"34\":1,\"41\":1,\"45\":1,\"48\":1}}],[\"pub\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"put\",{\"1\":{\"4\":1,\"19\":1,\"28\":1,\"37\":1,\"52\":1,\"61\":1,\"70\":1,\"85\":1,\"94\":1}}],[\"100\",{\"1\":{\"102\":3,\"110\":3,\"118\":3}}],[\"1\",{\"1\":{\"5\":1,\"7\":3,\"8\":1,\"9\":2,\"10\":1,\"11\":2,\"13\":2,\"14\":1,\"15\":1,\"16\":1,\"21\":1,\"38\":1,\"40\":3,\"41\":1,\"42\":2,\"43\":1,\"44\":2,\"46\":2,\"47\":1,\"48\":1,\"49\":1,\"54\":1,\"71\":1,\"73\":3,\"74\":1,\"75\":2,\"76\":1,\"77\":2,\"79\":2,\"80\":1,\"81\":1,\"82\":1,\"87\":1}}],[\"1s\",{\"1\":{\"2\":1,\"35\":1,\"68\":1}}],[\"1t\",{\"1\":{\"2\":1,\"35\":1,\"68\":1}}],[\"hacerlo\",{\"1\":{\"110\":2}}],[\"hacer\",{\"1\":{\"57\":2}}],[\"hay\",{\"1\":{\"55\":1}}],[\"hayas\",{\"1\":{\"42\":1,\"57\":1}}],[\"haz\",{\"1\":{\"42\":1}}],[\"have\",{\"0\":{\"22\":1},\"1\":{\"100\":1,\"108\":1}}],[\"how\",{\"0\":{\"20\":1}}],[\"hero\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"here\",{\"1\":{\"12\":1}}],[\"headers\",{\"0\":{\"6\":1,\"30\":1,\"39\":1,\"63\":1,\"72\":1,\"96\":1},\"1\":{\"2\":1,\"6\":2,\"21\":2,\"30\":1,\"35\":1,\"39\":1,\"54\":2,\"68\":1,\"72\":1,\"87\":2,\"106\":1,\"114\":1,\"122\":1}}],[\"h1>\",{\"1\":{\"8\":1,\"21\":1,\"41\":1,\"54\":1,\"74\":1,\"87\":1}}],[\"html\",{\"1\":{\"8\":1,\"15\":2,\"19\":1,\"41\":1,\"52\":1,\"74\":1,\"81\":2,\"85\":1}}],[\"http\",{\"1\":{\"7\":1,\"17\":1,\"19\":1,\"40\":1,\"50\":1,\"51\":1,\"52\":1,\"73\":1,\"83\":1,\"85\":1}}],[\"https\",{\"1\":{\"0\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":7,\"8\":1,\"9\":2,\"10\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"21\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":7,\"41\":1,\"42\":2,\"43\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"54\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":7,\"74\":1,\"75\":2,\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"87\":1,\"101\":1,\"104\":1,\"105\":1,\"106\":1,\"109\":1,\"112\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"hikaru\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"utilizando\",{\"1\":{\"52\":1}}],[\"utilizadas\",{\"1\":{\"52\":1}}],[\"utilizada\",{\"1\":{\"45\":1}}],[\"utiliza\",{\"1\":{\"40\":1,\"52\":1}}],[\"utilizar\",{\"1\":{\"36\":1,\"38\":1,\"39\":1,\"56\":1}}],[\"utilize\",{\"1\":{\"19\":1}}],[\"uno\",{\"1\":{\"108\":1}}],[\"under\",{\"1\":{\"106\":1}}],[\"una\",{\"1\":{\"36\":1,\"38\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"45\":2,\"46\":1,\"47\":1,\"49\":1,\"50\":3,\"57\":1,\"108\":1,\"110\":1,\"112\":1,\"115\":1}}],[\"un\",{\"1\":{\"34\":1,\"38\":1,\"39\":1,\"40\":3,\"43\":1,\"45\":1,\"50\":1,\"51\":1,\"52\":2,\"54\":1,\"57\":2,\"65\":1,\"110\":1,\"115\":1}}],[\"update\",{\"1\":{\"14\":1}}],[\"uso\",{\"0\":{\"108\":1,\"115\":1},\"1\":{\"108\":1,\"110\":1,\"112\":1,\"115\":1}}],[\"us\",{\"1\":{\"100\":1,\"108\":1}}],[\"usuario\",{\"1\":{\"52\":1}}],[\"usuarios\",{\"1\":{\"40\":1}}],[\"usa\",{\"1\":{\"47\":1}}],[\"usan\",{\"1\":{\"45\":1}}],[\"usando\",{\"1\":{\"40\":5,\"42\":2}}],[\"usarlo\",{\"1\":{\"54\":1}}],[\"usarla\",{\"1\":{\"42\":1}}],[\"usarse\",{\"1\":{\"45\":1,\"49\":1}}],[\"usará\",{\"1\":{\"43\":1}}],[\"usaremos\",{\"1\":{\"34\":1}}],[\"usar\",{\"0\":{\"53\":1,\"57\":1},\"1\":{\"34\":1,\"42\":1,\"47\":1,\"48\":1,\"56\":1}}],[\"using\",{\"1\":{\"7\":7,\"9\":2,\"19\":1,\"23\":1,\"40\":1}}],[\"usecase\",{\"0\":{\"100\":1}}],[\"useful\",{\"1\":{\"9\":1,\"15\":1,\"17\":1,\"24\":1}}],[\"user\",{\"1\":{\"19\":1}}],[\"user=rooyca\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"userid\",{\"1\":{\"5\":1,\"38\":1,\"71\":1}}],[\"users\",{\"1\":{\"3\":1,\"7\":4,\"9\":2,\"10\":1,\"36\":1,\"40\":3,\"42\":2,\"43\":1,\"69\":1,\"73\":3,\"75\":2,\"76\":1}}],[\"use\",{\"0\":{\"20\":1,\"24\":1,\"90\":1,\"107\":1},\"1\":{\"1\":1,\"7\":2,\"9\":2,\"10\":1,\"14\":2,\"21\":1,\"23\":1,\"40\":2,\"100\":1,\"102\":1,\"104\":1,\"107\":1,\"108\":1}}],[\"used\",{\"1\":{\"1\":1,\"3\":1,\"5\":1,\"6\":1,\"12\":3,\"16\":1,\"19\":1}}],[\"url\",{\"0\":{\"3\":1,\"27\":1,\"36\":1,\"60\":1,\"69\":1,\"93\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":1,\"9\":2,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":2,\"16\":1,\"17\":1,\"21\":2,\"27\":1,\"35\":1,\"36\":2,\"37\":1,\"38\":1,\"39\":1,\"40\":8,\"41\":1,\"42\":2,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":2,\"49\":1,\"50\":1,\"54\":2,\"60\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":8,\"74\":1,\"75\":2,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":2,\"82\":1,\"83\":1,\"87\":1,\"93\":1,\"101\":1,\"102\":3,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"109\":1,\"110\":3,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"117\":1,\"118\":3,\"119\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"dv\",{\"1\":{\"9\":1,\"42\":1,\"75\":1}}],[\"dar\",{\"1\":{\"66\":1}}],[\"datos\",{\"0\":{\"113\":1},\"1\":{\"38\":1,\"39\":1,\"40\":1,\"47\":1,\"52\":2}}],[\"dataview\",{\"1\":{\"9\":1,\"42\":1,\"75\":1}}],[\"data\",{\"0\":{\"105\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"12\":2,\"14\":1,\"19\":2,\"45\":2,\"78\":2,\"102\":6,\"103\":1,\"105\":3,\"110\":6,\"111\":1,\"113\":3,\"118\":6,\"119\":1,\"121\":3}}],[\"daily\",{\"1\":{\"7\":3,\"40\":3,\"73\":3}}],[\"do\",{\"1\":{\"102\":2}}],[\"dos\",{\"1\":{\"38\":1,\"39\":1,\"55\":1}}],[\"dobles\",{\"1\":{\"38\":1,\"39\":1}}],[\"does\",{\"1\":{\"23\":1}}],[\"documento\",{\"1\":{\"55\":1,\"57\":1}}],[\"document\",{\"1\":{\"22\":1,\"24\":1}}],[\"donde\",{\"1\":{\"36\":1,\"38\":1}}],[\"don\",{\"0\":{\"22\":1}}],[\"done\",{\"1\":{\"7\":1}}],[\"dots\",{\"1\":{\"12\":1}}],[\"double\",{\"1\":{\"5\":1,\"6\":1}}],[\"detail\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"detallado\",{\"1\":{\"52\":1}}],[\"dentro\",{\"1\":{\"52\":1,\"54\":1}}],[\"deseamos\",{\"1\":{\"110\":1}}],[\"deseada\",{\"1\":{\"64\":1}}],[\"deseas\",{\"1\":{\"57\":2,\"115\":1}}],[\"desactiva\",{\"1\":{\"52\":1}}],[\"después\",{\"1\":{\"43\":1}}],[\"deshabilita\",{\"1\":{\"43\":1}}],[\"debe\",{\"1\":{\"41\":1,\"44\":1}}],[\"deben\",{\"1\":{\"38\":1,\"39\":1,\"41\":1,\"47\":1}}],[\"del\",{\"1\":{\"40\":2,\"47\":1,\"52\":2,\"54\":1,\"56\":1,\"66\":1,\"112\":1}}],[\"delete\",{\"1\":{\"4\":1,\"19\":1,\"28\":1,\"33\":1,\"37\":1,\"52\":1,\"61\":1,\"70\":1,\"85\":1,\"94\":1}}],[\"derecha\",{\"1\":{\"40\":1}}],[\"de\",{\"0\":{\"34\":1,\"54\":1,\"108\":1,\"110\":1,\"115\":1},\"1\":{\"34\":1,\"35\":2,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":5,\"41\":2,\"42\":2,\"43\":1,\"44\":2,\"45\":4,\"46\":1,\"47\":1,\"48\":1,\"49\":4,\"50\":2,\"52\":7,\"54\":2,\"56\":3,\"57\":1,\"59\":1,\"60\":1,\"62\":1,\"63\":1,\"108\":1,\"110\":4,\"112\":1,\"115\":2}}],[\"demo\",{\"1\":{\"21\":1,\"54\":1,\"87\":1}}],[\"definir\",{\"1\":{\"55\":1}}],[\"definido\",{\"1\":{\"42\":1}}],[\"definida\",{\"1\":{\"36\":1,\"38\":1}}],[\"definidas\",{\"1\":{\"36\":1,\"38\":1,\"39\":1}}],[\"define\",{\"1\":{\"19\":1,\"52\":1}}],[\"defined\",{\"1\":{\"3\":2,\"5\":2,\"6\":1,\"9\":1,\"22\":1}}],[\"default\",{\"1\":{\"2\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"11\":1}}],[\"directorios\",{\"1\":{\"46\":1}}],[\"directories\",{\"1\":{\"13\":1}}],[\"diferentes\",{\"1\":{\"34\":1,\"52\":1}}],[\"different\",{\"1\":{\"1\":1,\"19\":1}}],[\"disponibles\",{\"0\":{\"55\":1},\"1\":{\"37\":1,\"54\":1}}],[\"displayed\",{\"1\":{\"7\":1,\"8\":1}}],[\"display\",{\"0\":{\"31\":1,\"64\":1,\"97\":1},\"1\":{\"7\":1,\"18\":1,\"19\":1,\"24\":1}}],[\"disable\",{\"1\":{\"19\":1}}],[\"disables\",{\"1\":{\"10\":1}}],[\"disabled\",{\"0\":{\"10\":1,\"43\":1,\"76\":1},\"1\":{\"2\":1,\"9\":2,\"10\":1,\"21\":1,\"35\":1,\"42\":2,\"43\":1,\"54\":1,\"68\":1,\"75\":2,\"76\":1,\"87\":1}}],[\"distanthorizons\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"feel\",{\"1\":{\"107\":1}}],[\"features\",{\"0\":{\"19\":1},\"1\":{\"23\":1}}],[\"feature\",{\"1\":{\"16\":1,\"104\":1}}],[\"further\",{\"1\":{\"102\":1}}],[\"funcionalidades\",{\"0\":{\"55\":1}}],[\"funciona\",{\"1\":{\"44\":1,\"45\":1}}],[\"functionalities\",{\"0\":{\"22\":1}}],[\"flechas\",{\"1\":{\"45\":1}}],[\"flecha\",{\"1\":{\"40\":1}}],[\"flag是指定请求参数以及我们想要的响应格式的方式\",{\"1\":{\"68\":1}}],[\"flag\",{\"0\":{\"68\":1},\"1\":{\"2\":1,\"3\":1,\"9\":2,\"12\":1,\"14\":2,\"16\":1}}],[\"flags\",{\"0\":{\"2\":1,\"25\":1},\"1\":{\"2\":1,\"17\":1,\"21\":1}}],[\"free\",{\"1\":{\"107\":1}}],[\"frecuentemente\",{\"1\":{\"52\":1}}],[\"frequently\",{\"1\":{\"19\":1}}],[\"front\",{\"1\":{\"19\":1,\"52\":1,\"104\":1,\"112\":1}}],[\"frontmatter\",{\"1\":{\"3\":2,\"5\":2,\"6\":1,\"14\":1,\"36\":2,\"38\":2,\"39\":1,\"47\":1,\"69\":1,\"71\":2,\"72\":1}}],[\"from\",{\"1\":{\"7\":1,\"9\":1,\"12\":1,\"19\":2}}],[\"favor\",{\"1\":{\"108\":1,\"115\":1}}],[\"facilitando\",{\"1\":{\"52\":1}}],[\"facilitating\",{\"1\":{\"19\":1}}],[\"fallback\",{\"1\":{\"16\":1}}],[\"false\",{\"1\":{\"2\":1,\"35\":1,\"48\":1,\"68\":1}}],[\"fields\",{\"1\":{\"24\":1,\"32\":1}}],[\"fill\",{\"1\":{\"24\":1}}],[\"file\",{\"1\":{\"13\":1,\"105\":1,\"113\":1,\"121\":1}}],[\"first\",{\"1\":{\"8\":1}}],[\"found\",{\"1\":{\"10\":1,\"124\":1}}],[\"forma\",{\"1\":{\"35\":1,\"57\":1}}],[\"format等\",{\"1\":{\"87\":1}}],[\"formatos\",{\"1\":{\"41\":1,\"52\":1}}],[\"formato\",{\"1\":{\"35\":1,\"38\":1,\"39\":1,\"41\":2}}],[\"formats\",{\"1\":{\"19\":1}}],[\"format=json\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"format\",{\"0\":{\"8\":1,\"41\":1,\"74\":1},\"1\":{\"2\":2,\"5\":1,\"6\":1,\"7\":1,\"8\":4,\"15\":1,\"21\":2,\"35\":1,\"40\":1,\"41\":1,\"48\":1,\"54\":2,\"68\":1,\"73\":1,\"74\":1,\"81\":1,\"87\":1,\"105\":1,\"106\":1,\"113\":1,\"114\":1,\"121\":1,\"122\":1}}],[\"for\",{\"1\":{\"10\":1,\"18\":1,\"19\":2,\"21\":1,\"22\":1,\"24\":1,\"32\":1,\"100\":1,\"108\":1}}],[\"following\",{\"1\":{\"7\":1}}],[\"open\",{\"1\":{\"107\":1}}],[\"openweathermap\",{\"1\":{\"103\":1,\"111\":1,\"119\":1}}],[\"opciones\",{\"1\":{\"55\":1}}],[\"opcional\",{\"1\":{\"49\":1}}],[\"opción\",{\"1\":{\"50\":1}}],[\"optimizar\",{\"1\":{\"52\":1}}],[\"optimize\",{\"1\":{\"19\":1}}],[\"options\",{\"1\":{\"22\":1}}],[\"optional\",{\"1\":{\"16\":1}}],[\"otra\",{\"1\":{\"57\":1}}],[\"otros\",{\"1\":{\"42\":1}}],[\"other\",{\"1\":{\"9\":1,\"18\":1}}],[\"otherwise\",{\"1\":{\"8\":1}}],[\"o\",{\"0\":{\"110\":1},\"1\":{\"40\":1,\"42\":1,\"52\":1,\"57\":2,\"115\":1}}],[\"obligatorio\",{\"1\":{\"42\":1}}],[\"obligatoria\",{\"1\":{\"36\":1}}],[\"obtener\",{\"0\":{\"111\":1},\"1\":{\"40\":1}}],[\"objetos\",{\"1\":{\"40\":1,\"45\":1,\"50\":1}}],[\"objeto\",{\"1\":{\"38\":1,\"39\":1}}],[\"objects\",{\"1\":{\"7\":1,\"12\":1,\"17\":1}}],[\"object\",{\"1\":{\"5\":1,\"6\":1}}],[\"obsidian\",{\"1\":{\"18\":1,\"51\":1,\"84\":1}}],[\"on\",{\"1\":{\"9\":1,\"16\":1}}],[\"one\",{\"1\":{\"8\":2,\"100\":1,\"102\":1,\"108\":1}}],[\"only\",{\"1\":{\"3\":1,\"11\":1,\"12\":1}}],[\"org\",{\"1\":{\"103\":1,\"104\":1,\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"or\",{\"0\":{\"102\":1},\"1\":{\"7\":1,\"9\":1,\"15\":1,\"18\":1,\"19\":1,\"24\":2,\"107\":1}}],[\"overview\",{\"0\":{\"18\":1}}],[\"over\",{\"1\":{\"7\":3,\"19\":1}}],[\"output\",{\"1\":{\"8\":1,\"31\":1}}],[\"outputs\",{\"1\":{\"7\":1,\"8\":1}}],[\"our\",{\"1\":{\"2\":2}}],[\"of\",{\"1\":{\"2\":1,\"3\":1,\"5\":1,\"6\":1,\"7\":5,\"9\":1,\"11\":1,\"12\":2,\"16\":1,\"17\":2,\"19\":1,\"23\":1,\"26\":1,\"27\":1,\"29\":1,\"30\":1,\"100\":1,\"102\":2,\"104\":1,\"108\":1}}],[\"siéntete\",{\"1\":{\"115\":1}}],[\"simplemente\",{\"1\":{\"57\":1}}],[\"sin\",{\"1\":{\"52\":1}}],[\"sintaxis\",{\"1\":{\"45\":1,\"47\":1}}],[\"si\",{\"1\":{\"41\":1,\"43\":2,\"48\":1,\"49\":1,\"108\":1,\"110\":2,\"115\":1}}],[\"siguiente\",{\"1\":{\"40\":1,\"110\":2}}],[\"soporta\",{\"1\":{\"56\":1}}],[\"solo\",{\"1\":{\"44\":1,\"45\":1,\"57\":1}}],[\"solicitud\",{\"1\":{\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"42\":2,\"43\":2,\"44\":1,\"57\":4,\"59\":1,\"60\":1,\"62\":1,\"63\":1,\"110\":1}}],[\"solicitudes\",{\"1\":{\"34\":1,\"51\":1,\"52\":4}}],[\"sobre\",{\"1\":{\"40\":3,\"52\":1}}],[\"son\",{\"1\":{\"35\":1,\"37\":1}}],[\"sources\",{\"1\":{\"18\":1}}],[\"supere\",{\"1\":{\"110\":1}}],[\"support\",{\"1\":{\"23\":1}}],[\"such\",{\"1\":{\"19\":1}}],[\"syntax\",{\"1\":{\"12\":1,\"14\":1}}],[\"seleccionar\",{\"1\":{\"57\":1}}],[\"select\",{\"1\":{\"24\":1}}],[\"según\",{\"1\":{\"52\":1}}],[\"segundos\",{\"1\":{\"110\":1}}],[\"segundo\",{\"1\":{\"41\":1,\"44\":1}}],[\"sea\",{\"1\":{\"42\":1,\"45\":1,\"52\":1}}],[\"searching\",{\"1\":{\"32\":1}}],[\"search\",{\"0\":{\"104\":1},\"1\":{\"22\":1,\"24\":1,\"104\":1,\"112\":1,\"120\":1}}],[\"será\",{\"1\":{\"41\":2}}],[\"ser\",{\"1\":{\"41\":1,\"47\":1}}],[\"server\",{\"1\":{\"21\":1,\"54\":1,\"87\":1}}],[\"separándolas\",{\"1\":{\"40\":1}}],[\"separados\",{\"1\":{\"50\":1}}],[\"separadas\",{\"1\":{\"47\":1}}],[\"separando\",{\"1\":{\"38\":1,\"39\":1}}],[\"separated\",{\"1\":{\"14\":1,\"17\":1}}],[\"separate\",{\"1\":{\"7\":1,\"40\":1}}],[\"separating\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"se\",{\"1\":{\"34\":1,\"36\":1,\"38\":1,\"39\":1,\"40\":3,\"41\":4,\"42\":3,\"43\":3,\"44\":1,\"45\":3,\"46\":1,\"47\":1,\"48\":4,\"50\":1,\"55\":1,\"56\":1}}],[\"see\",{\"1\":{\"21\":1}}],[\"set\",{\"1\":{\"14\":1,\"21\":1}}],[\"settings\",{\"0\":{\"22\":1,\"23\":1},\"1\":{\"9\":1,\"22\":1}}],[\"seconds\",{\"1\":{\"102\":1}}],[\"second\",{\"1\":{\"8\":1,\"11\":1,\"77\":1}}],[\"saneará\",{\"1\":{\"48\":1}}],[\"sanitized\",{\"1\":{\"15\":1}}],[\"salida\",{\"1\":{\"41\":1,\"64\":1}}],[\"salidas\",{\"1\":{\"40\":1,\"41\":1}}],[\"same\",{\"1\":{\"7\":1,\"8\":1,\"24\":1,\"40\":1}}],[\"save\",{\"0\":{\"13\":1,\"46\":1,\"79\":1},\"1\":{\"2\":1,\"13\":3,\"19\":1,\"24\":1,\"32\":1,\"35\":1,\"46\":1,\"68\":1,\"79\":1,\"106\":1}}],[\"s\",{\"1\":{\"7\":1,\"9\":1,\"10\":1,\"11\":2,\"15\":1,\"17\":1,\"44\":1,\"75\":1,\"77\":2}}],[\"step\",{\"1\":{\"102\":1}}],[\"stored\",{\"1\":{\"9\":1,\"10\":1,\"33\":1}}],[\"store\",{\"1\":{\"9\":1,\"10\":1}}],[\"strings\",{\"1\":{\"14\":1}}],[\"string\",{\"1\":{\"8\":1}}],[\"stream\",{\"1\":{\"7\":1,\"17\":2,\"40\":1,\"50\":2,\"73\":1,\"83\":2}}],[\"streamable\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"strong>\",{\"1\":{\"7\":1,\"40\":1,\"73\":1}}],[\"stats\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"spaces\",{\"1\":{\"12\":1}}],[\"space\",{\"1\":{\"5\":1,\"6\":1}}],[\"specific\",{\"1\":{\"12\":1,\"19\":2}}],[\"specified\",{\"1\":{\"7\":2,\"8\":2,\"10\":1,\"19\":1}}],[\"specifies\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"16\":1,\"26\":1,\"27\":1,\"29\":1,\"30\":1,\"31\":1}}],[\"specify\",{\"1\":{\"2\":1,\"21\":1}}],[\"share\",{\"1\":{\"100\":1,\"107\":1,\"108\":1}}],[\"shortcut\",{\"1\":{\"24\":1}}],[\"shortcuts\",{\"1\":{\"19\":1}}],[\"should\",{\"1\":{\"5\":1,\"6\":1,\"8\":2,\"11\":1,\"14\":1}}],[\"show\",{\"0\":{\"7\":1,\"40\":1,\"73\":1},\"1\":{\"2\":1,\"7\":8,\"8\":1,\"9\":1,\"10\":1,\"12\":1,\"14\":2,\"15\":1,\"17\":1,\"21\":1,\"22\":1,\"24\":1,\"35\":1,\"40\":8,\"41\":1,\"42\":1,\"43\":1,\"45\":1,\"47\":2,\"48\":1,\"50\":1,\"54\":1,\"68\":1,\"73\":8,\"74\":1,\"75\":1,\"76\":1,\"78\":1,\"80\":2,\"81\":1,\"83\":1,\"87\":1,\"102\":3,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"110\":3,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"118\":3,\"119\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"shields\",{\"1\":{\"0\":1}}],[\"🏳️\",{\"0\":{\"2\":1,\"25\":1,\"35\":1,\"58\":1,\"68\":1,\"91\":1}}],[\"misma\",{\"1\":{\"57\":1}}],[\"mismo\",{\"1\":{\"41\":1}}],[\"más\",{\"1\":{\"41\":2,\"54\":1,\"55\":1,\"110\":1}}],[\"muy\",{\"1\":{\"56\":1}}],[\"muestra\",{\"1\":{\"40\":1,\"52\":1}}],[\"multiple\",{\"1\":{\"7\":2,\"19\":1,\"24\":1,\"40\":1}}],[\"múltiples\",{\"1\":{\"40\":1,\"52\":1}}],[\"métodos\",{\"1\":{\"52\":1}}],[\"método\",{\"0\":{\"57\":1},\"1\":{\"37\":1,\"56\":3,\"57\":1}}],[\"my\",{\"1\":{\"21\":1,\"54\":1,\"87\":1}}],[\"mejor\",{\"1\":{\"56\":1}}],[\"mejorando\",{\"1\":{\"52\":1}}],[\"menor\",{\"1\":{\"45\":1}}],[\"meet\",{\"1\":{\"19\":1}}],[\"methods\",{\"1\":{\"19\":1}}],[\"method=user\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"method\",{\"0\":{\"4\":1,\"24\":1,\"28\":1,\"37\":1,\"61\":1,\"70\":1,\"90\":1,\"94\":1},\"1\":{\"2\":1,\"4\":2,\"5\":1,\"6\":1,\"21\":2,\"23\":3,\"24\":1,\"35\":1,\"37\":1,\"38\":1,\"39\":1,\"54\":2,\"68\":1,\"70\":1,\"71\":1,\"72\":1,\"87\":2}}],[\"mobilelegends\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"movie\",{\"1\":{\"104\":1,\"112\":1,\"120\":1}}],[\"movies\",{\"0\":{\"104\":1}}],[\"mostrar\",{\"1\":{\"40\":2,\"41\":1,\"48\":1,\"51\":1,\"55\":1,\"57\":2}}],[\"modal\",{\"1\":{\"22\":1,\"24\":1,\"55\":1,\"57\":1}}],[\"modrinth\",{\"1\":{\"7\":2,\"40\":2,\"73\":2}}],[\"monitoreo\",{\"1\":{\"52\":1}}],[\"monitorear\",{\"1\":{\"45\":1}}],[\"monitoring\",{\"1\":{\"19\":1}}],[\"monitor\",{\"1\":{\"12\":1}}],[\"more\",{\"1\":{\"8\":2,\"21\":1,\"22\":1}}],[\"mapi\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"main\",{\"1\":{\"101\":1,\"103\":1,\"109\":1,\"111\":1,\"117\":1,\"119\":1}}],[\"manera\",{\"1\":{\"57\":1,\"110\":2}}],[\"manual\",{\"1\":{\"19\":1,\"52\":1}}],[\"mandatory\",{\"1\":{\"9\":1}}],[\"matter\",{\"1\":{\"19\":1,\"52\":1,\"104\":1,\"112\":1}}],[\"markdown\",{\"0\":{\"101\":1,\"109\":1,\"117\":1},\"1\":{\"8\":1,\"19\":1,\"41\":1,\"52\":1,\"74\":1,\"85\":1}}],[\"maketable\",{\"0\":{\"17\":1,\"50\":1,\"83\":1},\"1\":{\"2\":1,\"7\":1,\"17\":1,\"35\":1,\"40\":1,\"50\":1,\"68\":1,\"73\":1,\"83\":1}}],[\"make\",{\"1\":{\"1\":1,\"10\":1,\"18\":1,\"24\":2}}],[\"md\",{\"1\":{\"0\":1,\"101\":1,\"109\":1,\"117\":1}}],[\"works\",{\"1\":{\"11\":1,\"12\":1}}],[\"won\",{\"1\":{\"9\":1,\"13\":1}}],[\"ws\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"without\",{\"1\":{\"19\":1}}],[\"within\",{\"1\":{\"19\":1}}],[\"with\",{\"1\":{\"5\":2,\"6\":2,\"7\":1,\"9\":1,\"11\":1,\"12\":1,\"14\":1,\"17\":1,\"21\":1,\"100\":1,\"108\":1}}],[\"will\",{\"1\":{\"1\":1,\"8\":3,\"10\":3,\"12\":1,\"15\":1,\"16\":1,\"17\":1,\"106\":1}}],[\"what\",{\"0\":{\"31\":1,\"64\":1,\"97\":1}}],[\"whatever\",{\"1\":{\"9\":1}}],[\"why\",{\"0\":{\"24\":1,\"90\":1}}],[\"when\",{\"1\":{\"7\":1,\"9\":1,\"15\":1,\"17\":1,\"19\":1,\"24\":1,\"40\":1,\"102\":1}}],[\"where\",{\"1\":{\"3\":1,\"5\":1}}],[\"which\",{\"1\":{\"2\":1,\"8\":1,\"9\":1}}],[\"warning\",{\"1\":{\"11\":1,\"12\":1,\"14\":1,\"44\":1,\"45\":1,\"47\":1,\"74\":1,\"77\":1,\"78\":1,\"80\":1,\"102\":1,\"106\":1,\"110\":1,\"114\":1,\"118\":1,\"122\":1}}],[\"want\",{\"1\":{\"2\":1,\"9\":1,\"24\":2,\"31\":1,\"102\":2,\"107\":1}}],[\"way\",{\"1\":{\"2\":1,\"24\":2}}],[\"weather\",{\"0\":{\"103\":1},\"1\":{\"103\":1,\"111\":1,\"119\":1}}],[\"we\",{\"1\":{\"1\":1,\"2\":1,\"9\":1,\"102\":4}}],[\"write\",{\"1\":{\"1\":1}}],[\"tu\",{\"0\":{\"115\":1},\"1\":{\"115\":1}}],[\"tus\",{\"1\":{\"51\":1}}],[\"ten\",{\"1\":{\"110\":1}}],[\"temp\",{\"1\":{\"103\":1,\"111\":1,\"119\":1}}],[\"teclas\",{\"1\":{\"52\":1,\"57\":1}}],[\"te\",{\"1\":{\"51\":1,\"112\":1}}],[\"text\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"títulos\",{\"1\":{\"50\":2}}],[\"título\",{\"1\":{\"41\":1}}],[\"two\",{\"1\":{\"22\":1}}],[\"take\",{\"1\":{\"102\":1}}],[\"taking\",{\"1\":{\"18\":1}}],[\"tareas\",{\"1\":{\"52\":1}}],[\"tabla\",{\"1\":{\"50\":2}}],[\"tablas\",{\"1\":{\"48\":1}}],[\"table\",{\"1\":{\"15\":1,\"17\":2}}],[\"también\",{\"1\":{\"35\":1,\"40\":3,\"42\":1,\"66\":1}}],[\"tasks\",{\"1\":{\"19\":1,\"106\":1,\"114\":1,\"122\":1}}],[\"try\",{\"1\":{\"16\":1}}],[\"triggered\",{\"1\":{\"12\":1}}],[\"trigger\",{\"1\":{\"9\":1,\"12\":1}}],[\"track\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"t\",{\"0\":{\"22\":1},\"1\":{\"9\":1,\"13\":1}}],[\"tienes\",{\"1\":{\"108\":1}}],[\"tipo\",{\"1\":{\"44\":1,\"45\":1,\"47\":1,\"49\":3}}],[\"times\",{\"1\":{\"11\":1,\"19\":1,\"24\":1,\"102\":1}}],[\"time\",{\"1\":{\"7\":1,\"11\":1,\"40\":1,\"77\":1}}],[\"titles\",{\"1\":{\"17\":2}}],[\"title\",{\"1\":{\"5\":4,\"8\":2,\"14\":2,\"38\":4,\"41\":1,\"47\":2,\"71\":4,\"74\":1,\"80\":2,\"104\":3,\"112\":3,\"120\":3}}],[\"typicode\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":3,\"8\":1,\"9\":2,\"10\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"21\":2,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":3,\"41\":1,\"42\":2,\"43\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"54\":2,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":3,\"74\":1,\"75\":2,\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"87\":2}}],[\"type\",{\"0\":{\"16\":1,\"49\":1,\"82\":1},\"1\":{\"2\":1,\"6\":1,\"16\":4,\"35\":1,\"39\":1,\"49\":1,\"68\":1,\"72\":1,\"82\":1,\"105\":2,\"113\":2,\"121\":2}}],[\"token\",{\"1\":{\"106\":1,\"114\":1,\"122\":1}}],[\"todoist\",{\"1\":{\"106\":1,\"114\":1,\"122\":1}}],[\"todos\",{\"0\":{\"122\":1},\"1\":{\"40\":1,\"55\":1,\"65\":1,\"66\":1,\"106\":2,\"114\":2,\"122\":2}}],[\"toda\",{\"1\":{\"46\":1}}],[\"todas\",{\"0\":{\"55\":1},\"1\":{\"41\":1,\"42\":1,\"56\":1}}],[\"to\",{\"0\":{\"13\":1,\"20\":1,\"31\":1,\"46\":1,\"64\":1,\"79\":1,\"97\":1},\"1\":{\"1\":2,\"2\":2,\"7\":5,\"8\":1,\"9\":5,\"12\":3,\"13\":2,\"14\":3,\"15\":1,\"16\":1,\"18\":2,\"19\":2,\"21\":2,\"23\":1,\"24\":5,\"33\":1,\"35\":1,\"40\":3,\"46\":1,\"68\":1,\"79\":1,\"102\":2,\"104\":1,\"107\":2}}],[\"than\",{\"1\":{\"8\":1,\"12\":1}}],[\"that\",{\"1\":{\"1\":1,\"10\":1,\"18\":1,\"24\":1,\"104\":1}}],[\"this\",{\"0\":{\"24\":1,\"90\":1},\"1\":{\"1\":1,\"3\":2,\"5\":2,\"8\":1,\"9\":1,\"11\":1,\"12\":1,\"14\":1,\"16\":2,\"17\":1,\"23\":2,\"24\":2,\"36\":2,\"38\":2,\"69\":2,\"71\":2,\"100\":1,\"102\":4,\"104\":3,\"105\":1,\"106\":1,\"108\":1,\"112\":2,\"113\":1,\"120\":2,\"121\":1}}],[\"there\",{\"1\":{\"22\":1}}],[\"then\",{\"1\":{\"8\":1}}],[\"themoviedb\",{\"1\":{\"104\":1,\"112\":1,\"120\":1}}],[\"them\",{\"1\":{\"7\":1}}],[\"the\",{\"0\":{\"103\":1},\"1\":{\"1\":1,\"2\":3,\"3\":5,\"4\":3,\"5\":7,\"6\":6,\"7\":12,\"8\":6,\"9\":7,\"10\":3,\"11\":4,\"12\":6,\"13\":3,\"14\":5,\"15\":3,\"16\":5,\"17\":5,\"18\":2,\"19\":3,\"21\":3,\"23\":2,\"24\":8,\"26\":2,\"27\":2,\"29\":2,\"30\":2,\"31\":1,\"32\":1,\"33\":1,\"40\":3,\"102\":2,\"104\":1,\"106\":2}}],[\"criptomoneda\",{\"0\":{\"110\":1}}],[\"crypto\",{\"0\":{\"102\":1}}],[\"crea\",{\"1\":{\"54\":1}}],[\"creará\",{\"1\":{\"46\":1}}],[\"create\",{\"1\":{\"13\":1,\"21\":1}}],[\"cómo\",{\"0\":{\"53\":1}}],[\"código\",{\"0\":{\"34\":1,\"54\":1},\"1\":{\"34\":2,\"52\":2,\"54\":2,\"56\":2}}],[\"ciudad\",{\"1\":{\"40\":1}}],[\"city\",{\"1\":{\"7\":4,\"40\":3,\"73\":4}}],[\"cumplen\",{\"1\":{\"52\":1}}],[\"cuando\",{\"1\":{\"42\":1,\"50\":1,\"52\":1,\"57\":1,\"110\":1}}],[\"cualquier\",{\"0\":{\"110\":1},\"1\":{\"41\":1}}],[\"cuerpo\",{\"1\":{\"38\":1,\"41\":1,\"62\":1}}],[\"current\",{\"1\":{\"22\":2}}],[\"ctrl+p\",{\"1\":{\"22\":1,\"24\":1,\"32\":1,\"55\":1,\"57\":1,\"65\":1,\"88\":1,\"90\":1,\"98\":1}}],[\"clave\",{\"1\":{\"114\":1}}],[\"claves\",{\"1\":{\"38\":1,\"39\":1}}],[\"clima\",{\"0\":{\"111\":1}}],[\"clic\",{\"1\":{\"42\":1}}],[\"click\",{\"1\":{\"9\":1,\"33\":1,\"66\":1}}],[\"clear\",{\"0\":{\"33\":1,\"66\":1,\"99\":1},\"1\":{\"9\":1,\"42\":1,\"75\":1}}],[\"check\",{\"0\":{\"102\":1},\"1\":{\"10\":1}}],[\"chess\",{\"1\":{\"7\":5,\"40\":5,\"73\":5}}],[\"charset=utf\",{\"1\":{\"6\":1,\"39\":1,\"72\":1}}],[\"cover\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"colección\",{\"1\":{\"108\":1}}],[\"collection\",{\"1\":{\"100\":1,\"108\":1}}],[\"colon\",{\"1\":{\"5\":1,\"6\":1}}],[\"could\",{\"1\":{\"16\":1,\"33\":1}}],[\"configuración\",{\"1\":{\"55\":1}}],[\"configuraciones\",{\"0\":{\"55\":1,\"56\":1},\"1\":{\"42\":1}}],[\"consulta\",{\"1\":{\"54\":1}}],[\"convierte\",{\"1\":{\"50\":1}}],[\"convenientes\",{\"1\":{\"52\":1}}],[\"convenient\",{\"1\":{\"19\":1}}],[\"convertirá\",{\"1\":{\"50\":1}}],[\"converted\",{\"1\":{\"17\":1}}],[\"converts\",{\"1\":{\"17\":1}}],[\"condiciones\",{\"1\":{\"52\":1}}],[\"condición\",{\"1\":{\"45\":1}}],[\"conditions\",{\"1\":{\"19\":1}}],[\"condition\",{\"1\":{\"12\":1}}],[\"con\",{\"1\":{\"38\":2,\"39\":2,\"40\":1,\"42\":2,\"44\":1,\"45\":1,\"47\":1,\"50\":1,\"54\":1,\"108\":1}}],[\"continua\",{\"1\":{\"52\":1}}],[\"continuous\",{\"1\":{\"19\":1}}],[\"contenido\",{\"1\":{\"49\":1}}],[\"content\",{\"1\":{\"6\":1,\"16\":1,\"39\":1,\"72\":1,\"106\":1,\"114\":1,\"122\":1}}],[\"contrario\",{\"1\":{\"41\":1}}],[\"control\",{\"1\":{\"19\":1,\"52\":1}}],[\"coincap\",{\"1\":{\"11\":1,\"12\":1,\"44\":1,\"45\":1,\"77\":1,\"78\":1,\"102\":3,\"110\":3,\"118\":3}}],[\"compartir\",{\"1\":{\"115\":1}}],[\"compártelo\",{\"1\":{\"108\":1}}],[\"combinaciones\",{\"1\":{\"52\":1}}],[\"como\",{\"1\":{\"44\":1,\"49\":1,\"52\":1}}],[\"comas\",{\"1\":{\"47\":1,\"50\":1}}],[\"coma\",{\"1\":{\"40\":1}}],[\"comillas\",{\"1\":{\"38\":1,\"39\":1}}],[\"comments\",{\"1\":{\"21\":1,\"54\":1,\"87\":1}}],[\"commas\",{\"1\":{\"14\":1,\"17\":1}}],[\"comma\",{\"1\":{\"7\":1}}],[\"com\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":8,\"8\":1,\"9\":2,\"10\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":8,\"41\":1,\"42\":2,\"43\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"54\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":8,\"74\":1,\"75\":2,\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"87\":1,\"101\":1,\"105\":1,\"106\":1,\"109\":1,\"113\":1,\"114\":1,\"117\":1,\"121\":1,\"122\":1}}],[\"code\",{\"0\":{\"21\":1},\"1\":{\"1\":1,\"19\":2,\"21\":2,\"23\":2}}],[\"codeblock\",{\"1\":{\"1\":1,\"67\":1}}],[\"codeblocks\",{\"0\":{\"1\":1}}],[\"campos\",{\"1\":{\"57\":1,\"65\":1}}],[\"características\",{\"0\":{\"52\":1},\"1\":{\"56\":1}}],[\"característica\",{\"1\":{\"49\":1,\"112\":1}}],[\"cada\",{\"1\":{\"44\":2,\"45\":1,\"110\":1}}],[\"cadenas\",{\"1\":{\"47\":1}}],[\"cadena\",{\"1\":{\"41\":1}}],[\"caso\",{\"0\":{\"115\":1},\"1\":{\"34\":1,\"115\":1}}],[\"cases\",{\"1\":{\"100\":1,\"108\":1}}],[\"case\",{\"0\":{\"107\":1},\"1\":{\"1\":1,\"107\":1}}],[\"cantidad\",{\"1\":{\"40\":1,\"44\":1}}],[\"can\",{\"1\":{\"1\":1,\"3\":1,\"5\":1,\"6\":1,\"7\":2,\"8\":1,\"9\":2,\"12\":1,\"21\":1,\"22\":1,\"24\":2,\"32\":1,\"102\":2}}],[\"buscando\",{\"1\":{\"65\":1}}],[\"buscar\",{\"0\":{\"112\":1},\"1\":{\"57\":1}}],[\"buscará\",{\"1\":{\"43\":1}}],[\"busca\",{\"1\":{\"55\":1}}],[\"button\",{\"1\":{\"9\":1}}],[\"botón\",{\"1\":{\"42\":1}}],[\"body\",{\"0\":{\"5\":1,\"29\":1,\"38\":1,\"62\":1,\"71\":1,\"95\":1},\"1\":{\"2\":1,\"5\":3,\"8\":2,\"21\":2,\"29\":1,\"35\":1,\"38\":2,\"41\":1,\"54\":2,\"68\":1,\"71\":2,\"74\":1,\"87\":2}}],[\"bloques\",{\"1\":{\"42\":1,\"52\":2,\"56\":2}}],[\"bloque\",{\"0\":{\"34\":1,\"54\":1},\"1\":{\"34\":2,\"54\":2}}],[\"blocks\",{\"1\":{\"9\":1,\"19\":2,\"23\":1}}],[\"block\",{\"0\":{\"21\":1},\"1\":{\"1\":1,\"21\":2,\"23\":1}}],[\"bitcoin\",{\"0\":{\"102\":1,\"110\":1},\"1\":{\"11\":1,\"12\":1,\"44\":1,\"45\":1,\"77\":1,\"78\":1,\"102\":3,\"110\":3,\"118\":3}}],[\"by\",{\"1\":{\"7\":1,\"8\":2,\"14\":1,\"17\":1,\"19\":1,\"24\":1,\"32\":1}}],[\"bajo\",{\"1\":{\"114\":1}}],[\"basado\",{\"1\":{\"49\":1}}],[\"based\",{\"1\":{\"16\":1}}],[\"bandera\",{\"1\":{\"35\":1,\"36\":1,\"42\":2,\"45\":1,\"47\":2,\"49\":1}}],[\"banderas\",{\"0\":{\"35\":1,\"58\":1},\"1\":{\"35\":1,\"54\":1}}],[\"bar\",{\"1\":{\"5\":1,\"38\":1,\"71\":1}}],[\"badge\",{\"1\":{\"0\":1}}],[\"bearer\",{\"1\":{\"106\":1,\"114\":1,\"122\":1}}],[\"better\",{\"1\":{\"23\":1}}],[\"between\",{\"1\":{\"11\":1}}],[\"before\",{\"1\":{\"9\":1}}],[\"best\",{\"1\":{\"7\":1,\"40\":1,\"73\":1}}],[\"be\",{\"1\":{\"1\":1,\"3\":1,\"5\":2,\"6\":2,\"7\":1,\"8\":6,\"9\":2,\"11\":1,\"12\":2,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"22\":1}}],[\"abrir\",{\"1\":{\"115\":1}}],[\"above\",{\"1\":{\"12\":1,\"17\":1,\"32\":1,\"102\":1}}],[\"aquí\",{\"1\":{\"45\":1}}],[\"actual\",{\"1\":{\"55\":2}}],[\"actualizarán\",{\"1\":{\"47\":1}}],[\"activar\",{\"1\":{\"45\":1}}],[\"activará\",{\"1\":{\"42\":1,\"45\":1}}],[\"acceso\",{\"1\":{\"52\":2}}],[\"accessed\",{\"1\":{\"9\":2}}],[\"access\",{\"1\":{\"7\":3,\"12\":1,\"19\":2,\"32\":1,\"40\":2}}],[\"accessing\",{\"1\":{\"7\":1}}],[\"acceder\",{\"1\":{\"40\":2,\"45\":1,\"65\":1}}],[\"accept\",{\"1\":{\"21\":1,\"54\":1,\"87\":1}}],[\"adivinar\",{\"1\":{\"49\":1}}],[\"add\",{\"0\":{\"32\":1,\"65\":1,\"98\":1}}],[\"address\",{\"1\":{\"7\":3,\"40\":3,\"73\":3}}],[\"advantage\",{\"1\":{\"24\":1}}],[\"authorization\",{\"1\":{\"106\":1,\"114\":1,\"122\":1}}],[\"automatizadas\",{\"1\":{\"52\":1}}],[\"automated\",{\"1\":{\"19\":1}}],[\"audioscrobbler\",{\"1\":{\"7\":1,\"17\":1,\"40\":1,\"50\":1,\"73\":1,\"83\":1}}],[\"asignado\",{\"1\":{\"57\":1}}],[\"asignarle\",{\"1\":{\"57\":1}}],[\"assigned\",{\"1\":{\"24\":1}}],[\"assign\",{\"1\":{\"24\":1}}],[\"as\",{\"1\":{\"11\":1,\"15\":1,\"16\":1,\"19\":2}}],[\"after\",{\"1\":{\"10\":1}}],[\"atajo\",{\"1\":{\"57\":1}}],[\"attacks\",{\"1\":{\"15\":1}}],[\"at\",{\"1\":{\"7\":1,\"19\":1,\"22\":1,\"40\":1}}],[\"archivo\",{\"1\":{\"46\":1}}],[\"artist\",{\"1\":{\"7\":2,\"17\":3,\"40\":2,\"50\":3,\"73\":2,\"83\":3}}],[\"arreglo\",{\"1\":{\"40\":3}}],[\"array\",{\"1\":{\"7\":4,\"17\":1,\"50\":1}}],[\"arrows\",{\"1\":{\"12\":1}}],[\"arrow\",{\"1\":{\"7\":1}}],[\"are\",{\"1\":{\"2\":1,\"4\":1,\"12\":2,\"22\":1}}],[\"aplicará\",{\"1\":{\"41\":1}}],[\"appid=your\",{\"1\":{\"103\":1,\"111\":1,\"119\":1}}],[\"app\",{\"1\":{\"18\":1}}],[\"applied\",{\"1\":{\"8\":1}}],[\"application\",{\"1\":{\"6\":1,\"21\":1,\"39\":1,\"54\":1,\"72\":1,\"87\":1}}],[\"apis\",{\"1\":{\"18\":1}}],[\"apirs\",{\"1\":{\"32\":1,\"65\":1}}],[\"apir\",{\"1\":{\"10\":2,\"18\":1,\"22\":1,\"24\":1,\"32\":2,\"33\":1,\"43\":1,\"51\":1,\"55\":1,\"57\":1,\"65\":2,\"66\":1,\"76\":2,\"84\":1,\"88\":1,\"90\":1,\"98\":3,\"99\":1}}],[\"apirequest\",{\"0\":{\"0\":1,\"51\":1},\"1\":{\"18\":1,\"51\":1,\"84\":1}}],[\"api\",{\"1\":{\"7\":5,\"11\":1,\"12\":1,\"17\":1,\"40\":5,\"44\":1,\"45\":1,\"50\":1,\"73\":5,\"77\":1,\"78\":1,\"83\":1,\"84\":1,\"102\":3,\"103\":2,\"104\":3,\"106\":1,\"110\":3,\"111\":2,\"112\":3,\"114\":1,\"118\":3,\"119\":2,\"120\":3,\"122\":1}}],[\"anteriores\",{\"1\":{\"65\":1}}],[\"anterior\",{\"1\":{\"45\":1,\"50\":1}}],[\"antes\",{\"1\":{\"42\":1,\"48\":1}}],[\"anidados\",{\"1\":{\"40\":1,\"45\":1}}],[\"another\",{\"1\":{\"24\":1}}],[\"any\",{\"0\":{\"102\":1},\"1\":{\"8\":1}}],[\"an\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"15\":1,\"16\":1,\"17\":1}}],[\"and\",{\"1\":{\"2\":1,\"4\":1,\"5\":2,\"6\":2,\"7\":1,\"8\":2,\"9\":2,\"10\":1,\"11\":1,\"12\":1,\"14\":1,\"17\":1,\"18\":1,\"19\":5,\"22\":1,\"23\":1,\"24\":2,\"32\":1,\"40\":1,\"102\":1}}],[\"available\",{\"1\":{\"4\":1,\"21\":1}}],[\"alertas\",{\"1\":{\"52\":1}}],[\"alerting\",{\"1\":{\"19\":1}}],[\"almacenados\",{\"1\":{\"66\":1}}],[\"almacenada\",{\"1\":{\"43\":1}}],[\"almacenadas\",{\"1\":{\"42\":1}}],[\"almacenar\",{\"1\":{\"42\":1}}],[\"almacenará\",{\"1\":{\"42\":1,\"43\":1}}],[\"al\",{\"1\":{\"40\":1,\"52\":1}}],[\"allá\",{\"1\":{\"110\":1}}],[\"allows\",{\"1\":{\"18\":1,\"104\":1}}],[\"allowed\",{\"1\":{\"12\":1}}],[\"all\",{\"0\":{\"22\":1},\"1\":{\"2\":1,\"7\":2,\"8\":1,\"9\":1,\"22\":1,\"23\":1,\"32\":1,\"33\":1,\"35\":1,\"40\":1,\"68\":1,\"73\":1}}],[\"also\",{\"1\":{\"2\":1,\"7\":3,\"9\":1,\"33\":1}}],[\"a\",{\"1\":{\"1\":1,\"3\":1,\"5\":2,\"6\":1,\"7\":4,\"9\":1,\"10\":2,\"12\":3,\"13\":1,\"14\":1,\"15\":1,\"17\":3,\"18\":1,\"21\":1,\"24\":3,\"32\":1,\"40\":2,\"42\":1,\"45\":2,\"52\":2,\"65\":1,\"100\":2,\"104\":1,\"107\":2,\"108\":2}}],[\"🛠️\",{\"0\":{\"22\":1,\"23\":1,\"55\":1,\"56\":1,\"88\":1,\"89\":1}}],[\"🔥\",{\"0\":{\"19\":1,\"52\":1,\"85\":1}}],[\"🔎\",{\"0\":{\"18\":1,\"51\":1,\"84\":1}}],[\"👨🏻‍💻\",{\"0\":{\"1\":1,\"21\":1,\"34\":1,\"54\":1,\"67\":1,\"87\":1}}],[\"🚀\",{\"0\":{\"0\":1}}],[\"imágenes\",{\"1\":{\"48\":1}}],[\"image\",{\"1\":{\"15\":1}}],[\"img\",{\"1\":{\"0\":1,\"15\":1,\"48\":1,\"81\":1,\"105\":1,\"113\":1,\"121\":1}}],[\"if\",{\"0\":{\"12\":1,\"45\":1,\"78\":1},\"1\":{\"2\":1,\"8\":1,\"10\":2,\"12\":1,\"15\":1,\"16\":1,\"35\":1,\"45\":1,\"68\":1,\"78\":1,\"100\":1,\"102\":3,\"107\":1,\"108\":1,\"110\":1,\"118\":1}}],[\"id=\",{\"1\":{\"105\":1,\"113\":1,\"121\":1}}],[\"id标志中定义的任何内容之前\",{\"1\":{\"75\":1}}],[\"ids\",{\"1\":{\"33\":1,\"66\":1}}],[\"id\",{\"0\":{\"9\":1,\"42\":1,\"75\":1},\"1\":{\"2\":1,\"3\":3,\"9\":6,\"10\":2,\"14\":2,\"21\":4,\"35\":1,\"36\":3,\"42\":5,\"43\":2,\"47\":2,\"54\":4,\"68\":1,\"69\":3,\"75\":5,\"76\":2,\"80\":2,\"87\":4,\"99\":1,\"106\":1,\"114\":1,\"122\":1}}],[\"iterar\",{\"1\":{\"40\":3}}],[\"it\",{\"1\":{\"1\":1,\"3\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":3,\"13\":2,\"15\":1,\"17\":1,\"21\":1,\"23\":1,\"24\":2,\"33\":1,\"100\":1,\"102\":2,\"108\":1}}],[\"incluyendo\",{\"1\":{\"41\":1,\"52\":1}}],[\"including\",{\"1\":{\"8\":1,\"19\":1}}],[\"inside\",{\"1\":{\"21\":1}}],[\"instead\",{\"1\":{\"12\":1,\"102\":1}}],[\"intentará\",{\"1\":{\"49\":1}}],[\"internos\",{\"1\":{\"47\":1}}],[\"internal\",{\"1\":{\"14\":1}}],[\"intervención\",{\"1\":{\"52\":1}}],[\"intervention\",{\"1\":{\"19\":1}}],[\"intervalos\",{\"1\":{\"52\":1}}],[\"intervalo\",{\"1\":{\"44\":1}}],[\"intervals\",{\"1\":{\"19\":1}}],[\"interval\",{\"1\":{\"11\":1}}],[\"into\",{\"1\":{\"17\":2,\"24\":1,\"32\":1}}],[\"información\",{\"1\":{\"54\":1,\"55\":1}}],[\"information\",{\"1\":{\"21\":1,\"22\":1}}],[\"info\",{\"1\":{\"9\":1,\"22\":1,\"42\":1,\"55\":1,\"75\":1,\"88\":1,\"104\":1,\"112\":1,\"120\":1}}],[\"in\",{\"1\":{\"1\":2,\"2\":1,\"3\":2,\"5\":3,\"6\":2,\"8\":2,\"9\":3,\"10\":1,\"12\":2,\"17\":1,\"18\":1,\"19\":2,\"22\":3,\"33\":1,\"106\":1}}],[\"indexes\",{\"1\":{\"7\":1}}],[\"index\",{\"1\":{\"0\":1}}],[\"issue\",{\"1\":{\"107\":1,\"115\":1,\"123\":1}}],[\"is\",{\"1\":{\"1\":1,\"3\":2,\"4\":1,\"5\":2,\"6\":1,\"7\":4,\"8\":2,\"9\":3,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"15\":2,\"16\":1,\"17\":1,\"18\":1,\"23\":3,\"24\":2,\"104\":1}}],[\"io\",{\"1\":{\"0\":1,\"11\":1,\"12\":1,\"44\":1,\"45\":1,\"77\":1,\"78\":1,\"102\":3,\"110\":3,\"118\":3}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
