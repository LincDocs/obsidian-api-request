import{_ as e,e as i,f as a,o as n}from"./app-DZbIiTCC.js";const t={};function l(d,s){return n(),i("div",null,s[0]||(s[0]=[a('<h1 id="üë®üèª‚Äçüíª-codeblocks" tabindex="-1"><a class="header-anchor" href="#üë®üèª‚Äçüíª-codeblocks"><span>üë®üèª‚Äçüíª Codeblocks</span></a></h1><p>The <code>codeblock</code> is a versatile block that can be used to write code in different languages. In this case, we will use it to make API requests.</p><h2 id="üè≥Ô∏è-flags" tabindex="-1"><a class="header-anchor" href="#üè≥Ô∏è-flags"><span>üè≥Ô∏è Flags</span></a></h2><p>Flags are the way to specify the parameters of our request.</p><table><thead><tr><th>Flag</th><th>Default</th></tr></thead><tbody><tr><td><a href="#url">url</a></td><td></td></tr><tr><td><a href="#method">method</a></td><td>GET</td></tr><tr><td><a href="#body">body</a></td><td></td></tr><tr><td><a href="#headers">headers</a></td><td></td></tr><tr><td><a href="#show">show</a></td><td>ALL</td></tr><tr><td><a href="#req-uuid">req-uuid</a></td><td>req-general</td></tr><tr><td><a href="#disabled">disabled</a></td><td></td></tr><tr><td><a href="#save-as">save-as</a></td><td></td></tr><tr><td><a href="#auto-update">auto-update</a></td><td></td></tr><tr><td><a href="#format">format</a></td><td></td></tr><tr><td><a href="#properties">properties</a></td><td></td></tr></tbody></table><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>url</span></a></h3><p>Is the only <strong>required</strong> flag. It specifies the endpoint of the request.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># this is just a comment</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/{{this.id}}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;Where <code>{{this.id}}</code> is a variable (<code>id</code>) defined in the frontmatter.&quot;</p><h3 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method</span></a></h3><p>Specifies the request method. The default value is <code>GET</code> and the available methods are:</p><ul><li>GET</li><li>POST</li><li>PUT</li><li>DELETE</li></ul><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="body" tabindex="-1"><a class="header-anchor" href="#body"><span>body</span></a></h3><p>Specifies the body of the request. The default value is an empty object. The data should be in JSON format, separating key and value with a colon plus space (<code>, </code>).</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">body: {&quot;title&quot;: {{this.filename}}, &quot;body&quot;: &quot;bar&quot;, &quot;userId&quot;: 1}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;Where <code>{{this.filename}}</code> is the name of the working file.&quot;</p><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3><p>Specifies the headers of the request. The default value is an empty object. The data should be in JSON format, separating key and value with a colon plus space (<code>, </code>).</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">headers: {&quot;Content-type&quot;: &quot;application/json; charset=UTF-8&quot;}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="show" tabindex="-1"><a class="header-anchor" href="#show"><span>show</span></a></h3><p>Specifies the response data to display. See <a href="https://github.com/JSONPath-Plus/JSONPath?tab=readme-ov-file#syntax-through-examples" target="_blank" rel="noopener noreferrer">JSONPath examples</a>, or try the online tool by <a href="https://jsonpath-plus.github.io/JSONPath/demo/" target="_blank" rel="noopener noreferrer">jsonpath-plus</a>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://api.chess.com/pub/player/hikaru/stats</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $[&#39;chess_daily&#39;][&#39;last&#39;][&#39;rating&#39;]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Multiple outputs can be displayed by using <code>[]</code>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://api.chess.com/pub/player/hikaru/stats</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.chess_daily[last,best].rating</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or you can also use <code>+</code> to get multiple outputs.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://api.chess.com/pub/player/hikaru/stats</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.chess_daily[last,best].rating + $.chess960_daily[last,best].rating</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Looping over an array is also possible. The following example retrieves the city from all users.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $..address.city</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Looping over a specified number of elements of the array is also possible.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $..[:3].address.city</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It&#39;s also possible to loop over a specified range of indexes of the array.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $..[3,2,6].address.city</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can access the last element using <code>(@.length-1)</code> or just <code>[-1:]</code>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://api.modrinth.com/v2/project/distanthorizons</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.game_versions[(@.length-1)]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To access multiple elements at the same time.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&amp;user=rooyca&amp;api_key=API_KEY&amp;format=json&amp;limit=4</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $..recenttracks.track[0:][streamable,name,artist]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="req-uuid" tabindex="-1"><a class="header-anchor" href="#req-uuid"><span>req-uuid</span></a></h3><p>Specifies the unique identifier of the request. This is useful when we want to store the response in <code>localStorage</code> and use it in other blocks or notes.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-uuid: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Stored responses can be accessed using the <code>req-uuid</code> (which won&#39;t trigger a new request).</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-uuid: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Responses can also be accessed using <a href="https://blacksmithgu.github.io/dataview/" target="_blank" rel="noopener noreferrer">dataview</a>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```dataview</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">dv.paragraph(localStorage.getItem(&quot;req-UUID&quot;))</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! info &quot;Is mandatory to use <code>req-</code> before whatever you defined in <code>req-uuid</code> flag.&quot;</p><p>To remove responses from localStorage, run:</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```dataview</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">localStorage.removeItem(&quot;req-name&quot;)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To remove responses, go to settings and click over the response you want to delete.</p><h3 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled"><span>disabled</span></a></h3><p>Disables the request. The codeblock won&#39;t be executed.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-uuid: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">disabled</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="save-as" tabindex="-1"><a class="header-anchor" href="#save-as"><span>save-as</span></a></h3><p>Specifies the path to save the response. It&#39;ll save the entire response. A file extension is required. It won&#39;t create directories.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">save-as: posts/1.json</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="auto-update" tabindex="-1"><a class="header-anchor" href="#auto-update"><span>auto-update</span></a></h3><p>If present, the codeblock will automatically update the response every time is possible. This is only needed when using the flag <code>req-uuid</code>, because the default behavior of the codeblock is to run every time the note is loaded.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-uuid: firstPost</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">auto-update</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">save-as: posts/1.json</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>format</span></a></h3><p>Specifies the format in which the response should be displayed. It can be any string (including <code>html</code>). If more than one output is specified, more then one format should be specified, otherwise it&#39;d just render the first output.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.[title,body]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">format: &lt;h1&gt;{}&lt;/h1&gt; &lt;p&gt;{}&lt;/p&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;In this example, first <code>{}</code> will be replaced with the <em>title</em>, and second <code>{}</code> will be replaced with the <em>body</em>.&quot;</p><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>properties</span></a></h3><p>!!! warning &quot;To use this flag you need a JSON response and the <code>show</code> flag&quot;</p><p>Specifies the frontmatter properties to update with the response. The data should be strings separated by commas. To set internal links use the this <code>[[..]]</code> syntax.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.[id,title]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">properties: id, title</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',65)]))}const h=e(t,[["render",l],["__file","codeblocks.html.vue"]]),o=JSON.parse('{"path":"/docs/en/codeblocks.html","title":"üë®üèª‚Äçüíª Codeblocks","lang":"zh-CN","frontmatter":{"description":"üë®üèª‚Äçüíª Codeblocks The codeblock is a versatile block that can be used to write code in different languages. In this case, we will use it to make API requests. üè≥Ô∏è Flags Flags a...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-api-request/docs/en/codeblocks.html"}],["meta",{"property":"og:site_name","content":"obsidian-api-request"}],["meta",{"property":"og:title","content":"üë®üèª‚Äçüíª Codeblocks"}],["meta",{"property":"og:description","content":"üë®üèª‚Äçüíª Codeblocks The codeblock is a versatile block that can be used to write code in different languages. In this case, we will use it to make API requests. üè≥Ô∏è Flags Flags a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"üë®üèª‚Äçüíª Codeblocks\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/obsidian-api-request/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.65,"words":795},"filePathRelative":"docs/en/codeblocks.md","excerpt":"\\n<p>The <code>codeblock</code> is a versatile block that can be used to write code in different languages. In this case, we will use it to make API requests.</p>\\n<h2>üè≥Ô∏è Flags</h2>\\n<p>Flags are the way to specify the parameters of our request.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Flag</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\"#url\\">url</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#method\\">method</a></td>\\n<td>GET</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#body\\">body</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#headers\\">headers</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#show\\">show</a></td>\\n<td>ALL</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#req-uuid\\">req-uuid</a></td>\\n<td>req-general</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#disabled\\">disabled</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#save-as\\">save-as</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#auto-update\\">auto-update</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#format\\">format</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#properties\\">properties</a></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"index","link":"docs/en/index.html"}],"localMap":{"nodes":[{"id":"docs/en/codeblocks.md","value":{"title":"codeblocks","path":"docs/en/codeblocks.md","outlink":[],"backlink":["docs/en/index.md"]}},{"id":"docs/en/index.md","value":{"title":"index","path":"docs/en/index.md","outlink":[],"backlink":[]}}],"links":[{"source":"docs/en/index.md","target":"docs/en/codeblocks.md"}]}}}');export{h as comp,o as data};
