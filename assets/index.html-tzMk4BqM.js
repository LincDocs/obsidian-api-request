import{_ as a,e as d,f as n,g as s,j as i,h as o,i as l,r,o as p}from"./app-DZbIiTCC.js";const c={};function h(k,e){const t=r("RouteLink");return p(),d("div",null,[e[13]||(e[13]=n('<h1 id="🔎-概述" tabindex="-1"><a class="header-anchor" href="#🔎-概述"><span>🔎 概述</span></a></h1><p>APIRequest (APIR) 是笔记应用 <a href="https://obsidian.md/" target="_blank" rel="noopener noreferrer">Obsidian</a> 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。</p><h2 id="🔥-功能" tabindex="-1"><a class="header-anchor" href="#🔥-功能"><span>🔥 功能</span></a></h2><ul><li>使用各种方法执行 HTTP 请求，例如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 和 <code>DELETE</code>。</li><li>在代码块内利用前言中的变量。</li><li>将响应保存在 <code>localStorage</code> 中，以方便访问和重用。</li><li>根据需要禁用代码块以优化性能。</li><li>以指定的间隔多次重复请求，促进自动化任务或连续数据检索而无需人工干预。</li></ul><h2 id="⚡-如何使用" tabindex="-1"><a class="header-anchor" href="#⚡-如何使用"><span>⚡ 如何使用</span></a></h2><h3 id="👨🏻‍💻-代码块" tabindex="-1"><a class="header-anchor" href="#👨🏻‍💻-代码块"><span>👨🏻‍💻 代码块</span></a></h3>',6)),s("p",null,[e[1]||(e[1]=i("要使用它，请创建一个代码块，并将语言设置为 ")),e[2]||(e[2]=s("code",null,"req",-1)),e[3]||(e[3]=i("。在代码块内，您可以指定")),e[4]||(e[4]=s("code",null,"url",-1)),e[5]||(e[5]=i("、")),e[6]||(e[6]=s("code",null,"method",-1)),e[7]||(e[7]=i("、")),e[8]||(e[8]=s("code",null,"body",-1)),e[9]||(e[9]=i("、")),e[10]||(e[10]=s("code",null,"headers",-1)),e[11]||(e[11]=i(" 等。有关更多信息，请参阅")),o(t,{to:"/docs/zh/codeblocks.html#flags"},{default:l(()=>e[0]||(e[0]=[i("可用标志")])),_:1}),e[12]||(e[12]=i("。"))]),e[14]||(e[14]=n(`<div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`req</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://my-json-server.typicode.com/typicode/demo/comments</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">body: {&quot;id&quot;:1}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">headers: {&quot;Accept&quot;: &quot;application/json&quot;}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: $.id</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-uuid: id-persona</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">disabled</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`\`\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const m=a(c,[["render",h],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/docs/zh/","title":"🔎 概述","lang":"zh-CN","frontmatter":{"description":"🔎 概述 APIRequest (APIR) 是笔记应用 Obsidian 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。 🔥 功能 使用各种方法执行 HTTP 请求，例如 GET、POST、PUT 和 DELETE。 在代码块内利用前言中的变量。 将响应保存在 localStorage 中，以方便访问和重用。 根据需要禁用...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-api-request/docs/zh/"}],["meta",{"property":"og:site_name","content":"obsidian-api-request"}],["meta",{"property":"og:title","content":"🔎 概述"}],["meta",{"property":"og:description","content":"🔎 概述 APIRequest (APIR) 是笔记应用 Obsidian 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。 🔥 功能 使用各种方法执行 HTTP 请求，例如 GET、POST、PUT 和 DELETE。 在代码块内利用前言中的变量。 将响应保存在 localStorage 中，以方便访问和重用。 根据需要禁用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🔎 概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/obsidian-api-request/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"docs/zh/index.md","excerpt":"\\n<p>APIRequest (APIR) 是笔记应用 <a href=\\"https://obsidian.md/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Obsidian</a> 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。</p>\\n<h2>🔥 功能</h2>\\n<ul>\\n<li>使用各种方法执行 HTTP 请求，例如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 和 <code>DELETE</code>。</li>\\n<li>在代码块内利用前言中的变量。</li>\\n<li>将响应保存在 <code>localStorage</code> 中，以方便访问和重用。</li>\\n<li>根据需要禁用代码块以优化性能。</li>\\n<li>以指定的间隔多次重复请求，促进自动化任务或连续数据检索而无需人工干预。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"codeblocks","link":"docs/zh/codeblocks.html"}],"backlink":[{"title":"index","link":"docs/index.html"}],"localMap":{"nodes":[{"id":"docs/zh/index.md","value":{"title":"index","path":"docs/zh/index.md","outlink":["docs/zh/codeblocks.md"],"backlink":["docs/index.md"]}},{"id":"docs/zh/codeblocks.md","value":{"title":"codeblocks","path":"docs/zh/codeblocks.md","outlink":[],"backlink":[]}},{"id":"docs/index.md","value":{"title":"index","path":"docs/index.md","outlink":[],"backlink":[]}}],"links":[{"source":"docs/zh/index.md","target":"docs/zh/codeblocks.md"},{"source":"docs/index.md","target":"docs/zh/index.md"}]}}}');export{m as comp,b as data};
