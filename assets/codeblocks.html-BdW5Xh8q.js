import{_ as s,c as i,a,o as n}from"./app-vjFV_IuD.js";const t={};function l(d,e){return n(),i("div",null,e[0]||(e[0]=[a('<h1 id="üë®üèª‚Äçüíª-codeblocks" tabindex="-1"><a class="header-anchor" href="#üë®üèª‚Äçüíª-codeblocks"><span>üë®üèª‚Äçüíª Codeblocks</span></a></h1><p>The <code>codeblock</code> is a versatile block that can be used to write code in different languages. In this case, we will use it to make requests.</p><h2 id="üè≥Ô∏è-flags" tabindex="-1"><a class="header-anchor" href="#üè≥Ô∏è-flags"><span>üè≥Ô∏è Flags</span></a></h2><p>Flags are the way to specify the parameters of our request and also the format in which we want our response.</p><table><thead><tr><th>Flag</th><th>Default</th></tr></thead><tbody><tr><td><a href="#url">url</a></td><td></td></tr><tr><td><a href="#method">method</a></td><td>GET</td></tr><tr><td><a href="#body">body</a></td><td></td></tr><tr><td><a href="#headers">headers</a></td><td></td></tr><tr><td><a href="#show">show</a></td><td>ALL</td></tr><tr><td><a href="#format">format</a></td><td><code>{}</code></td></tr><tr><td><a href="#req-id">req-id</a></td><td>req-general</td></tr><tr><td><a href="#disabled">disabled</a></td><td></td></tr><tr><td><a href="#req-repeat">req-repeat</a></td><td>1t@1s</td></tr><tr><td><a href="#notify-if">notify-if</a></td><td></td></tr><tr><td><a href="#save-to">save-to</a></td><td></td></tr><tr><td><a href="#properties">properties</a></td><td></td></tr><tr><td><a href="#render">render</a></td><td>false</td></tr><tr><td><a href="#res-type">res-type</a></td><td></td></tr><tr><td><a href="#maketable">maketable</a></td><td></td></tr></tbody></table><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>url</span></a></h3><p>Is the only <strong>required</strong> flag. It specifies the endpoint of the request. Variables defined in the <code>frontmatter</code> can be used.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/{{this.id}}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;Where <code>{{this.id}}</code> is a variable (<code>id</code>) defined in the frontmatter.&quot;</p><h3 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method</span></a></h3><p>Specifies the request method. The default value is <code>GET</code> and the available values are:</p><ul><li>GET</li><li>POST</li><li>PUT</li><li>DELETE</li></ul><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="body" tabindex="-1"><a class="header-anchor" href="#body"><span>body</span></a></h3><p>Specifies the body of the request. The default value is an empty object. The data should be in JSON format with double quotes separating the keys and values with a colon and space. Variables defined in the <code>frontmatter</code> can be used.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">body: {&quot;title&quot;: {{this.title}}, &quot;body&quot;: &quot;bar&quot;, &quot;userId&quot;: 1}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;Where <code>{{this.title}}</code> is a variable (<code>title</code>) defined in the frontmatter.&quot;</p><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3><p>Specifies the headers of the request. The default value is an empty object. The data should be in JSON format with double quotes separating the keys and values with a colon and space. Variables defined in the <code>frontmatter</code> can be used.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">method: post</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">headers: {&quot;Content-type&quot;: &quot;application/json; charset=UTF-8&quot;}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="show" tabindex="-1"><a class="header-anchor" href="#show"><span>show</span></a></h3><p>Specifies the response data to display. Accessing nested objects is done using a right arrow <code>-&gt;</code>. The default value is <code>ALL</code>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://api.chess.com/pub/player/hikaru/stats</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: chess_daily -&gt; last -&gt; rating</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Multiple outputs can be displayed by separating them with a comma.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://api.chess.com/pub/player/hikaru/stats</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: chess_daily -&gt; last -&gt; rating, chess_daily -&gt; best -&gt; rating</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">format: &lt;p&gt;Last game: {}&lt;/p&gt; &lt;strong&gt;Best game: {}&lt;/strong&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">render</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Looping over an array is also possible using <code>{..}</code>. The following example retrieves the city from all users.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: {..} -&gt; address -&gt; city</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Looping over a specified number of elements of the array is also possible using <code>{n..n}</code>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: {0..2} -&gt; address -&gt; city</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It&#39;s also possible to loop over a specified range of indexes of the array using <code>{n-n-n}</code>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: {0-2-1} -&gt; address -&gt; city</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can access the last element using <code>{-1}</code>...</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url:https://api.modrinth.com/v2/project/distanthorizons</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: game_versions -&gt; {-1}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>... or get the length of the array using <code>{len}</code>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url:https://api.modrinth.com/v2/project/distanthorizons</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: game_versions -&gt; {len}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To access multiple elements at the same time when using <code>{..}</code> use <code>&amp;</code> to separate the keys and use <code>.</code> to access the values.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&amp;user=rooyca&amp;api_key=API_KEY&amp;format=json&amp;limit=4</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: recenttracks -&gt; track -&gt; {..} -&gt; name &amp; artist.#text &amp; streamable</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">maketable: name, artist, stream</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>format</span></a></h3><p>Specifies the format in which the response should be displayed. The default value is <code>{}</code>. It can be any string (including <code>markdown</code> and <code>html</code>). If more than one output is specified, more then one format should be specified, otherwise, the same format will be applied to all outputs.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: title, body</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">format: &lt;h1&gt;{}&lt;/h1&gt; &lt;p&gt;{}&lt;/p&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">render</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;In this example, first <code>{}</code> will be replaced by the title, and second <code>{}</code> will be replaced by the body.&quot;</p><h3 id="req-id" tabindex="-1"><a class="header-anchor" href="#req-id"><span>req-id</span></a></h3><p>Specifies the id of the request. The default value is <code>req-general</code>. This is useful when we want to store the response in <code>localStorage</code> and use it in other blocks or notes.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-id: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Stored responses can be accessed using the <code>req-id</code> with the <code>disabled</code> flag (which won&#39;t trigger a new request).</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-id: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">disabled</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Responses can also be accessed using <a href="https://blacksmithgu.github.io/dataview/" target="_blank" rel="noopener noreferrer">dataview</a>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```dataview</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">dv.paragraph(localStorage.getItem(&quot;req-name&quot;))</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! info &quot;Is mandatory to use <code>req-</code> before whatever you defined in <code>req-id</code> flag.&quot;</p><p>To remove responses from localStorage, run:</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```dataview</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">localStorage.removeItem(&quot;req-name&quot;)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To remove all responses, go to settings and click on the <code>Clear ID&#39;s</code> button.</p><h3 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled"><span>disabled</span></a></h3><p>Disables the request. If a <code>req-id</code> is specified, APIR will check for the response in <code>localStorage</code>. If it&#39;s not found, it will make a new request and store it. After that, APIR will use the stored response.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/users/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-id: name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">disabled</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="req-repeat" tabindex="-1"><a class="header-anchor" href="#req-repeat"><span>req-repeat</span></a></h3><p>!!! warning &quot;This only works with JSON responses&quot;</p><p>Specifies the number of times the request should be repeated and the interval between each repetition. The default value is <code>1@1</code> (read as <code>X time(s) every X second(s)</code>).</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: api.coincap.io/v2/rates/bitcoin</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-repeat: 5@5</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">render</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="notify-if" tabindex="-1"><a class="header-anchor" href="#notify-if"><span>notify-if</span></a></h3><p>!!! warning &quot;This only works with JSON responses&quot;</p><p>Specifies the condition to trigger a notification. Can be used to monitor a specific value. The path syntax used to access nested objects varies from the <code>show</code> flag, here dots are used instead of arrows and not spaces are allowed in the path.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: api.coincap.io/v2/rates/bitcoin</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">req-repeat: 5@5</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">notify-if: data.rateUsd &lt; 69889</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">render</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;In the example above, a notification will be triggered everytime the value of <code>data.rateUsd</code> is less than <code>69889</code>.&quot;</p><h3 id="save-to" tabindex="-1"><a class="header-anchor" href="#save-to"><span>save-to</span></a></h3><p>Specifies the path to save the response. It&#39;ll save the entire response. A file extension is required. It won&#39;t create directories.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">save-to: posts/1.json</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>properties</span></a></h3><p>!!! warning &quot;To use this flag you need a JSON response and the <code>show</code> flag&quot;</p><p>Specifies the frontmatter properties to update with the response. The data should be strings separated by commas. To set internal links use the <code>[[..]]</code> syntax.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: id, title</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">properties: id, title</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render"><span>render</span></a></h3><p>If present the response will be rendered as HTML. It&#39;s useful when the response is an image or a table. The HTML is sanitized to prevent XSS attacks.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/photos/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: url</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">format: ![img]({})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">render</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="res-type" tabindex="-1"><a class="header-anchor" href="#res-type"><span>res-type</span></a></h2><p>Specifies the type of the response. If this flag is not present the plugin will try to guess the type based on the response content-type. This could be used <em>as an optional fallback feature</em>.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: https://jsonplaceholder.typicode.com/posts/1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">res-type: json</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="maketable" tabindex="-1"><a class="header-anchor" href="#maketable"><span>maketable</span></a></h2><p>Converts the response into a table. It&#39;s useful when the response is an array of objects. This flags expects a list of titles separated by commas.</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```req </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url: http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&amp;user=rooyca&amp;api_key=API_KEY&amp;format=json&amp;limit=4</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show: recenttracks -&gt; track -&gt; {..} -&gt; name &amp; artist.#text &amp; streamable</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">maketable: name, artist, stream</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note &quot;In the example above, the response will be converted into a table with the titles <code>name</code>, <code>artist</code>, and <code>stream</code>.&quot;</p>',81)]))}const h=s(t,[["render",l],["__file","codeblocks.html.vue"]]),o=JSON.parse('{"path":"/docs/en/codeblocks.html","title":"üë®üèª‚Äçüíª Codeblocks","lang":"zh-CN","frontmatter":{"description":"üë®üèª‚Äçüíª Codeblocks The codeblock is a versatile block that can be used to write code in different languages. In this case, we will use it to make requests. üè≥Ô∏è Flags Flags are t...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-api-request/docs/en/codeblocks.html"}],["meta",{"property":"og:site_name","content":"obsidian-api-request"}],["meta",{"property":"og:title","content":"üë®üèª‚Äçüíª Codeblocks"}],["meta",{"property":"og:description","content":"üë®üèª‚Äçüíª Codeblocks The codeblock is a versatile block that can be used to write code in different languages. In this case, we will use it to make requests. üè≥Ô∏è Flags Flags are t..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"üë®üèª‚Äçüíª Codeblocks\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/obsidian-api-request/\\"}]}"]]},"headers":[{"level":1,"title":"üë®üèª‚Äçüíª Codeblocks","slug":"üë®üèª‚Äçüíª-codeblocks","link":"#üë®üèª‚Äçüíª-codeblocks","children":[{"level":2,"title":"üè≥Ô∏è Flags","slug":"üè≥Ô∏è-flags","link":"#üè≥Ô∏è-flags","children":[{"level":3,"title":"url","slug":"url","link":"#url","children":[]},{"level":3,"title":"method","slug":"method","link":"#method","children":[]},{"level":3,"title":"body","slug":"body","link":"#body","children":[]},{"level":3,"title":"headers","slug":"headers","link":"#headers","children":[]},{"level":3,"title":"show","slug":"show","link":"#show","children":[]},{"level":3,"title":"format","slug":"format","link":"#format","children":[]},{"level":3,"title":"req-id","slug":"req-id","link":"#req-id","children":[]},{"level":3,"title":"disabled","slug":"disabled","link":"#disabled","children":[]},{"level":3,"title":"req-repeat","slug":"req-repeat","link":"#req-repeat","children":[]},{"level":3,"title":"notify-if","slug":"notify-if","link":"#notify-if","children":[]},{"level":3,"title":"save-to","slug":"save-to","link":"#save-to","children":[]},{"level":3,"title":"properties","slug":"properties","link":"#properties","children":[]},{"level":3,"title":"render","slug":"render","link":"#render","children":[]}]},{"level":2,"title":"res-type","slug":"res-type","link":"#res-type","children":[]},{"level":2,"title":"maketable","slug":"maketable","link":"#maketable","children":[]}]}],"git":{},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"docs/en/codeblocks.md","excerpt":"\\n<p>The <code>codeblock</code> is a versatile block that can be used to write code in different languages. In this case, we will use it to make requests.</p>\\n<h2>üè≥Ô∏è Flags</h2>\\n<p>Flags are the way to specify the parameters of our request and also the format in which we want our response.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Flag</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\"#url\\">url</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#method\\">method</a></td>\\n<td>GET</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#body\\">body</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#headers\\">headers</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#show\\">show</a></td>\\n<td>ALL</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#format\\">format</a></td>\\n<td><code>{}</code></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#req-id\\">req-id</a></td>\\n<td>req-general</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#disabled\\">disabled</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#req-repeat\\">req-repeat</a></td>\\n<td>1t@1s</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#notify-if\\">notify-if</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#save-to\\">save-to</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#properties\\">properties</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#render\\">render</a></td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td><a href=\\"#res-type\\">res-type</a></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><a href=\\"#maketable\\">maketable</a></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"index","link":"docs/en/index.html"}],"localMap":{"nodes":[{"id":"docs/en/codeblocks.md","value":{"title":"codeblocks","path":"docs/en/codeblocks.md","outlink":[],"backlink":["docs/en/index.md"]}},{"id":"docs/en/index.md","value":{"title":"index","path":"docs/en/index.md","outlink":[],"backlink":[]}}],"links":[{"source":"docs/en/index.md","target":"docs/en/codeblocks.md"}]}}}');export{h as comp,o as data};
