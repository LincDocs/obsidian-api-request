import{_ as r,c as p,a as n,e as t,b as i,d as o,w as d,r as s,o as c}from"./app-GDRiPp-6.js";const u={},m={href:"https://obsidian.md/",target:"_blank",rel:"noopener noreferrer"};function b(k,e){const a=s("ExternalLinkIcon"),l=s("RouteLink");return c(),p("div",null,[e[19]||(e[19]=n("h1",{id:"🔎-概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#🔎-概述"},[n("span",null,"🔎 概述")])],-1)),n("p",null,[e[1]||(e[1]=t("APIRequest (APIR) 是笔记应用 ")),n("a",m,[e[0]||(e[0]=t("Obsidian")),i(a)]),e[2]||(e[2]=t(" 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。"))]),e[20]||(e[20]=o('<h2 id="🔥-功能" tabindex="-1"><a class="header-anchor" href="#🔥-功能"><span>🔥 功能</span></a></h2><ul><li>使用各种方法执行 HTTP 请求，例如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 和 <code>DELETE</code>。</li><li>接收不同格式的响应，包括 JSON、HTML 和 Markdown。</li><li>在代码块内利用前言中的变量。</li><li>将响应保存在 <code>localStorage</code> 中，以方便访问和重用。</li><li>根据需要禁用代码块以优化性能。</li><li>以指定的间隔多次重复请求，促进自动化任务或连续数据检索而无需人工干预。</li><li>当特定值满足预定义条件时接收通知，从而实现主动监控和警报。</li><li>定义执行请求的快捷方式，通过快速访问常用请求来提高效率和用户体验。</li><li>显示响应中的特定值，提供对数据呈现的精细控制。</li></ul><h2 id="⚡-如何使用" tabindex="-1"><a class="header-anchor" href="#⚡-如何使用"><span>⚡ 如何使用</span></a></h2><h3 id="👨🏻‍💻-代码块" tabindex="-1"><a class="header-anchor" href="#👨🏻‍💻-代码块"><span>👨🏻‍💻 代码块</span></a></h3>',4)),n("p",null,[e[4]||(e[4]=t("要使用它，请创建一个代码块，并将语言设置为 ")),e[5]||(e[5]=n("code",null,"req",-1)),e[6]||(e[6]=t("。在代码块内，您可以指定")),e[7]||(e[7]=n("code",null,"url",-1)),e[8]||(e[8]=t("、")),e[9]||(e[9]=n("code",null,"method",-1)),e[10]||(e[10]=t("、")),e[11]||(e[11]=n("code",null,"body",-1)),e[12]||(e[12]=t("、")),e[13]||(e[13]=n("code",null,"headers",-1)),e[14]||(e[14]=t("、")),e[15]||(e[15]=n("code",null,"format",-1)),e[16]||(e[16]=t("等。有关更多信息，请参阅")),i(l,{to:"/docs/zh/codeblocks.html#flags"},{default:d(()=>e[3]||(e[3]=[t("可用标志")])),_:1}),e[17]||(e[17]=t("。"))]),e[21]||(e[21]=o(`<div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">req</span>
<span class="token code-block language-req">url: https://my-json-server.typicode.com/typicode/demo/comments
method: post
body: {&quot;id&quot;:1}
headers: {&quot;Accept&quot;: &quot;application/json&quot;}
show: id
format: &lt;h1&gt;{}&lt;/h1&gt;
req-id: id-persona
disabled</span>
<span class="token punctuation">\`\`\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🛠️-设置-尚未拥有所有功能" tabindex="-1"><a class="header-anchor" href="#🛠️-设置-尚未拥有所有功能"><span>🛠️ 设置（尚未拥有所有功能）</span></a></h3><p>!!! info &quot;所有参数都可以在设置中定义&quot;</p><p>按 <code>Ctrl+P</code> 并搜索 <code>APIR</code>。有两个选项：</p><ol><li>在模态中显示响应</li><li>将响应粘贴到当前文档中（在当前行）</li></ol>`,5)),n("p",null,[i(l,{to:"/docs/zh/settings.html"},{default:d(()=>e[18]||(e[18]=[t("更多信息")])),_:1})])])}const g=r(u,[["render",b],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/docs/zh/","title":"🔎 概述","lang":"zh-CN","frontmatter":{"description":"🔎 概述 APIRequest (APIR) 是笔记应用 Obsidian 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。 🔥 功能 使用各种方法执行 HTTP 请求，例如 GET、POST、PUT 和 DELETE。 接收不同格式的响应，包括 JSON、HTML 和 Markdown。 在代码块内利用前言中的变量。 将响应...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-api-request/docs/zh/"}],["meta",{"property":"og:site_name","content":"obsidian-api-request"}],["meta",{"property":"og:title","content":"🔎 概述"}],["meta",{"property":"og:description","content":"🔎 概述 APIRequest (APIR) 是笔记应用 Obsidian 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。 🔥 功能 使用各种方法执行 HTTP 请求，例如 GET、POST、PUT 和 DELETE。 接收不同格式的响应，包括 JSON、HTML 和 Markdown。 在代码块内利用前言中的变量。 将响应..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LincDocs"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🔎 概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/obsidian-api-request/\\"}]}"]]},"headers":[{"level":1,"title":"🔎 概述","slug":"🔎-概述","link":"#🔎-概述","children":[{"level":2,"title":"🔥 功能","slug":"🔥-功能","link":"#🔥-功能","children":[]},{"level":2,"title":"⚡ 如何使用","slug":"⚡-如何使用","link":"#⚡-如何使用","children":[{"level":3,"title":"👨🏻‍💻 代码块","slug":"👨🏻‍💻-代码块","link":"#👨🏻‍💻-代码块","children":[]},{"level":3,"title":"🛠️ 设置（尚未拥有所有功能）","slug":"🛠️-设置-尚未拥有所有功能","link":"#🛠️-设置-尚未拥有所有功能","children":[]}]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.27,"words":380},"filePathRelative":"docs/zh/index.md","excerpt":"\\n<p>APIRequest (APIR) 是笔记应用 <a href=\\"https://obsidian.md/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Obsidian</a> 的一个插件，它允许您向 api 或其他来源发出请求并在笔记中显示响应。</p>\\n<h2>🔥 功能</h2>\\n<ul>\\n<li>使用各种方法执行 HTTP 请求，例如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 和 <code>DELETE</code>。</li>\\n<li>接收不同格式的响应，包括 JSON、HTML 和 Markdown。</li>\\n<li>在代码块内利用前言中的变量。</li>\\n<li>将响应保存在 <code>localStorage</code> 中，以方便访问和重用。</li>\\n<li>根据需要禁用代码块以优化性能。</li>\\n<li>以指定的间隔多次重复请求，促进自动化任务或连续数据检索而无需人工干预。</li>\\n<li>当特定值满足预定义条件时接收通知，从而实现主动监控和警报。</li>\\n<li>定义执行请求的快捷方式，通过快速访问常用请求来提高效率和用户体验。</li>\\n<li>显示响应中的特定值，提供对数据呈现的精细控制。</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"codeblocks","link":"docs/zh/codeblocks.html"},{"title":"settings","link":"docs/zh/settings.html"}],"backlink":[],"localMap":{"nodes":[{"id":"docs/zh/index.md","value":{"title":"index","path":"docs/zh/index.md","outlink":["docs/zh/codeblocks.md","docs/zh/settings.md"],"backlink":[]}},{"id":"docs/zh/codeblocks.md","value":{"title":"codeblocks","path":"docs/zh/codeblocks.md","outlink":[],"backlink":[]}},{"id":"docs/zh/settings.md","value":{"title":"settings","path":"docs/zh/settings.md","outlink":[],"backlink":[]}}],"links":[{"source":"docs/zh/index.md","target":"docs/zh/codeblocks.md"},{"source":"docs/zh/index.md","target":"docs/zh/settings.md"}]}}}');export{g as comp,v as data};
